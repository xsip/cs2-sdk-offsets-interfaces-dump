// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif





namespace CS2 {
	namespace compositematerialslib {
		class CompositeMaterialAssemblyProcedure_t;
		class CompositeMaterial_t;
	}
}
namespace CS2 {
	namespace compositematerialslib {
		class CompositeMaterialEditorPoint_t  {
		public:
			// GlobalTypes::CResourceNameTyped< GlobalTypes::CWeakHandle< InfoForResourceTypeCModel > > m_ModelName; // 0x0 | Schema_Atomic | Size: 0xe0
			char  m_ModelName[0xe0]; // 0x0 | Schema_Atomic | Size: 0xe0
			int32_t m_nSequenceIndex; // 0xe0 | Schema_Builtin | Size: 0x4
			float32 m_flCycle; // 0xe4 | Schema_Builtin | Size: 0x4
			GlobalTypes::KeyValues3 m_KVModelStateChoices; // 0xe8 | Schema_Atomic | Size: 0x10
			bool m_bEnableChildModel; // 0xf8 | Schema_Builtin | Size: 0x1
			S2_PAD(0x7);
			// GlobalTypes::CResourceNameTyped< GlobalTypes::CWeakHandle< InfoForResourceTypeCModel > > m_ChildModelName; // 0x100 | Schema_Atomic | Size: 0xe0
			char  m_ChildModelName[0xe0]; // 0x100 | Schema_Atomic | Size: 0xe0
			GlobalTypes::CUtlVector< compositematerialslib::CompositeMaterialAssemblyProcedure_t > m_vecCompositeMaterialAssemblyProcedures; // 0x1e0 | Schema_Atomic | Size: 0x18
			// char  m_vecCompositeMaterialAssemblyProcedures[0x18]; // 0x1e0 | Schema_Atomic | Size: 0x18
			// GlobalTypes::CUtlVector< compositematerialslib::CompositeMaterialAssemblyProcedure_t > m_vecCompositeMaterialAssemblyProcedures; // 0x1e0 | Schema_Atomic | Size: 0x18
			GlobalTypes::CUtlVector< compositematerialslib::CompositeMaterial_t > m_vecCompositeMaterials; // 0x1f8 | Schema_Atomic | Size: 0x18
			// char  m_vecCompositeMaterials[0x18]; // 0x1f8 | Schema_Atomic | Size: 0x18
			// GlobalTypes::CUtlVector< compositematerialslib::CompositeMaterial_t > m_vecCompositeMaterials; // 0x1f8 | Schema_Atomic | Size: 0x18
			S2_PAD(0x8); // End padding
		};
		static_assert(offsetof(CS2::compositematerialslib::CompositeMaterialEditorPoint_t, m_ModelName) == 0x0, "m_ModelName in CompositeMaterialEditorPoint_t should be at offset 0x0");
		static_assert(offsetof(CS2::compositematerialslib::CompositeMaterialEditorPoint_t, m_nSequenceIndex) == 0xE0, "m_nSequenceIndex in CompositeMaterialEditorPoint_t should be at offset 0xE0");
		static_assert(offsetof(CS2::compositematerialslib::CompositeMaterialEditorPoint_t, m_flCycle) == 0xE4, "m_flCycle in CompositeMaterialEditorPoint_t should be at offset 0xE4");
		static_assert(offsetof(CS2::compositematerialslib::CompositeMaterialEditorPoint_t, m_KVModelStateChoices) == 0xE8, "m_KVModelStateChoices in CompositeMaterialEditorPoint_t should be at offset 0xE8");
		static_assert(offsetof(CS2::compositematerialslib::CompositeMaterialEditorPoint_t, m_bEnableChildModel) == 0xF8, "m_bEnableChildModel in CompositeMaterialEditorPoint_t should be at offset 0xF8");
		static_assert(offsetof(CS2::compositematerialslib::CompositeMaterialEditorPoint_t, m_ChildModelName) == 0x100, "m_ChildModelName in CompositeMaterialEditorPoint_t should be at offset 0x100");
		static_assert(offsetof(CS2::compositematerialslib::CompositeMaterialEditorPoint_t, m_vecCompositeMaterialAssemblyProcedures) == 0x1E0, "m_vecCompositeMaterialAssemblyProcedures in CompositeMaterialEditorPoint_t should be at offset 0x1E0");
		static_assert(offsetof(CS2::compositematerialslib::CompositeMaterialEditorPoint_t, m_vecCompositeMaterials) == 0x1F8, "m_vecCompositeMaterials in CompositeMaterialEditorPoint_t should be at offset 0x1F8");
		static_assert(sizeof(CS2::compositematerialslib::CompositeMaterialEditorPoint_t) == 0x218, "CompositeMaterialEditorPoint_t size should be 0x218");
	}
}
