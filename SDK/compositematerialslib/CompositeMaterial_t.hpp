// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif





namespace CS2 {
	namespace compositematerialslib {
		class GeneratedTextureHandle_t;
	}
}


using namespace GlobalTypes;
namespace CS2 {
	namespace compositematerialslib {
		class CompositeMaterial_t  {
		public:
			S2_PAD(0x8);
			GlobalTypes::KeyValues3 m_TargetKVs; // 0x8 | Schema_Atomic | Size: 0x10
			GlobalTypes::KeyValues3 m_PreGenerationKVs; // 0x18 | Schema_Atomic | Size: 0x10
			S2_PAD(0x30);
			GlobalTypes::KeyValues3 m_FinalKVs; // 0x58 | Schema_Atomic | Size: 0x10
			S2_PAD(0x18);
			GlobalTypes::CUtlVector< compositematerialslib::GeneratedTextureHandle_t > m_vecGeneratedTextures; // 0x80 | Schema_Atomic | Size: 0x18
			// char  m_vecGeneratedTextures[0x18]; // 0x80 | Schema_Atomic | Size: 0x18
			S2_PAD(0x8); // End padding
		};
		static_assert(offsetof(CS2::compositematerialslib::CompositeMaterial_t, m_TargetKVs) == 0x8, "m_TargetKVs in CompositeMaterial_t should be at offset 0x8");
		static_assert(offsetof(CS2::compositematerialslib::CompositeMaterial_t, m_PreGenerationKVs) == 0x18, "m_PreGenerationKVs in CompositeMaterial_t should be at offset 0x18");
		static_assert(offsetof(CS2::compositematerialslib::CompositeMaterial_t, m_FinalKVs) == 0x58, "m_FinalKVs in CompositeMaterial_t should be at offset 0x58");
		static_assert(offsetof(CS2::compositematerialslib::CompositeMaterial_t, m_vecGeneratedTextures) == 0x80, "m_vecGeneratedTextures in CompositeMaterial_t should be at offset 0x80");
		static_assert(sizeof(CS2::compositematerialslib::CompositeMaterial_t) == 0xA0, "CompositeMaterial_t size should be 0xA0");
	}
}
