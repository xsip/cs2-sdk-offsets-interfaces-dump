// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/compositematerialslib/CompositeMaterialMatchFilterType_t.hpp>



namespace CS2 {
	namespace compositematerialslib {
		class CompositeMaterialMatchFilter_t  {
		public:
			compositematerialslib::CompositeMaterialMatchFilterType_t m_nCompositeMaterialMatchFilterType; // 0x0 | Schema_DeclaredEnum | Size: 0x4
			S2_PAD(0x4);
			GlobalTypes::CUtlString m_strMatchFilter; // 0x8 | Schema_Atomic | Size: 0x8
			GlobalTypes::CUtlString m_strMatchValue; // 0x10 | Schema_Atomic | Size: 0x8
			bool m_bPassWhenTrue; // 0x18 | Schema_Builtin | Size: 0x1
			S2_PAD(0x7); // End padding
		};
		static_assert(offsetof(CS2::compositematerialslib::CompositeMaterialMatchFilter_t, m_nCompositeMaterialMatchFilterType) == 0x0, "m_nCompositeMaterialMatchFilterType in CompositeMaterialMatchFilter_t should be at offset 0x0");
		static_assert(offsetof(CS2::compositematerialslib::CompositeMaterialMatchFilter_t, m_strMatchFilter) == 0x8, "m_strMatchFilter in CompositeMaterialMatchFilter_t should be at offset 0x8");
		static_assert(offsetof(CS2::compositematerialslib::CompositeMaterialMatchFilter_t, m_strMatchValue) == 0x10, "m_strMatchValue in CompositeMaterialMatchFilter_t should be at offset 0x10");
		static_assert(offsetof(CS2::compositematerialslib::CompositeMaterialMatchFilter_t, m_bPassWhenTrue) == 0x18, "m_bPassWhenTrue in CompositeMaterialMatchFilter_t should be at offset 0x18");
		static_assert(sizeof(CS2::compositematerialslib::CompositeMaterialMatchFilter_t) == 0x20, "CompositeMaterialMatchFilter_t size should be 0x20");
	}
}
