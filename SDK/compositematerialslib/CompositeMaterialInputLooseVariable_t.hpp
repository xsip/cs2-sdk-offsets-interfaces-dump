// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <SDK/GlobalTypes.hpp>

#include <SDK/compositematerialslib/CompositeMaterialInputLooseVariableType_t.hpp>
#include <SDK/compositematerialslib/CompositeMaterialVarSystemVar_t.hpp>
#include <SDK/compositematerialslib/CompositeMaterialInputTextureType_t.hpp>



namespace CS2 {
	namespace compositematerialslib {
		class CompositeMaterialInputLooseVariable_t  {
		public:
			GlobalTypes::CUtlString m_strName; // 0x0 | Schema_Atomic | Size: 0x8
			bool m_bExposeExternally; // 0x8 | Schema_Builtin | Size: 0x1
			S2_PAD(0x7);
			GlobalTypes::CUtlString m_strExposedFriendlyName; // 0x10 | Schema_Atomic | Size: 0x8
			GlobalTypes::CUtlString m_strExposedFriendlyGroupName; // 0x18 | Schema_Atomic | Size: 0x8
			bool m_bExposedVariableIsFixedRange; // 0x20 | Schema_Builtin | Size: 0x1
			S2_PAD(0x7);
			GlobalTypes::CUtlString m_strExposedVisibleWhenTrue; // 0x28 | Schema_Atomic | Size: 0x8
			GlobalTypes::CUtlString m_strExposedHiddenWhenTrue; // 0x30 | Schema_Atomic | Size: 0x8
			GlobalTypes::CUtlString m_strExposedValueList; // 0x38 | Schema_Atomic | Size: 0x8
			compositematerialslib::CompositeMaterialInputLooseVariableType_t m_nVariableType; // 0x40 | Schema_DeclaredEnum | Size: 0x4
			bool m_bValueBoolean; // 0x44 | Schema_Builtin | Size: 0x1
			S2_PAD(0x3);
			int32_t m_nValueIntX; // 0x48 | Schema_Builtin | Size: 0x4
			int32_t m_nValueIntY; // 0x4c | Schema_Builtin | Size: 0x4
			int32_t m_nValueIntZ; // 0x50 | Schema_Builtin | Size: 0x4
			int32_t m_nValueIntW; // 0x54 | Schema_Builtin | Size: 0x4
			bool m_bHasFloatBounds; // 0x58 | Schema_Builtin | Size: 0x1
			S2_PAD(0x3);
			float32 m_flValueFloatX; // 0x5c | Schema_Builtin | Size: 0x4
			float32 m_flValueFloatX_Min; // 0x60 | Schema_Builtin | Size: 0x4
			float32 m_flValueFloatX_Max; // 0x64 | Schema_Builtin | Size: 0x4
			float32 m_flValueFloatY; // 0x68 | Schema_Builtin | Size: 0x4
			float32 m_flValueFloatY_Min; // 0x6c | Schema_Builtin | Size: 0x4
			float32 m_flValueFloatY_Max; // 0x70 | Schema_Builtin | Size: 0x4
			float32 m_flValueFloatZ; // 0x74 | Schema_Builtin | Size: 0x4
			float32 m_flValueFloatZ_Min; // 0x78 | Schema_Builtin | Size: 0x4
			float32 m_flValueFloatZ_Max; // 0x7c | Schema_Builtin | Size: 0x4
			float32 m_flValueFloatW; // 0x80 | Schema_Builtin | Size: 0x4
			float32 m_flValueFloatW_Min; // 0x84 | Schema_Builtin | Size: 0x4
			float32 m_flValueFloatW_Max; // 0x88 | Schema_Builtin | Size: 0x4
			GlobalTypes::Color m_cValueColor4; // 0x8c | Schema_Atomic | Size: 0x4
			compositematerialslib::CompositeMaterialVarSystemVar_t m_nValueSystemVar; // 0x90 | Schema_DeclaredEnum | Size: 0x4
			S2_PAD(0x4);
			// GlobalTypes::CResourceNameTyped< GlobalTypes::CWeakHandle< InfoForResourceTypeIMaterial2 > > m_strResourceMaterial; // 0x98 | Schema_Atomic | Size: 0xe0
			char  m_strResourceMaterial[0xe0]; // 0x98 | Schema_Atomic | Size: 0xe0
			GlobalTypes::CUtlString m_strTextureContentAssetPath; // 0x178 | Schema_Atomic | Size: 0x8
			// GlobalTypes::CResourceNameTyped< GlobalTypes::CWeakHandle< InfoForResourceTypeCTextureBase > > m_strTextureRuntimeResourcePath; // 0x180 | Schema_Atomic | Size: 0xe0
			char  m_strTextureRuntimeResourcePath[0xe0]; // 0x180 | Schema_Atomic | Size: 0xe0
			GlobalTypes::CUtlString m_strTextureCompilationVtexTemplate; // 0x260 | Schema_Atomic | Size: 0x8
			compositematerialslib::CompositeMaterialInputTextureType_t m_nTextureType; // 0x268 | Schema_DeclaredEnum | Size: 0x4
			S2_PAD(0x4);
			GlobalTypes::CUtlString m_strString; // 0x270 | Schema_Atomic | Size: 0x8
			GlobalTypes::CUtlString m_strPanoramaPanelPath; // 0x278 | Schema_Atomic | Size: 0x8
			int32_t m_nPanoramaRenderRes; // 0x280 | Schema_Builtin | Size: 0x4
			S2_PAD(0x4); // End padding
		};
		static_assert(offsetof(CS2::compositematerialslib::CompositeMaterialInputLooseVariable_t, m_strName) == 0x0, "m_strName in CompositeMaterialInputLooseVariable_t should be at offset 0x0");
		static_assert(offsetof(CS2::compositematerialslib::CompositeMaterialInputLooseVariable_t, m_bExposeExternally) == 0x8, "m_bExposeExternally in CompositeMaterialInputLooseVariable_t should be at offset 0x8");
		static_assert(offsetof(CS2::compositematerialslib::CompositeMaterialInputLooseVariable_t, m_strExposedFriendlyName) == 0x10, "m_strExposedFriendlyName in CompositeMaterialInputLooseVariable_t should be at offset 0x10");
		static_assert(offsetof(CS2::compositematerialslib::CompositeMaterialInputLooseVariable_t, m_strExposedFriendlyGroupName) == 0x18, "m_strExposedFriendlyGroupName in CompositeMaterialInputLooseVariable_t should be at offset 0x18");
		static_assert(offsetof(CS2::compositematerialslib::CompositeMaterialInputLooseVariable_t, m_bExposedVariableIsFixedRange) == 0x20, "m_bExposedVariableIsFixedRange in CompositeMaterialInputLooseVariable_t should be at offset 0x20");
		static_assert(offsetof(CS2::compositematerialslib::CompositeMaterialInputLooseVariable_t, m_strExposedVisibleWhenTrue) == 0x28, "m_strExposedVisibleWhenTrue in CompositeMaterialInputLooseVariable_t should be at offset 0x28");
		static_assert(offsetof(CS2::compositematerialslib::CompositeMaterialInputLooseVariable_t, m_strExposedHiddenWhenTrue) == 0x30, "m_strExposedHiddenWhenTrue in CompositeMaterialInputLooseVariable_t should be at offset 0x30");
		static_assert(offsetof(CS2::compositematerialslib::CompositeMaterialInputLooseVariable_t, m_strExposedValueList) == 0x38, "m_strExposedValueList in CompositeMaterialInputLooseVariable_t should be at offset 0x38");
		static_assert(offsetof(CS2::compositematerialslib::CompositeMaterialInputLooseVariable_t, m_nVariableType) == 0x40, "m_nVariableType in CompositeMaterialInputLooseVariable_t should be at offset 0x40");
		static_assert(offsetof(CS2::compositematerialslib::CompositeMaterialInputLooseVariable_t, m_bValueBoolean) == 0x44, "m_bValueBoolean in CompositeMaterialInputLooseVariable_t should be at offset 0x44");
		static_assert(offsetof(CS2::compositematerialslib::CompositeMaterialInputLooseVariable_t, m_nValueIntX) == 0x48, "m_nValueIntX in CompositeMaterialInputLooseVariable_t should be at offset 0x48");
		static_assert(offsetof(CS2::compositematerialslib::CompositeMaterialInputLooseVariable_t, m_nValueIntY) == 0x4C, "m_nValueIntY in CompositeMaterialInputLooseVariable_t should be at offset 0x4C");
		static_assert(offsetof(CS2::compositematerialslib::CompositeMaterialInputLooseVariable_t, m_nValueIntZ) == 0x50, "m_nValueIntZ in CompositeMaterialInputLooseVariable_t should be at offset 0x50");
		static_assert(offsetof(CS2::compositematerialslib::CompositeMaterialInputLooseVariable_t, m_nValueIntW) == 0x54, "m_nValueIntW in CompositeMaterialInputLooseVariable_t should be at offset 0x54");
		static_assert(offsetof(CS2::compositematerialslib::CompositeMaterialInputLooseVariable_t, m_bHasFloatBounds) == 0x58, "m_bHasFloatBounds in CompositeMaterialInputLooseVariable_t should be at offset 0x58");
		static_assert(offsetof(CS2::compositematerialslib::CompositeMaterialInputLooseVariable_t, m_flValueFloatX) == 0x5C, "m_flValueFloatX in CompositeMaterialInputLooseVariable_t should be at offset 0x5C");
		static_assert(offsetof(CS2::compositematerialslib::CompositeMaterialInputLooseVariable_t, m_flValueFloatX_Min) == 0x60, "m_flValueFloatX_Min in CompositeMaterialInputLooseVariable_t should be at offset 0x60");
		static_assert(offsetof(CS2::compositematerialslib::CompositeMaterialInputLooseVariable_t, m_flValueFloatX_Max) == 0x64, "m_flValueFloatX_Max in CompositeMaterialInputLooseVariable_t should be at offset 0x64");
		static_assert(offsetof(CS2::compositematerialslib::CompositeMaterialInputLooseVariable_t, m_flValueFloatY) == 0x68, "m_flValueFloatY in CompositeMaterialInputLooseVariable_t should be at offset 0x68");
		static_assert(offsetof(CS2::compositematerialslib::CompositeMaterialInputLooseVariable_t, m_flValueFloatY_Min) == 0x6C, "m_flValueFloatY_Min in CompositeMaterialInputLooseVariable_t should be at offset 0x6C");
		static_assert(offsetof(CS2::compositematerialslib::CompositeMaterialInputLooseVariable_t, m_flValueFloatY_Max) == 0x70, "m_flValueFloatY_Max in CompositeMaterialInputLooseVariable_t should be at offset 0x70");
		static_assert(offsetof(CS2::compositematerialslib::CompositeMaterialInputLooseVariable_t, m_flValueFloatZ) == 0x74, "m_flValueFloatZ in CompositeMaterialInputLooseVariable_t should be at offset 0x74");
		static_assert(offsetof(CS2::compositematerialslib::CompositeMaterialInputLooseVariable_t, m_flValueFloatZ_Min) == 0x78, "m_flValueFloatZ_Min in CompositeMaterialInputLooseVariable_t should be at offset 0x78");
		static_assert(offsetof(CS2::compositematerialslib::CompositeMaterialInputLooseVariable_t, m_flValueFloatZ_Max) == 0x7C, "m_flValueFloatZ_Max in CompositeMaterialInputLooseVariable_t should be at offset 0x7C");
		static_assert(offsetof(CS2::compositematerialslib::CompositeMaterialInputLooseVariable_t, m_flValueFloatW) == 0x80, "m_flValueFloatW in CompositeMaterialInputLooseVariable_t should be at offset 0x80");
		static_assert(offsetof(CS2::compositematerialslib::CompositeMaterialInputLooseVariable_t, m_flValueFloatW_Min) == 0x84, "m_flValueFloatW_Min in CompositeMaterialInputLooseVariable_t should be at offset 0x84");
		static_assert(offsetof(CS2::compositematerialslib::CompositeMaterialInputLooseVariable_t, m_flValueFloatW_Max) == 0x88, "m_flValueFloatW_Max in CompositeMaterialInputLooseVariable_t should be at offset 0x88");
		static_assert(offsetof(CS2::compositematerialslib::CompositeMaterialInputLooseVariable_t, m_cValueColor4) == 0x8C, "m_cValueColor4 in CompositeMaterialInputLooseVariable_t should be at offset 0x8C");
		static_assert(offsetof(CS2::compositematerialslib::CompositeMaterialInputLooseVariable_t, m_nValueSystemVar) == 0x90, "m_nValueSystemVar in CompositeMaterialInputLooseVariable_t should be at offset 0x90");
		static_assert(offsetof(CS2::compositematerialslib::CompositeMaterialInputLooseVariable_t, m_strResourceMaterial) == 0x98, "m_strResourceMaterial in CompositeMaterialInputLooseVariable_t should be at offset 0x98");
		static_assert(offsetof(CS2::compositematerialslib::CompositeMaterialInputLooseVariable_t, m_strTextureContentAssetPath) == 0x178, "m_strTextureContentAssetPath in CompositeMaterialInputLooseVariable_t should be at offset 0x178");
		static_assert(offsetof(CS2::compositematerialslib::CompositeMaterialInputLooseVariable_t, m_strTextureRuntimeResourcePath) == 0x180, "m_strTextureRuntimeResourcePath in CompositeMaterialInputLooseVariable_t should be at offset 0x180");
		static_assert(offsetof(CS2::compositematerialslib::CompositeMaterialInputLooseVariable_t, m_strTextureCompilationVtexTemplate) == 0x260, "m_strTextureCompilationVtexTemplate in CompositeMaterialInputLooseVariable_t should be at offset 0x260");
		static_assert(offsetof(CS2::compositematerialslib::CompositeMaterialInputLooseVariable_t, m_nTextureType) == 0x268, "m_nTextureType in CompositeMaterialInputLooseVariable_t should be at offset 0x268");
		static_assert(offsetof(CS2::compositematerialslib::CompositeMaterialInputLooseVariable_t, m_strString) == 0x270, "m_strString in CompositeMaterialInputLooseVariable_t should be at offset 0x270");
		static_assert(offsetof(CS2::compositematerialslib::CompositeMaterialInputLooseVariable_t, m_strPanoramaPanelPath) == 0x278, "m_strPanoramaPanelPath in CompositeMaterialInputLooseVariable_t should be at offset 0x278");
		static_assert(offsetof(CS2::compositematerialslib::CompositeMaterialInputLooseVariable_t, m_nPanoramaRenderRes) == 0x280, "m_nPanoramaRenderRes in CompositeMaterialInputLooseVariable_t should be at offset 0x280");
		static_assert(sizeof(CS2::compositematerialslib::CompositeMaterialInputLooseVariable_t) == 0x288, "CompositeMaterialInputLooseVariable_t size should be 0x288");
	}
}
