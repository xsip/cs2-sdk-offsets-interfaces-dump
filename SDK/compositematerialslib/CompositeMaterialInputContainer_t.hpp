// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <SDK/GlobalTypes.hpp>

#include <SDK/compositematerialslib/CompositeMaterialInputContainerSourceType_t.hpp>



namespace CS2 {
	namespace compositematerialslib {
		class CompositeMaterialInputContainer_t  {
		public:
			bool m_bEnabled; // 0x0 | Schema_Builtin | Size: 0x1
			S2_PAD(0x3);
			compositematerialslib::CompositeMaterialInputContainerSourceType_t m_nCompositeMaterialInputContainerSourceType; // 0x4 | Schema_DeclaredEnum | Size: 0x4
			// GlobalTypes::CResourceNameTyped< GlobalTypes::CWeakHandle< InfoForResourceTypeIMaterial2 > > m_strSpecificContainerMaterial; // 0x8 | Schema_Atomic | Size: 0xe0
			char  m_strSpecificContainerMaterial[0xe0]; // 0x8 | Schema_Atomic | Size: 0xe0
			GlobalTypes::CUtlString m_strAttrName; // 0xe8 | Schema_Atomic | Size: 0x8
			GlobalTypes::CUtlString m_strAlias; // 0xf0 | Schema_Atomic | Size: 0x8
			// GlobalTypes::CUtlVector< compositematerialslib::CompositeMaterialInputLooseVariable_t > m_vecLooseVariables; // 0xf8 | Schema_Atomic | Size: 0x18
			char  m_vecLooseVariables[0x18]; // 0xf8 | Schema_Atomic | Size: 0x18
			GlobalTypes::CUtlString m_strAttrNameForVar; // 0x110 | Schema_Atomic | Size: 0x8
			bool m_bExposeExternally; // 0x118 | Schema_Builtin | Size: 0x1
			S2_PAD(0x1f); // End padding
		};
		static_assert(offsetof(CS2::compositematerialslib::CompositeMaterialInputContainer_t, m_bEnabled) == 0x0, "m_bEnabled in CompositeMaterialInputContainer_t should be at offset 0x0");
		static_assert(offsetof(CS2::compositematerialslib::CompositeMaterialInputContainer_t, m_nCompositeMaterialInputContainerSourceType) == 0x4, "m_nCompositeMaterialInputContainerSourceType in CompositeMaterialInputContainer_t should be at offset 0x4");
		static_assert(offsetof(CS2::compositematerialslib::CompositeMaterialInputContainer_t, m_strSpecificContainerMaterial) == 0x8, "m_strSpecificContainerMaterial in CompositeMaterialInputContainer_t should be at offset 0x8");
		static_assert(offsetof(CS2::compositematerialslib::CompositeMaterialInputContainer_t, m_strAttrName) == 0xE8, "m_strAttrName in CompositeMaterialInputContainer_t should be at offset 0xE8");
		static_assert(offsetof(CS2::compositematerialslib::CompositeMaterialInputContainer_t, m_strAlias) == 0xF0, "m_strAlias in CompositeMaterialInputContainer_t should be at offset 0xF0");
		static_assert(offsetof(CS2::compositematerialslib::CompositeMaterialInputContainer_t, m_vecLooseVariables) == 0xF8, "m_vecLooseVariables in CompositeMaterialInputContainer_t should be at offset 0xF8");
		static_assert(offsetof(CS2::compositematerialslib::CompositeMaterialInputContainer_t, m_strAttrNameForVar) == 0x110, "m_strAttrNameForVar in CompositeMaterialInputContainer_t should be at offset 0x110");
		static_assert(offsetof(CS2::compositematerialslib::CompositeMaterialInputContainer_t, m_bExposeExternally) == 0x118, "m_bExposeExternally in CompositeMaterialInputContainer_t should be at offset 0x118");
		static_assert(sizeof(CS2::compositematerialslib::CompositeMaterialInputContainer_t) == 0x138, "CompositeMaterialInputContainer_t size should be 0x138");
	}
}
