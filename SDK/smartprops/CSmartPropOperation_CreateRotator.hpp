// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/smartprops/CSmartPropTransformOperation.hpp>
#include <SDK/smartprops/CSmartPropAttributeCoordinateSpace.hpp>





using namespace GlobalTypes;
namespace CS2 {
	namespace smartprops {
		class CSmartPropOperation_CreateRotator : public CS2::smartprops::CSmartPropTransformOperation {
		public:
			GlobalTypes::CUtlString m_Name; // 0x50 | Schema_Atomic | Size: 0x8
			GlobalTypes::CSmartPropAttributeVector m_vOffset; // 0x58 | Schema_Atomic | Size: 0x40
			GlobalTypes::CSmartPropAttributeVector m_vRotationAxis; // 0x98 | Schema_Atomic | Size: 0x40
			smartprops::CSmartPropAttributeCoordinateSpace m_CoordinateSpace; // 0xd8 | Schema_DeclaredClass | Size: 0x40
			GlobalTypes::CSmartPropAttributeFloat m_flDisplayRadius; // 0x118 | Schema_Atomic | Size: 0x40
			GlobalTypes::CSmartPropAttributeColor m_DisplayColor; // 0x158 | Schema_Atomic | Size: 0x40
			GlobalTypes::CSmartPropAttributeBool m_bApplyToCurrentTransform; // 0x198 | Schema_Atomic | Size: 0x40
			GlobalTypes::CSmartPropAttributeFloat m_flSnappingIncrement; // 0x1d8 | Schema_Atomic | Size: 0x40
			GlobalTypes::CSmartPropAttributeFloat m_flInitialAngle; // 0x218 | Schema_Atomic | Size: 0x40
			GlobalTypes::CSmartPropAttributeBool m_bEnforceLimits; // 0x258 | Schema_Atomic | Size: 0x40
			GlobalTypes::CSmartPropAttributeFloat m_flMinAngle; // 0x298 | Schema_Atomic | Size: 0x40
			GlobalTypes::CSmartPropAttributeFloat m_flMaxAngle; // 0x2d8 | Schema_Atomic | Size: 0x40
			GlobalTypes::CUtlString m_OutputVariable; // 0x318 | Schema_Atomic | Size: 0x8
		};
		static_assert(offsetof(CS2::smartprops::CSmartPropOperation_CreateRotator, m_Name) == 0x50, "m_Name in CSmartPropOperation_CreateRotator should be at offset 0x50");
		static_assert(offsetof(CS2::smartprops::CSmartPropOperation_CreateRotator, m_vOffset) == 0x58, "m_vOffset in CSmartPropOperation_CreateRotator should be at offset 0x58");
		static_assert(offsetof(CS2::smartprops::CSmartPropOperation_CreateRotator, m_vRotationAxis) == 0x98, "m_vRotationAxis in CSmartPropOperation_CreateRotator should be at offset 0x98");
		static_assert(offsetof(CS2::smartprops::CSmartPropOperation_CreateRotator, m_CoordinateSpace) == 0xD8, "m_CoordinateSpace in CSmartPropOperation_CreateRotator should be at offset 0xD8");
		static_assert(offsetof(CS2::smartprops::CSmartPropOperation_CreateRotator, m_flDisplayRadius) == 0x118, "m_flDisplayRadius in CSmartPropOperation_CreateRotator should be at offset 0x118");
		static_assert(offsetof(CS2::smartprops::CSmartPropOperation_CreateRotator, m_DisplayColor) == 0x158, "m_DisplayColor in CSmartPropOperation_CreateRotator should be at offset 0x158");
		static_assert(offsetof(CS2::smartprops::CSmartPropOperation_CreateRotator, m_bApplyToCurrentTransform) == 0x198, "m_bApplyToCurrentTransform in CSmartPropOperation_CreateRotator should be at offset 0x198");
		static_assert(offsetof(CS2::smartprops::CSmartPropOperation_CreateRotator, m_flSnappingIncrement) == 0x1D8, "m_flSnappingIncrement in CSmartPropOperation_CreateRotator should be at offset 0x1D8");
		static_assert(offsetof(CS2::smartprops::CSmartPropOperation_CreateRotator, m_flInitialAngle) == 0x218, "m_flInitialAngle in CSmartPropOperation_CreateRotator should be at offset 0x218");
		static_assert(offsetof(CS2::smartprops::CSmartPropOperation_CreateRotator, m_bEnforceLimits) == 0x258, "m_bEnforceLimits in CSmartPropOperation_CreateRotator should be at offset 0x258");
		static_assert(offsetof(CS2::smartprops::CSmartPropOperation_CreateRotator, m_flMinAngle) == 0x298, "m_flMinAngle in CSmartPropOperation_CreateRotator should be at offset 0x298");
		static_assert(offsetof(CS2::smartprops::CSmartPropOperation_CreateRotator, m_flMaxAngle) == 0x2D8, "m_flMaxAngle in CSmartPropOperation_CreateRotator should be at offset 0x2D8");
		static_assert(offsetof(CS2::smartprops::CSmartPropOperation_CreateRotator, m_OutputVariable) == 0x318, "m_OutputVariable in CSmartPropOperation_CreateRotator should be at offset 0x318");
		static_assert(sizeof(CS2::smartprops::CSmartPropOperation_CreateRotator) == 0x320, "CSmartPropOperation_CreateRotator size should be 0x320");
	}
}
