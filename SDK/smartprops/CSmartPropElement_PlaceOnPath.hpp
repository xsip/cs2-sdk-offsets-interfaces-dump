// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/smartprops/CSmartPropElement_Group.hpp>
#include <SDK/smartprops/CSmartPropAttributeCoordinateSpace.hpp>





using namespace GlobalTypes;
namespace CS2 {
	namespace smartprops {
		class CSmartPropElement_PlaceOnPath : public CS2::smartprops::CSmartPropElement_Group {
		public:
			GlobalTypes::CUtlString m_PathName; // 0xa0 | Schema_Atomic | Size: 0x8
			GlobalTypes::CSmartPropAttributeFloat m_flSpacing; // 0xa8 | Schema_Atomic | Size: 0x40
			GlobalTypes::CSmartPropAttributeFloat m_flOffsetAlongPath; // 0xe8 | Schema_Atomic | Size: 0x40
			GlobalTypes::CSmartPropAttributeVector2D m_vPathOffset; // 0x128 | Schema_Atomic | Size: 0x40
			smartprops::CSmartPropAttributeCoordinateSpace m_PathSpace; // 0x168 | Schema_DeclaredClass | Size: 0x40
			GlobalTypes::CSmartPropAttributeBool m_bUseFixedUpDirection; // 0x1a8 | Schema_Atomic | Size: 0x40
			GlobalTypes::CSmartPropAttributeBool m_bUseProjectedDistance; // 0x1e8 | Schema_Atomic | Size: 0x40
			GlobalTypes::CSmartPropAttributeVector m_vUpDirection; // 0x228 | Schema_Atomic | Size: 0x40
			smartprops::CSmartPropAttributeCoordinateSpace m_UpDirectionSpace; // 0x268 | Schema_DeclaredClass | Size: 0x40
			GlobalTypes::CSmartPropAttributeBool m_DefaultPathInWorldSpace; // 0x2a8 | Schema_Atomic | Size: 0x40
			GlobalTypes::CUtlVector<GlobalTypes::CSmartPropAttributeVector> m_DefaultPath; // 0x2e8 | Schema_Atomic | Size: 0x18
			// char  m_DefaultPath[0x18]; // 0x2e8 | Schema_Atomic | Size: 0x18
		};
		static_assert(offsetof(CS2::smartprops::CSmartPropElement_PlaceOnPath, m_PathName) == 0xA0, "m_PathName in CSmartPropElement_PlaceOnPath should be at offset 0xA0");
		static_assert(offsetof(CS2::smartprops::CSmartPropElement_PlaceOnPath, m_flSpacing) == 0xA8, "m_flSpacing in CSmartPropElement_PlaceOnPath should be at offset 0xA8");
		static_assert(offsetof(CS2::smartprops::CSmartPropElement_PlaceOnPath, m_flOffsetAlongPath) == 0xE8, "m_flOffsetAlongPath in CSmartPropElement_PlaceOnPath should be at offset 0xE8");
		static_assert(offsetof(CS2::smartprops::CSmartPropElement_PlaceOnPath, m_vPathOffset) == 0x128, "m_vPathOffset in CSmartPropElement_PlaceOnPath should be at offset 0x128");
		static_assert(offsetof(CS2::smartprops::CSmartPropElement_PlaceOnPath, m_PathSpace) == 0x168, "m_PathSpace in CSmartPropElement_PlaceOnPath should be at offset 0x168");
		static_assert(offsetof(CS2::smartprops::CSmartPropElement_PlaceOnPath, m_bUseFixedUpDirection) == 0x1A8, "m_bUseFixedUpDirection in CSmartPropElement_PlaceOnPath should be at offset 0x1A8");
		static_assert(offsetof(CS2::smartprops::CSmartPropElement_PlaceOnPath, m_bUseProjectedDistance) == 0x1E8, "m_bUseProjectedDistance in CSmartPropElement_PlaceOnPath should be at offset 0x1E8");
		static_assert(offsetof(CS2::smartprops::CSmartPropElement_PlaceOnPath, m_vUpDirection) == 0x228, "m_vUpDirection in CSmartPropElement_PlaceOnPath should be at offset 0x228");
		static_assert(offsetof(CS2::smartprops::CSmartPropElement_PlaceOnPath, m_UpDirectionSpace) == 0x268, "m_UpDirectionSpace in CSmartPropElement_PlaceOnPath should be at offset 0x268");
		static_assert(offsetof(CS2::smartprops::CSmartPropElement_PlaceOnPath, m_DefaultPathInWorldSpace) == 0x2A8, "m_DefaultPathInWorldSpace in CSmartPropElement_PlaceOnPath should be at offset 0x2A8");
		static_assert(offsetof(CS2::smartprops::CSmartPropElement_PlaceOnPath, m_DefaultPath) == 0x2E8, "m_DefaultPath in CSmartPropElement_PlaceOnPath should be at offset 0x2E8");
		static_assert(sizeof(CS2::smartprops::CSmartPropElement_PlaceOnPath) == 0x300, "CSmartPropElement_PlaceOnPath size should be 0x300");
	}
}
