// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/smartprops/CSmartPropElement_Group.hpp>
#include <SDK/smartprops/CSmartPropAttributeRadiusPlacementMode.hpp>
#include <SDK/smartprops/CSmartPropAttributeDistributionMode.hpp>



namespace CS2 {
	namespace smartprops {
		class CSmartPropElement_PlaceInSphere : public CS2::smartprops::CSmartPropElement_Group {
		public:
			smartprops::CSmartPropAttributeRadiusPlacementMode m_PlacementMode; // 0xa0 | Schema_DeclaredClass | Size: 0x40
			smartprops::CSmartPropAttributeDistributionMode m_DistributionMode; // 0xe0 | Schema_DeclaredClass | Size: 0x40
			GlobalTypes::CSmartPropAttributeFloat m_flRandomness; // 0x120 | Schema_Atomic | Size: 0x40
			GlobalTypes::CSmartPropAttributeVector m_vPlaneUpDirection; // 0x160 | Schema_Atomic | Size: 0x40
			GlobalTypes::CSmartPropAttributeInt m_nCountMin; // 0x1a0 | Schema_Atomic | Size: 0x40
			GlobalTypes::CSmartPropAttributeInt m_nCountMax; // 0x1e0 | Schema_Atomic | Size: 0x40
			GlobalTypes::CSmartPropAttributeFloat m_flPositionRadiusInner; // 0x220 | Schema_Atomic | Size: 0x40
			GlobalTypes::CSmartPropAttributeFloat m_flPositionRadiusOuter; // 0x260 | Schema_Atomic | Size: 0x40
			GlobalTypes::CSmartPropAttributeBool m_bAlignOrientation; // 0x2a0 | Schema_Atomic | Size: 0x40
			GlobalTypes::CSmartPropAttributeVector m_vAlignDirection; // 0x2e0 | Schema_Atomic | Size: 0x40
		};
		static_assert(offsetof(CS2::smartprops::CSmartPropElement_PlaceInSphere, m_PlacementMode) == 0xA0, "m_PlacementMode in CSmartPropElement_PlaceInSphere should be at offset 0xA0");
		static_assert(offsetof(CS2::smartprops::CSmartPropElement_PlaceInSphere, m_DistributionMode) == 0xE0, "m_DistributionMode in CSmartPropElement_PlaceInSphere should be at offset 0xE0");
		static_assert(offsetof(CS2::smartprops::CSmartPropElement_PlaceInSphere, m_flRandomness) == 0x120, "m_flRandomness in CSmartPropElement_PlaceInSphere should be at offset 0x120");
		static_assert(offsetof(CS2::smartprops::CSmartPropElement_PlaceInSphere, m_vPlaneUpDirection) == 0x160, "m_vPlaneUpDirection in CSmartPropElement_PlaceInSphere should be at offset 0x160");
		static_assert(offsetof(CS2::smartprops::CSmartPropElement_PlaceInSphere, m_nCountMin) == 0x1A0, "m_nCountMin in CSmartPropElement_PlaceInSphere should be at offset 0x1A0");
		static_assert(offsetof(CS2::smartprops::CSmartPropElement_PlaceInSphere, m_nCountMax) == 0x1E0, "m_nCountMax in CSmartPropElement_PlaceInSphere should be at offset 0x1E0");
		static_assert(offsetof(CS2::smartprops::CSmartPropElement_PlaceInSphere, m_flPositionRadiusInner) == 0x220, "m_flPositionRadiusInner in CSmartPropElement_PlaceInSphere should be at offset 0x220");
		static_assert(offsetof(CS2::smartprops::CSmartPropElement_PlaceInSphere, m_flPositionRadiusOuter) == 0x260, "m_flPositionRadiusOuter in CSmartPropElement_PlaceInSphere should be at offset 0x260");
		static_assert(offsetof(CS2::smartprops::CSmartPropElement_PlaceInSphere, m_bAlignOrientation) == 0x2A0, "m_bAlignOrientation in CSmartPropElement_PlaceInSphere should be at offset 0x2A0");
		static_assert(offsetof(CS2::smartprops::CSmartPropElement_PlaceInSphere, m_vAlignDirection) == 0x2E0, "m_vAlignDirection in CSmartPropElement_PlaceInSphere should be at offset 0x2E0");
		static_assert(sizeof(CS2::smartprops::CSmartPropElement_PlaceInSphere) == 0x320, "CSmartPropElement_PlaceInSphere size should be 0x320");
	}
}
