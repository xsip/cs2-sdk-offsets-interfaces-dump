// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/pulse_runtime_lib/CPulseCell_BaseYieldingInflow.hpp>
#include <SDK/pulse_runtime_lib/CPulse_ResumePoint.hpp>



namespace CS2 {
	namespace pulse_runtime_lib {
		class CPulseCell_Timeline : public CS2::pulse_runtime_lib::CPulseCell_BaseYieldingInflow {
		public:
			// server::TimelineEvent_t > m_TimelineEvents; // 0x48 | Schema_Atomic | Size: 0x18
			char  m_TimelineEvents[0x18]; // 0x48 | Schema_Atomic | Size: 0x18
			bool m_bWaitForChildOutflows; // 0x60 | Schema_Builtin | Size: 0x1
			S2_PAD(0x7);
			pulse_runtime_lib::CPulse_ResumePoint m_OnFinished; // 0x68 | Schema_DeclaredClass | Size: 0x48
			pulse_runtime_lib::CPulse_ResumePoint m_OnCanceled; // 0xb0 | Schema_DeclaredClass | Size: 0x48
		};
		static_assert(offsetof(CS2::pulse_runtime_lib::CPulseCell_Timeline, m_TimelineEvents) == 0x48, "m_TimelineEvents in CPulseCell_Timeline should be at offset 0x48");
		static_assert(offsetof(CS2::pulse_runtime_lib::CPulseCell_Timeline, m_bWaitForChildOutflows) == 0x60, "m_bWaitForChildOutflows in CPulseCell_Timeline should be at offset 0x60");
		static_assert(offsetof(CS2::pulse_runtime_lib::CPulseCell_Timeline, m_OnFinished) == 0x68, "m_OnFinished in CPulseCell_Timeline should be at offset 0x68");
		static_assert(offsetof(CS2::pulse_runtime_lib::CPulseCell_Timeline, m_OnCanceled) == 0xB0, "m_OnCanceled in CPulseCell_Timeline should be at offset 0xB0");
		static_assert(sizeof(CS2::pulse_runtime_lib::CPulseCell_Timeline) == 0xF8, "CPulseCell_Timeline size should be 0xF8");
	}
}
