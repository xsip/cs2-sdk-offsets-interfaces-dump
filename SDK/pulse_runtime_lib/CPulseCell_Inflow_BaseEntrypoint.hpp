// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/pulse_runtime_lib/CPulseCell_BaseFlow.hpp>
#include <SDK/pulse_runtime_lib/PulseRuntimeChunkIndex_t.hpp>
#include <SDK/pulse_runtime_lib/PulseRegisterMap_t.hpp>





using namespace GlobalTypes;
namespace CS2 {
	namespace pulse_runtime_lib {
		class CPulseCell_Inflow_BaseEntrypoint : public CS2::pulse_runtime_lib::CPulseCell_BaseFlow {
		public:
			pulse_runtime_lib::PulseRuntimeChunkIndex_t m_EntryChunk; // 0x48 | Schema_DeclaredClass | Size: 0x4
			S2_PAD(0x4);
			pulse_runtime_lib::PulseRegisterMap_t m_RegisterMap; // 0x50 | Schema_DeclaredClass | Size: 0x30
		};
		static_assert(offsetof(CS2::pulse_runtime_lib::CPulseCell_Inflow_BaseEntrypoint, m_EntryChunk) == 0x48, "m_EntryChunk in CPulseCell_Inflow_BaseEntrypoint should be at offset 0x48");
		static_assert(offsetof(CS2::pulse_runtime_lib::CPulseCell_Inflow_BaseEntrypoint, m_RegisterMap) == 0x50, "m_RegisterMap in CPulseCell_Inflow_BaseEntrypoint should be at offset 0x50");
		static_assert(sizeof(CS2::pulse_runtime_lib::CPulseCell_Inflow_BaseEntrypoint) == 0x80, "CPulseCell_Inflow_BaseEntrypoint size should be 0x80");
	}
}
