// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/pulse_runtime_lib/PulseVariableKeysSource_t.hpp>
#include <SDK/pulse_runtime_lib/PulseDocNodeID_t.hpp>





using namespace GlobalTypes;
namespace CS2 {
	namespace pulse_runtime_lib {
		class CPulse_Variable  {
		public:
			GlobalTypes::PulseSymbol_t m_Name; // 0x0 | Schema_Atomic | Size: 0x10
			GlobalTypes::CUtlString m_Description; // 0x10 | Schema_Atomic | Size: 0x8
			GlobalTypes::CPulseValueFullType m_Type; // 0x18 | Schema_Atomic | Size: 0x18
			GlobalTypes::KeyValues3 m_DefaultValue; // 0x30 | Schema_Atomic | Size: 0x10
			S2_PAD(0x4);
			pulse_runtime_lib::PulseVariableKeysSource_t m_nKeysSource; // 0x44 | Schema_DeclaredEnum | Size: 0x4
			bool m_bIsPublicBlackboardVariable; // 0x48 | Schema_Builtin | Size: 0x1
			bool m_bIsObservable; // 0x49 | Schema_Builtin | Size: 0x1
			S2_PAD(0x2);
			pulse_runtime_lib::PulseDocNodeID_t m_nEditorNodeID; // 0x4c | Schema_DeclaredClass | Size: 0x4
		};
		static_assert(offsetof(CS2::pulse_runtime_lib::CPulse_Variable, m_Name) == 0x0, "m_Name in CPulse_Variable should be at offset 0x0");
		static_assert(offsetof(CS2::pulse_runtime_lib::CPulse_Variable, m_Description) == 0x10, "m_Description in CPulse_Variable should be at offset 0x10");
		static_assert(offsetof(CS2::pulse_runtime_lib::CPulse_Variable, m_Type) == 0x18, "m_Type in CPulse_Variable should be at offset 0x18");
		static_assert(offsetof(CS2::pulse_runtime_lib::CPulse_Variable, m_DefaultValue) == 0x30, "m_DefaultValue in CPulse_Variable should be at offset 0x30");
		static_assert(offsetof(CS2::pulse_runtime_lib::CPulse_Variable, m_nKeysSource) == 0x44, "m_nKeysSource in CPulse_Variable should be at offset 0x44");
		static_assert(offsetof(CS2::pulse_runtime_lib::CPulse_Variable, m_bIsPublicBlackboardVariable) == 0x48, "m_bIsPublicBlackboardVariable in CPulse_Variable should be at offset 0x48");
		static_assert(offsetof(CS2::pulse_runtime_lib::CPulse_Variable, m_bIsObservable) == 0x49, "m_bIsObservable in CPulse_Variable should be at offset 0x49");
		static_assert(offsetof(CS2::pulse_runtime_lib::CPulse_Variable, m_nEditorNodeID) == 0x4C, "m_nEditorNodeID in CPulse_Variable should be at offset 0x4C");
		static_assert(sizeof(CS2::pulse_runtime_lib::CPulse_Variable) == 0x50, "CPulse_Variable size should be 0x50");
	}
}
