// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <SDK/GlobalTypes.hpp>

#include <SDK/pulse_runtime_lib/PulseDocNodeID_t.hpp>
#include <SDK/pulse_runtime_lib/PulseRegisterMap_t.hpp>
#include <SDK/pulse_runtime_lib/PulseRuntimeChunkIndex_t.hpp>



namespace CS2 {
	namespace pulse_runtime_lib {
		class CPulse_CallInfo  {
		public:
			GlobalTypes::PulseSymbol_t m_PortName; // 0x0 | Schema_Atomic | Size: 0x10
			pulse_runtime_lib::PulseDocNodeID_t m_nEditorNodeID; // 0x10 | Schema_DeclaredClass | Size: 0x4
			S2_PAD(0x4);
			pulse_runtime_lib::PulseRegisterMap_t m_RegisterMap; // 0x18 | Schema_DeclaredClass | Size: 0x30
			pulse_runtime_lib::PulseDocNodeID_t m_CallMethodID; // 0x48 | Schema_DeclaredClass | Size: 0x4
			pulse_runtime_lib::PulseRuntimeChunkIndex_t m_nSrcChunk; // 0x4c | Schema_DeclaredClass | Size: 0x4
			int32_t m_nSrcInstruction; // 0x50 | Schema_Builtin | Size: 0x4
			S2_PAD(0x4); // End padding
		};
		static_assert(offsetof(CS2::pulse_runtime_lib::CPulse_CallInfo, m_PortName) == 0x0, "m_PortName in CPulse_CallInfo should be at offset 0x0");
		static_assert(offsetof(CS2::pulse_runtime_lib::CPulse_CallInfo, m_nEditorNodeID) == 0x10, "m_nEditorNodeID in CPulse_CallInfo should be at offset 0x10");
		static_assert(offsetof(CS2::pulse_runtime_lib::CPulse_CallInfo, m_RegisterMap) == 0x18, "m_RegisterMap in CPulse_CallInfo should be at offset 0x18");
		static_assert(offsetof(CS2::pulse_runtime_lib::CPulse_CallInfo, m_CallMethodID) == 0x48, "m_CallMethodID in CPulse_CallInfo should be at offset 0x48");
		static_assert(offsetof(CS2::pulse_runtime_lib::CPulse_CallInfo, m_nSrcChunk) == 0x4C, "m_nSrcChunk in CPulse_CallInfo should be at offset 0x4C");
		static_assert(offsetof(CS2::pulse_runtime_lib::CPulse_CallInfo, m_nSrcInstruction) == 0x50, "m_nSrcInstruction in CPulse_CallInfo should be at offset 0x50");
		static_assert(sizeof(CS2::pulse_runtime_lib::CPulse_CallInfo) == 0x58, "CPulse_CallInfo size should be 0x58");
	}
}
