// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <SDK/GlobalTypes.hpp>

#include <SDK/pulse_runtime_lib/PulseDomainValueType_t.hpp>



namespace CS2 {
	namespace pulse_runtime_lib {
		class CPulse_DomainValue  {
		public:
			pulse_runtime_lib::PulseDomainValueType_t m_nType; // 0x0 | Schema_DeclaredEnum | Size: 0x4
			S2_PAD(0x4);
			GlobalTypes::CGlobalSymbolCaseSensitive m_Value; // 0x8 | Schema_Atomic | Size: 0x8
			GlobalTypes::CPulseValueFullType m_RequiredRuntimeType; // 0x10 | Schema_Atomic | Size: 0x18
			S2_PAD(0x8); // End padding
		};
		static_assert(offsetof(CS2::pulse_runtime_lib::CPulse_DomainValue, m_nType) == 0x0, "m_nType in CPulse_DomainValue should be at offset 0x0");
		static_assert(offsetof(CS2::pulse_runtime_lib::CPulse_DomainValue, m_Value) == 0x8, "m_Value in CPulse_DomainValue should be at offset 0x8");
		static_assert(offsetof(CS2::pulse_runtime_lib::CPulse_DomainValue, m_RequiredRuntimeType) == 0x10, "m_RequiredRuntimeType in CPulse_DomainValue should be at offset 0x10");
		static_assert(sizeof(CS2::pulse_runtime_lib::CPulse_DomainValue) == 0x30, "CPulse_DomainValue size should be 0x30");
	}
}
