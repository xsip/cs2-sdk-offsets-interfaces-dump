// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/pulse_runtime_lib/CPulseCell_BaseYieldingInflow.hpp>
#include <SDK/pulse_runtime_lib/PulseMethodCallMode_t.hpp>
#include <SDK/pulse_runtime_lib/CPulse_ResumePoint.hpp>



namespace CS2 {
	namespace pulse_runtime_lib {
		class CPulseCell_Step_CallExternalMethod : public CS2::pulse_runtime_lib::CPulseCell_BaseYieldingInflow {
		public:
			GlobalTypes::PulseSymbol_t m_MethodName; // 0x48 | Schema_Atomic | Size: 0x10
			GlobalTypes::PulseSymbol_t m_GameBlackboard; // 0x58 | Schema_Atomic | Size: 0x10
			// GlobalTypes::CUtlLeanVector< pulse_runtime_lib::CPulseRuntimeMethodArg > m_ExpectedArgs; // 0x68 | Schema_Atomic | Size: 0x10
			char  m_ExpectedArgs[0x10]; // 0x68 | Schema_Atomic | Size: 0x10
			pulse_runtime_lib::PulseMethodCallMode_t m_nAsyncCallMode; // 0x78 | Schema_DeclaredEnum | Size: 0x4
			S2_PAD(0x4);
			pulse_runtime_lib::CPulse_ResumePoint m_OnFinished; // 0x80 | Schema_DeclaredClass | Size: 0x48
		};
		static_assert(offsetof(CS2::pulse_runtime_lib::CPulseCell_Step_CallExternalMethod, m_MethodName) == 0x48, "m_MethodName in CPulseCell_Step_CallExternalMethod should be at offset 0x48");
		static_assert(offsetof(CS2::pulse_runtime_lib::CPulseCell_Step_CallExternalMethod, m_GameBlackboard) == 0x58, "m_GameBlackboard in CPulseCell_Step_CallExternalMethod should be at offset 0x58");
		static_assert(offsetof(CS2::pulse_runtime_lib::CPulseCell_Step_CallExternalMethod, m_ExpectedArgs) == 0x68, "m_ExpectedArgs in CPulseCell_Step_CallExternalMethod should be at offset 0x68");
		static_assert(offsetof(CS2::pulse_runtime_lib::CPulseCell_Step_CallExternalMethod, m_nAsyncCallMode) == 0x78, "m_nAsyncCallMode in CPulseCell_Step_CallExternalMethod should be at offset 0x78");
		static_assert(offsetof(CS2::pulse_runtime_lib::CPulseCell_Step_CallExternalMethod, m_OnFinished) == 0x80, "m_OnFinished in CPulseCell_Step_CallExternalMethod should be at offset 0x80");
		static_assert(sizeof(CS2::pulse_runtime_lib::CPulseCell_Step_CallExternalMethod) == 0xC8, "CPulseCell_Step_CallExternalMethod size should be 0xC8");
	}
}
