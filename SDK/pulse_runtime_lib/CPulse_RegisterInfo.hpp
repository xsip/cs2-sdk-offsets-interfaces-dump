// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <SDK/GlobalTypes.hpp>

#include <SDK/pulse_runtime_lib/PulseRuntimeRegisterIndex_t.hpp>



namespace CS2 {
	namespace pulse_runtime_lib {
		class CPulse_RegisterInfo  {
		public:
			pulse_runtime_lib::PulseRuntimeRegisterIndex_t m_nReg; // 0x0 | Schema_DeclaredClass | Size: 0x2
			S2_PAD(0x6);
			GlobalTypes::CPulseValueFullType m_Type; // 0x8 | Schema_Atomic | Size: 0x18
			GlobalTypes::CKV3MemberNameWithStorage m_OriginName; // 0x20 | Schema_Atomic | Size: 0x38
			int32_t m_nWrittenByInstruction; // 0x58 | Schema_Builtin | Size: 0x4
			int32_t m_nLastReadByInstruction; // 0x5c | Schema_Builtin | Size: 0x4
		};
		static_assert(offsetof(CS2::pulse_runtime_lib::CPulse_RegisterInfo, m_nReg) == 0x0, "m_nReg in CPulse_RegisterInfo should be at offset 0x0");
		static_assert(offsetof(CS2::pulse_runtime_lib::CPulse_RegisterInfo, m_Type) == 0x8, "m_Type in CPulse_RegisterInfo should be at offset 0x8");
		static_assert(offsetof(CS2::pulse_runtime_lib::CPulse_RegisterInfo, m_OriginName) == 0x20, "m_OriginName in CPulse_RegisterInfo should be at offset 0x20");
		static_assert(offsetof(CS2::pulse_runtime_lib::CPulse_RegisterInfo, m_nWrittenByInstruction) == 0x58, "m_nWrittenByInstruction in CPulse_RegisterInfo should be at offset 0x58");
		static_assert(offsetof(CS2::pulse_runtime_lib::CPulse_RegisterInfo, m_nLastReadByInstruction) == 0x5C, "m_nLastReadByInstruction in CPulse_RegisterInfo should be at offset 0x5C");
		static_assert(sizeof(CS2::pulse_runtime_lib::CPulse_RegisterInfo) == 0x60, "CPulse_RegisterInfo size should be 0x60");
	}
}
