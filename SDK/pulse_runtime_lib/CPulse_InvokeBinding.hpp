// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/pulse_runtime_lib/PulseRegisterMap_t.hpp>
#include <SDK/pulse_runtime_lib/PulseRuntimeCellIndex_t.hpp>
#include <SDK/pulse_runtime_lib/PulseRuntimeChunkIndex_t.hpp>



namespace CS2 {
	namespace pulse_runtime_lib {
		class CPulse_InvokeBinding  {
		public:
			pulse_runtime_lib::PulseRegisterMap_t m_RegisterMap; // 0x0 | Schema_DeclaredClass | Size: 0x30
			GlobalTypes::PulseSymbol_t m_FuncName; // 0x30 | Schema_Atomic | Size: 0x10
			pulse_runtime_lib::PulseRuntimeCellIndex_t m_nCellIndex; // 0x40 | Schema_DeclaredClass | Size: 0x4
			pulse_runtime_lib::PulseRuntimeChunkIndex_t m_nSrcChunk; // 0x44 | Schema_DeclaredClass | Size: 0x4
			int32_t m_nSrcInstruction; // 0x48 | Schema_Builtin | Size: 0x4
			S2_PAD(0x64); // End padding
		};
		static_assert(offsetof(CS2::pulse_runtime_lib::CPulse_InvokeBinding, m_RegisterMap) == 0x0, "m_RegisterMap in CPulse_InvokeBinding should be at offset 0x0");
		static_assert(offsetof(CS2::pulse_runtime_lib::CPulse_InvokeBinding, m_FuncName) == 0x30, "m_FuncName in CPulse_InvokeBinding should be at offset 0x30");
		static_assert(offsetof(CS2::pulse_runtime_lib::CPulse_InvokeBinding, m_nCellIndex) == 0x40, "m_nCellIndex in CPulse_InvokeBinding should be at offset 0x40");
		static_assert(offsetof(CS2::pulse_runtime_lib::CPulse_InvokeBinding, m_nSrcChunk) == 0x44, "m_nSrcChunk in CPulse_InvokeBinding should be at offset 0x44");
		static_assert(offsetof(CS2::pulse_runtime_lib::CPulse_InvokeBinding, m_nSrcInstruction) == 0x48, "m_nSrcInstruction in CPulse_InvokeBinding should be at offset 0x48");
		static_assert(sizeof(CS2::pulse_runtime_lib::CPulse_InvokeBinding) == 0xB0, "CPulse_InvokeBinding size should be 0xB0");
	}
}
