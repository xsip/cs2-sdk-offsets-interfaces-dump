// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif







using namespace GlobalTypes;
namespace CS2 {
	namespace materialsystem2 {
		class PostProcessingTonemapParameters_t  {
		public:
			float32 m_flExposureBias; // 0x0 | Schema_Builtin | Size: 0x4
			float32 m_flShoulderStrength; // 0x4 | Schema_Builtin | Size: 0x4
			float32 m_flLinearStrength; // 0x8 | Schema_Builtin | Size: 0x4
			float32 m_flLinearAngle; // 0xc | Schema_Builtin | Size: 0x4
			float32 m_flToeStrength; // 0x10 | Schema_Builtin | Size: 0x4
			float32 m_flToeNum; // 0x14 | Schema_Builtin | Size: 0x4
			float32 m_flToeDenom; // 0x18 | Schema_Builtin | Size: 0x4
			float32 m_flWhitePoint; // 0x1c | Schema_Builtin | Size: 0x4
			float32 m_flLuminanceSource; // 0x20 | Schema_Builtin | Size: 0x4
			float32 m_flExposureBiasShadows; // 0x24 | Schema_Builtin | Size: 0x4
			float32 m_flExposureBiasHighlights; // 0x28 | Schema_Builtin | Size: 0x4
			float32 m_flMinShadowLum; // 0x2c | Schema_Builtin | Size: 0x4
			float32 m_flMaxShadowLum; // 0x30 | Schema_Builtin | Size: 0x4
			float32 m_flMinHighlightLum; // 0x34 | Schema_Builtin | Size: 0x4
			float32 m_flMaxHighlightLum; // 0x38 | Schema_Builtin | Size: 0x4
		};
		static_assert(offsetof(CS2::materialsystem2::PostProcessingTonemapParameters_t, m_flExposureBias) == 0x0, "m_flExposureBias in PostProcessingTonemapParameters_t should be at offset 0x0");
		static_assert(offsetof(CS2::materialsystem2::PostProcessingTonemapParameters_t, m_flShoulderStrength) == 0x4, "m_flShoulderStrength in PostProcessingTonemapParameters_t should be at offset 0x4");
		static_assert(offsetof(CS2::materialsystem2::PostProcessingTonemapParameters_t, m_flLinearStrength) == 0x8, "m_flLinearStrength in PostProcessingTonemapParameters_t should be at offset 0x8");
		static_assert(offsetof(CS2::materialsystem2::PostProcessingTonemapParameters_t, m_flLinearAngle) == 0xC, "m_flLinearAngle in PostProcessingTonemapParameters_t should be at offset 0xC");
		static_assert(offsetof(CS2::materialsystem2::PostProcessingTonemapParameters_t, m_flToeStrength) == 0x10, "m_flToeStrength in PostProcessingTonemapParameters_t should be at offset 0x10");
		static_assert(offsetof(CS2::materialsystem2::PostProcessingTonemapParameters_t, m_flToeNum) == 0x14, "m_flToeNum in PostProcessingTonemapParameters_t should be at offset 0x14");
		static_assert(offsetof(CS2::materialsystem2::PostProcessingTonemapParameters_t, m_flToeDenom) == 0x18, "m_flToeDenom in PostProcessingTonemapParameters_t should be at offset 0x18");
		static_assert(offsetof(CS2::materialsystem2::PostProcessingTonemapParameters_t, m_flWhitePoint) == 0x1C, "m_flWhitePoint in PostProcessingTonemapParameters_t should be at offset 0x1C");
		static_assert(offsetof(CS2::materialsystem2::PostProcessingTonemapParameters_t, m_flLuminanceSource) == 0x20, "m_flLuminanceSource in PostProcessingTonemapParameters_t should be at offset 0x20");
		static_assert(offsetof(CS2::materialsystem2::PostProcessingTonemapParameters_t, m_flExposureBiasShadows) == 0x24, "m_flExposureBiasShadows in PostProcessingTonemapParameters_t should be at offset 0x24");
		static_assert(offsetof(CS2::materialsystem2::PostProcessingTonemapParameters_t, m_flExposureBiasHighlights) == 0x28, "m_flExposureBiasHighlights in PostProcessingTonemapParameters_t should be at offset 0x28");
		static_assert(offsetof(CS2::materialsystem2::PostProcessingTonemapParameters_t, m_flMinShadowLum) == 0x2C, "m_flMinShadowLum in PostProcessingTonemapParameters_t should be at offset 0x2C");
		static_assert(offsetof(CS2::materialsystem2::PostProcessingTonemapParameters_t, m_flMaxShadowLum) == 0x30, "m_flMaxShadowLum in PostProcessingTonemapParameters_t should be at offset 0x30");
		static_assert(offsetof(CS2::materialsystem2::PostProcessingTonemapParameters_t, m_flMinHighlightLum) == 0x34, "m_flMinHighlightLum in PostProcessingTonemapParameters_t should be at offset 0x34");
		static_assert(offsetof(CS2::materialsystem2::PostProcessingTonemapParameters_t, m_flMaxHighlightLum) == 0x38, "m_flMaxHighlightLum in PostProcessingTonemapParameters_t should be at offset 0x38");
		static_assert(sizeof(CS2::materialsystem2::PostProcessingTonemapParameters_t) == 0x3C, "PostProcessingTonemapParameters_t size should be 0x3C");
	}
}
