// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/entity2/GameTick_t.hpp>



namespace CS2 {
	namespace client {
		class PredictedDamageTag_t  {
		public:
			S2_PAD(0x30);
			entity2::GameTick_t nTagTick; // 0x30 | Schema_DeclaredClass | Size: 0x4
			float32 flFlinchModSmall; // 0x34 | Schema_Builtin | Size: 0x4
			float32 flFlinchModLarge; // 0x38 | Schema_Builtin | Size: 0x4
			float32 flFriendlyFireDamageReductionRatio; // 0x3c | Schema_Builtin | Size: 0x4
		};
		static_assert(offsetof(CS2::client::PredictedDamageTag_t, nTagTick) == 0x30, "nTagTick in PredictedDamageTag_t should be at offset 0x30");
		static_assert(offsetof(CS2::client::PredictedDamageTag_t, flFlinchModSmall) == 0x34, "flFlinchModSmall in PredictedDamageTag_t should be at offset 0x34");
		static_assert(offsetof(CS2::client::PredictedDamageTag_t, flFlinchModLarge) == 0x38, "flFlinchModLarge in PredictedDamageTag_t should be at offset 0x38");
		static_assert(offsetof(CS2::client::PredictedDamageTag_t, flFriendlyFireDamageReductionRatio) == 0x3C, "flFriendlyFireDamageReductionRatio in PredictedDamageTag_t should be at offset 0x3C");
		static_assert(sizeof(CS2::client::PredictedDamageTag_t) == 0x40, "PredictedDamageTag_t size should be 0x40");
	}
}
