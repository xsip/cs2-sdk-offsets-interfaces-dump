// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/client/C_BaseEntity.hpp>





using namespace GlobalTypes;
namespace CS2 {
	namespace client {
		class C_ColorCorrection : public CS2::client::C_BaseEntity {
		public:
			GlobalTypes::Vector m_vecOrigin; // 0x5f8 | Schema_Atomic | Size: 0xc
			float32 m_MinFalloff; // 0x604 | Schema_Builtin | Size: 0x4
			float32 m_MaxFalloff; // 0x608 | Schema_Builtin | Size: 0x4
			float32 m_flFadeInDuration; // 0x60c | Schema_Builtin | Size: 0x4
			float32 m_flFadeOutDuration; // 0x610 | Schema_Builtin | Size: 0x4
			float32 m_flMaxWeight; // 0x614 | Schema_Builtin | Size: 0x4
			float32 m_flCurWeight; // 0x618 | Schema_Builtin | Size: 0x4
			char m_netlookupFilename[512]; // 0x61c | Schema_FixedArray | Size: 0x200
			bool m_bEnabled; // 0x81c | Schema_Builtin | Size: 0x1
			bool m_bMaster; // 0x81d | Schema_Builtin | Size: 0x1
			bool m_bClientSide; // 0x81e | Schema_Builtin | Size: 0x1
			bool m_bExclusive; // 0x81f | Schema_Builtin | Size: 0x1
			bool m_bEnabledOnClient[1]; // 0x820 | Schema_FixedArray | Size: 0x1
			S2_PAD(0x3);
			float32 m_flCurWeightOnClient[1]; // 0x824 | Schema_FixedArray | Size: 0x4
			bool m_bFadingIn[1]; // 0x828 | Schema_FixedArray | Size: 0x1
			S2_PAD(0x3);
			float32 m_flFadeStartWeight[1]; // 0x82c | Schema_FixedArray | Size: 0x4
			float32 m_flFadeStartTime[1]; // 0x830 | Schema_FixedArray | Size: 0x4
			float32 m_flFadeDuration[1]; // 0x834 | Schema_FixedArray | Size: 0x4
			S2_PAD(0x8); // End padding
		};
		static_assert(offsetof(CS2::client::C_ColorCorrection, m_vecOrigin) == 0x5F8, "m_vecOrigin in C_ColorCorrection should be at offset 0x5F8");
		static_assert(offsetof(CS2::client::C_ColorCorrection, m_MinFalloff) == 0x604, "m_MinFalloff in C_ColorCorrection should be at offset 0x604");
		static_assert(offsetof(CS2::client::C_ColorCorrection, m_MaxFalloff) == 0x608, "m_MaxFalloff in C_ColorCorrection should be at offset 0x608");
		static_assert(offsetof(CS2::client::C_ColorCorrection, m_flFadeInDuration) == 0x60C, "m_flFadeInDuration in C_ColorCorrection should be at offset 0x60C");
		static_assert(offsetof(CS2::client::C_ColorCorrection, m_flFadeOutDuration) == 0x610, "m_flFadeOutDuration in C_ColorCorrection should be at offset 0x610");
		static_assert(offsetof(CS2::client::C_ColorCorrection, m_flMaxWeight) == 0x614, "m_flMaxWeight in C_ColorCorrection should be at offset 0x614");
		static_assert(offsetof(CS2::client::C_ColorCorrection, m_flCurWeight) == 0x618, "m_flCurWeight in C_ColorCorrection should be at offset 0x618");
		static_assert(offsetof(CS2::client::C_ColorCorrection, m_netlookupFilename) == 0x61C, "m_netlookupFilename in C_ColorCorrection should be at offset 0x61C");
		static_assert(offsetof(CS2::client::C_ColorCorrection, m_bEnabled) == 0x81C, "m_bEnabled in C_ColorCorrection should be at offset 0x81C");
		static_assert(offsetof(CS2::client::C_ColorCorrection, m_bMaster) == 0x81D, "m_bMaster in C_ColorCorrection should be at offset 0x81D");
		static_assert(offsetof(CS2::client::C_ColorCorrection, m_bClientSide) == 0x81E, "m_bClientSide in C_ColorCorrection should be at offset 0x81E");
		static_assert(offsetof(CS2::client::C_ColorCorrection, m_bExclusive) == 0x81F, "m_bExclusive in C_ColorCorrection should be at offset 0x81F");
		static_assert(offsetof(CS2::client::C_ColorCorrection, m_bEnabledOnClient) == 0x820, "m_bEnabledOnClient in C_ColorCorrection should be at offset 0x820");
		static_assert(offsetof(CS2::client::C_ColorCorrection, m_flCurWeightOnClient) == 0x824, "m_flCurWeightOnClient in C_ColorCorrection should be at offset 0x824");
		static_assert(offsetof(CS2::client::C_ColorCorrection, m_bFadingIn) == 0x828, "m_bFadingIn in C_ColorCorrection should be at offset 0x828");
		static_assert(offsetof(CS2::client::C_ColorCorrection, m_flFadeStartWeight) == 0x82C, "m_flFadeStartWeight in C_ColorCorrection should be at offset 0x82C");
		static_assert(offsetof(CS2::client::C_ColorCorrection, m_flFadeStartTime) == 0x830, "m_flFadeStartTime in C_ColorCorrection should be at offset 0x830");
		static_assert(offsetof(CS2::client::C_ColorCorrection, m_flFadeDuration) == 0x834, "m_flFadeDuration in C_ColorCorrection should be at offset 0x834");
		static_assert(sizeof(CS2::client::C_ColorCorrection) == 0x840, "C_ColorCorrection size should be 0x840");
	}
}
