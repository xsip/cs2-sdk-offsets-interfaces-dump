// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/entity2/GameTick_t.hpp>





using namespace GlobalTypes;
namespace CS2 {
	namespace client {
		class thinkfunc_t  {
		public:
			S2_PAD(0x8);
			GlobalTypes::HSCRIPT m_hFn; // 0x8 | Schema_Atomic | Size: 0x8
			GlobalTypes::CUtlStringToken m_nContext; // 0x10 | Schema_Atomic | Size: 0x4
			entity2::GameTick_t m_nNextThinkTick; // 0x14 | Schema_DeclaredClass | Size: 0x4
			entity2::GameTick_t m_nLastThinkTick; // 0x18 | Schema_DeclaredClass | Size: 0x4
			S2_PAD(0x4); // End padding
		};
		static_assert(offsetof(CS2::client::thinkfunc_t, m_hFn) == 0x8, "m_hFn in thinkfunc_t should be at offset 0x8");
		static_assert(offsetof(CS2::client::thinkfunc_t, m_nContext) == 0x10, "m_nContext in thinkfunc_t should be at offset 0x10");
		static_assert(offsetof(CS2::client::thinkfunc_t, m_nNextThinkTick) == 0x14, "m_nNextThinkTick in thinkfunc_t should be at offset 0x14");
		static_assert(offsetof(CS2::client::thinkfunc_t, m_nLastThinkTick) == 0x18, "m_nLastThinkTick in thinkfunc_t should be at offset 0x18");
		static_assert(sizeof(CS2::client::thinkfunc_t) == 0x20, "thinkfunc_t size should be 0x20");
	}
}
