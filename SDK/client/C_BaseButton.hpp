// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/client/C_BaseToggle.hpp>



namespace CS2 {
	namespace client {
		class C_BaseModelEntity;
	}
}


using namespace GlobalTypes;
namespace CS2 {
	namespace client {
		class C_BaseButton : public CS2::client::C_BaseToggle {
		public:
			GlobalTypes::CHandle<client::C_BaseModelEntity> m_glowEntity; // 0xeb0 | Schema_Atomic | Size: 0x4
			// char  m_glowEntity[0x4]; // 0xeb0 | Schema_Atomic | Size: 0x4
			bool m_usable; // 0xeb4 | Schema_Builtin | Size: 0x1
			S2_PAD(0x3);
			GlobalTypes::CUtlSymbolLarge m_szDisplayText; // 0xeb8 | Schema_Atomic | Size: 0x8
		};
		static_assert(offsetof(CS2::client::C_BaseButton, m_glowEntity) == 0xEB0, "m_glowEntity in C_BaseButton should be at offset 0xEB0");
		static_assert(offsetof(CS2::client::C_BaseButton, m_usable) == 0xEB4, "m_usable in C_BaseButton should be at offset 0xEB4");
		static_assert(offsetof(CS2::client::C_BaseButton, m_szDisplayText) == 0xEB8, "m_szDisplayText in C_BaseButton should be at offset 0xEB8");
		static_assert(sizeof(CS2::client::C_BaseButton) == 0xEC0, "C_BaseButton size should be 0xEC0");
	}
}
