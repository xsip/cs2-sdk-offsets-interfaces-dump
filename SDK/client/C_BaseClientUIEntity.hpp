// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <SDK/GlobalTypes.hpp>

#include <SDK/client/C_BaseModelEntity.hpp>



namespace CS2 {
	namespace client {
		class C_BaseClientUIEntity : public CS2::client::C_BaseModelEntity {
		public:
			S2_PAD(0x8);
			bool m_bEnabled; // 0xed0 | Schema_Builtin | Size: 0x1
			S2_PAD(0x7);
			GlobalTypes::CUtlSymbolLarge m_DialogXMLName; // 0xed8 | Schema_Atomic | Size: 0x8
			GlobalTypes::CUtlSymbolLarge m_PanelClassName; // 0xee0 | Schema_Atomic | Size: 0x8
			GlobalTypes::CUtlSymbolLarge m_PanelID; // 0xee8 | Schema_Atomic | Size: 0x8
			S2_PAD(0x8); // End padding
		};
		static_assert(offsetof(CS2::client::C_BaseClientUIEntity, m_bEnabled) == 0xED0, "m_bEnabled in C_BaseClientUIEntity should be at offset 0xED0");
		static_assert(offsetof(CS2::client::C_BaseClientUIEntity, m_DialogXMLName) == 0xED8, "m_DialogXMLName in C_BaseClientUIEntity should be at offset 0xED8");
		static_assert(offsetof(CS2::client::C_BaseClientUIEntity, m_PanelClassName) == 0xEE0, "m_PanelClassName in C_BaseClientUIEntity should be at offset 0xEE0");
		static_assert(offsetof(CS2::client::C_BaseClientUIEntity, m_PanelID) == 0xEE8, "m_PanelID in C_BaseClientUIEntity should be at offset 0xEE8");
		static_assert(sizeof(CS2::client::C_BaseClientUIEntity) == 0xEF8, "C_BaseClientUIEntity size should be 0xEF8");
	}
}
