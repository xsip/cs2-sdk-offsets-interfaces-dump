// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <SDK/GlobalTypes.hpp>

#include <SDK/entity2/CNetworkVarChainer.hpp>



namespace CS2 {
	namespace client {
		class C_GameRules  {
		public:
			S2_PAD(0x8);
			entity2::CNetworkVarChainer __m_pChainEntity; // 0x8 | Schema_DeclaredClass | Size: 0x28
			int32_t m_nTotalPausedTicks; // 0x30 | Schema_Builtin | Size: 0x4
			int32_t m_nPauseStartTick; // 0x34 | Schema_Builtin | Size: 0x4
			bool m_bGamePaused; // 0x38 | Schema_Builtin | Size: 0x1
			S2_PAD(0x7); // End padding
		};
		static_assert(offsetof(CS2::client::C_GameRules, __m_pChainEntity) == 0x8, "__m_pChainEntity in C_GameRules should be at offset 0x8");
		static_assert(offsetof(CS2::client::C_GameRules, m_nTotalPausedTicks) == 0x30, "m_nTotalPausedTicks in C_GameRules should be at offset 0x30");
		static_assert(offsetof(CS2::client::C_GameRules, m_nPauseStartTick) == 0x34, "m_nPauseStartTick in C_GameRules should be at offset 0x34");
		static_assert(offsetof(CS2::client::C_GameRules, m_bGamePaused) == 0x38, "m_bGamePaused in C_GameRules should be at offset 0x38");
		static_assert(sizeof(CS2::client::C_GameRules) == 0x40, "C_GameRules size should be 0x40");
	}
}
