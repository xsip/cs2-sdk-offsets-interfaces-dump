// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif







using namespace GlobalTypes;
namespace CS2 {
	namespace client {
		class SoundeventPathCornerPairNetworked_t  {
		public:
			GlobalTypes::Vector vP1; // 0x0 | Schema_Atomic | Size: 0xc
			GlobalTypes::Vector vP2; // 0xc | Schema_Atomic | Size: 0xc
			float32 flPathLengthSqr; // 0x18 | Schema_Builtin | Size: 0x4
			float32 flP1Pct; // 0x1c | Schema_Builtin | Size: 0x4
			float32 flP2Pct; // 0x20 | Schema_Builtin | Size: 0x4
		};
		static_assert(offsetof(CS2::client::SoundeventPathCornerPairNetworked_t, vP1) == 0x0, "vP1 in SoundeventPathCornerPairNetworked_t should be at offset 0x0");
		static_assert(offsetof(CS2::client::SoundeventPathCornerPairNetworked_t, vP2) == 0xC, "vP2 in SoundeventPathCornerPairNetworked_t should be at offset 0xC");
		static_assert(offsetof(CS2::client::SoundeventPathCornerPairNetworked_t, flPathLengthSqr) == 0x18, "flPathLengthSqr in SoundeventPathCornerPairNetworked_t should be at offset 0x18");
		static_assert(offsetof(CS2::client::SoundeventPathCornerPairNetworked_t, flP1Pct) == 0x1C, "flP1Pct in SoundeventPathCornerPairNetworked_t should be at offset 0x1C");
		static_assert(offsetof(CS2::client::SoundeventPathCornerPairNetworked_t, flP2Pct) == 0x20, "flP2Pct in SoundeventPathCornerPairNetworked_t should be at offset 0x20");
		static_assert(sizeof(CS2::client::SoundeventPathCornerPairNetworked_t) == 0x24, "SoundeventPathCornerPairNetworked_t size should be 0x24");
	}
}
