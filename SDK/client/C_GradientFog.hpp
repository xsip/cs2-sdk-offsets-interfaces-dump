// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <SDK/GlobalTypes.hpp>

#include <SDK/client/C_BaseEntity.hpp>



namespace CS2 {
	namespace client {
		class C_GradientFog : public CS2::client::C_BaseEntity {
		public:
			// GlobalTypes::CStrongHandle< resourcesystem::InfoForResourceTypeCTextureBase > m_hGradientFogTexture; // 0x5f8 | Schema_Atomic | Size: 0x8
			char  m_hGradientFogTexture[0x8]; // 0x5f8 | Schema_Atomic | Size: 0x8
			float32 m_flFogStartDistance; // 0x600 | Schema_Builtin | Size: 0x4
			float32 m_flFogEndDistance; // 0x604 | Schema_Builtin | Size: 0x4
			bool m_bHeightFogEnabled; // 0x608 | Schema_Builtin | Size: 0x1
			S2_PAD(0x3);
			float32 m_flFogStartHeight; // 0x60c | Schema_Builtin | Size: 0x4
			float32 m_flFogEndHeight; // 0x610 | Schema_Builtin | Size: 0x4
			float32 m_flFarZ; // 0x614 | Schema_Builtin | Size: 0x4
			float32 m_flFogMaxOpacity; // 0x618 | Schema_Builtin | Size: 0x4
			float32 m_flFogFalloffExponent; // 0x61c | Schema_Builtin | Size: 0x4
			float32 m_flFogVerticalExponent; // 0x620 | Schema_Builtin | Size: 0x4
			GlobalTypes::Color m_fogColor; // 0x624 | Schema_Atomic | Size: 0x4
			float32 m_flFogStrength; // 0x628 | Schema_Builtin | Size: 0x4
			float32 m_flFadeTime; // 0x62c | Schema_Builtin | Size: 0x4
			bool m_bStartDisabled; // 0x630 | Schema_Builtin | Size: 0x1
			bool m_bIsEnabled; // 0x631 | Schema_Builtin | Size: 0x1
			bool m_bGradientFogNeedsTextures; // 0x632 | Schema_Builtin | Size: 0x1
			S2_PAD(0x5d); // End padding
		};
		static_assert(offsetof(CS2::client::C_GradientFog, m_hGradientFogTexture) == 0x5F8, "m_hGradientFogTexture in C_GradientFog should be at offset 0x5F8");
		static_assert(offsetof(CS2::client::C_GradientFog, m_flFogStartDistance) == 0x600, "m_flFogStartDistance in C_GradientFog should be at offset 0x600");
		static_assert(offsetof(CS2::client::C_GradientFog, m_flFogEndDistance) == 0x604, "m_flFogEndDistance in C_GradientFog should be at offset 0x604");
		static_assert(offsetof(CS2::client::C_GradientFog, m_bHeightFogEnabled) == 0x608, "m_bHeightFogEnabled in C_GradientFog should be at offset 0x608");
		static_assert(offsetof(CS2::client::C_GradientFog, m_flFogStartHeight) == 0x60C, "m_flFogStartHeight in C_GradientFog should be at offset 0x60C");
		static_assert(offsetof(CS2::client::C_GradientFog, m_flFogEndHeight) == 0x610, "m_flFogEndHeight in C_GradientFog should be at offset 0x610");
		static_assert(offsetof(CS2::client::C_GradientFog, m_flFarZ) == 0x614, "m_flFarZ in C_GradientFog should be at offset 0x614");
		static_assert(offsetof(CS2::client::C_GradientFog, m_flFogMaxOpacity) == 0x618, "m_flFogMaxOpacity in C_GradientFog should be at offset 0x618");
		static_assert(offsetof(CS2::client::C_GradientFog, m_flFogFalloffExponent) == 0x61C, "m_flFogFalloffExponent in C_GradientFog should be at offset 0x61C");
		static_assert(offsetof(CS2::client::C_GradientFog, m_flFogVerticalExponent) == 0x620, "m_flFogVerticalExponent in C_GradientFog should be at offset 0x620");
		static_assert(offsetof(CS2::client::C_GradientFog, m_fogColor) == 0x624, "m_fogColor in C_GradientFog should be at offset 0x624");
		static_assert(offsetof(CS2::client::C_GradientFog, m_flFogStrength) == 0x628, "m_flFogStrength in C_GradientFog should be at offset 0x628");
		static_assert(offsetof(CS2::client::C_GradientFog, m_flFadeTime) == 0x62C, "m_flFadeTime in C_GradientFog should be at offset 0x62C");
		static_assert(offsetof(CS2::client::C_GradientFog, m_bStartDisabled) == 0x630, "m_bStartDisabled in C_GradientFog should be at offset 0x630");
		static_assert(offsetof(CS2::client::C_GradientFog, m_bIsEnabled) == 0x631, "m_bIsEnabled in C_GradientFog should be at offset 0x631");
		static_assert(offsetof(CS2::client::C_GradientFog, m_bGradientFogNeedsTextures) == 0x632, "m_bGradientFogNeedsTextures in C_GradientFog should be at offset 0x632");
		static_assert(sizeof(CS2::client::C_GradientFog) == 0x690, "C_GradientFog size should be 0x690");
	}
}
