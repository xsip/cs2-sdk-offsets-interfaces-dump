// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif







using namespace GlobalTypes;
namespace CS2 {
	namespace client {
		class CSoundEnvelope  {
		public:
			float32 m_current; // 0x0 | Schema_Builtin | Size: 0x4
			float32 m_target; // 0x4 | Schema_Builtin | Size: 0x4
			float32 m_rate; // 0x8 | Schema_Builtin | Size: 0x4
			bool m_forceupdate; // 0xc | Schema_Builtin | Size: 0x1
			S2_PAD(0x3); // End padding
		};
		static_assert(offsetof(CS2::client::CSoundEnvelope, m_current) == 0x0, "m_current in CSoundEnvelope should be at offset 0x0");
		static_assert(offsetof(CS2::client::CSoundEnvelope, m_target) == 0x4, "m_target in CSoundEnvelope should be at offset 0x4");
		static_assert(offsetof(CS2::client::CSoundEnvelope, m_rate) == 0x8, "m_rate in CSoundEnvelope should be at offset 0x8");
		static_assert(offsetof(CS2::client::CSoundEnvelope, m_forceupdate) == 0xC, "m_forceupdate in CSoundEnvelope should be at offset 0xC");
		static_assert(sizeof(CS2::client::CSoundEnvelope) == 0x10, "CSoundEnvelope size should be 0x10");
	}
}
