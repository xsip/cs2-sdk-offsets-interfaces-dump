// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/client/IClientAlphaProperty.hpp>
#include <SDK/entity2/GameTime_t.hpp>



namespace CS2 {
	namespace client {
		class CClientAlphaProperty : public CS2::client::IClientAlphaProperty {
		public:
			S2_PAD(0x8);
			uint8_t m_nRenderFX; // 0x10 | Schema_Builtin | Size: 0x1
			uint8_t m_nRenderMode; // 0x11 | Schema_Builtin | Size: 0x1
			S2_PAD(0x1);
			uint8_t m_nAlpha; // 0x13 | Schema_Builtin | Size: 0x1
			uint16_t m_nDesyncOffset; // 0x14 | Schema_Builtin | Size: 0x2
			uint16_t m_nReserved2; // 0x16 | Schema_Builtin | Size: 0x2
			uint16_t m_nDistFadeStart; // 0x18 | Schema_Builtin | Size: 0x2
			uint16_t m_nDistFadeEnd; // 0x1a | Schema_Builtin | Size: 0x2
			float32 m_flFadeScale; // 0x1c | Schema_Builtin | Size: 0x4
			entity2::GameTime_t m_flRenderFxStartTime; // 0x20 | Schema_DeclaredClass | Size: 0x4
			float32 m_flRenderFxDuration; // 0x24 | Schema_Builtin | Size: 0x4
			S2_PAD(0x8); // End padding
		};
		static_assert(offsetof(CS2::client::CClientAlphaProperty, m_nRenderFX) == 0x10, "m_nRenderFX in CClientAlphaProperty should be at offset 0x10");
		static_assert(offsetof(CS2::client::CClientAlphaProperty, m_nRenderMode) == 0x11, "m_nRenderMode in CClientAlphaProperty should be at offset 0x11");
		static_assert(offsetof(CS2::client::CClientAlphaProperty, m_nAlpha) == 0x13, "m_nAlpha in CClientAlphaProperty should be at offset 0x13");
		static_assert(offsetof(CS2::client::CClientAlphaProperty, m_nDesyncOffset) == 0x14, "m_nDesyncOffset in CClientAlphaProperty should be at offset 0x14");
		static_assert(offsetof(CS2::client::CClientAlphaProperty, m_nReserved2) == 0x16, "m_nReserved2 in CClientAlphaProperty should be at offset 0x16");
		static_assert(offsetof(CS2::client::CClientAlphaProperty, m_nDistFadeStart) == 0x18, "m_nDistFadeStart in CClientAlphaProperty should be at offset 0x18");
		static_assert(offsetof(CS2::client::CClientAlphaProperty, m_nDistFadeEnd) == 0x1A, "m_nDistFadeEnd in CClientAlphaProperty should be at offset 0x1A");
		static_assert(offsetof(CS2::client::CClientAlphaProperty, m_flFadeScale) == 0x1C, "m_flFadeScale in CClientAlphaProperty should be at offset 0x1C");
		static_assert(offsetof(CS2::client::CClientAlphaProperty, m_flRenderFxStartTime) == 0x20, "m_flRenderFxStartTime in CClientAlphaProperty should be at offset 0x20");
		static_assert(offsetof(CS2::client::CClientAlphaProperty, m_flRenderFxDuration) == 0x24, "m_flRenderFxDuration in CClientAlphaProperty should be at offset 0x24");
		static_assert(sizeof(CS2::client::CClientAlphaProperty) == 0x30, "CClientAlphaProperty size should be 0x30");
	}
}
