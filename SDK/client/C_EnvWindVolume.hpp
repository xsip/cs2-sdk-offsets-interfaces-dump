// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/client/C_BaseEntity.hpp>



namespace CS2 {
	namespace client {
		class C_EnvWindVolume : public CS2::client::C_BaseEntity {
		public:
			bool m_bActive; // 0x5f8 | Schema_Builtin | Size: 0x1
			S2_PAD(0x3);
			GlobalTypes::Vector m_vBoxMins; // 0x5fc | Schema_Atomic | Size: 0xc
			GlobalTypes::Vector m_vBoxMaxs; // 0x608 | Schema_Atomic | Size: 0xc
			bool m_bStartDisabled; // 0x614 | Schema_Builtin | Size: 0x1
			S2_PAD(0x3);
			int32_t m_nShape; // 0x618 | Schema_Builtin | Size: 0x4
			float32 m_fWindSpeedMultiplier; // 0x61c | Schema_Builtin | Size: 0x4
			float32 m_fWindTurbulenceMultiplier; // 0x620 | Schema_Builtin | Size: 0x4
			float32 m_fWindSpeedVariationMultiplier; // 0x624 | Schema_Builtin | Size: 0x4
			float32 m_fWindDirectionVariationMultiplier; // 0x628 | Schema_Builtin | Size: 0x4
			S2_PAD(0x4); // End padding
		};
		static_assert(offsetof(CS2::client::C_EnvWindVolume, m_bActive) == 0x5F8, "m_bActive in C_EnvWindVolume should be at offset 0x5F8");
		static_assert(offsetof(CS2::client::C_EnvWindVolume, m_vBoxMins) == 0x5FC, "m_vBoxMins in C_EnvWindVolume should be at offset 0x5FC");
		static_assert(offsetof(CS2::client::C_EnvWindVolume, m_vBoxMaxs) == 0x608, "m_vBoxMaxs in C_EnvWindVolume should be at offset 0x608");
		static_assert(offsetof(CS2::client::C_EnvWindVolume, m_bStartDisabled) == 0x614, "m_bStartDisabled in C_EnvWindVolume should be at offset 0x614");
		static_assert(offsetof(CS2::client::C_EnvWindVolume, m_nShape) == 0x618, "m_nShape in C_EnvWindVolume should be at offset 0x618");
		static_assert(offsetof(CS2::client::C_EnvWindVolume, m_fWindSpeedMultiplier) == 0x61C, "m_fWindSpeedMultiplier in C_EnvWindVolume should be at offset 0x61C");
		static_assert(offsetof(CS2::client::C_EnvWindVolume, m_fWindTurbulenceMultiplier) == 0x620, "m_fWindTurbulenceMultiplier in C_EnvWindVolume should be at offset 0x620");
		static_assert(offsetof(CS2::client::C_EnvWindVolume, m_fWindSpeedVariationMultiplier) == 0x624, "m_fWindSpeedVariationMultiplier in C_EnvWindVolume should be at offset 0x624");
		static_assert(offsetof(CS2::client::C_EnvWindVolume, m_fWindDirectionVariationMultiplier) == 0x628, "m_fWindDirectionVariationMultiplier in C_EnvWindVolume should be at offset 0x628");
		static_assert(sizeof(CS2::client::C_EnvWindVolume) == 0x630, "C_EnvWindVolume size should be 0x630");
	}
}
