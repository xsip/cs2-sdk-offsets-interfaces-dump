// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/client/CLogicalEntity.hpp>





using namespace GlobalTypes;
namespace CS2 {
	namespace client {
		class CLogicRelay : public CS2::client::CLogicalEntity {
		public:
			bool m_bDisabled; // 0x5f8 | Schema_Builtin | Size: 0x1
			bool m_bWaitForRefire; // 0x5f9 | Schema_Builtin | Size: 0x1
			bool m_bTriggerOnce; // 0x5fa | Schema_Builtin | Size: 0x1
			bool m_bFastRetrigger; // 0x5fb | Schema_Builtin | Size: 0x1
			bool m_bPassthoughCaller; // 0x5fc | Schema_Builtin | Size: 0x1
			S2_PAD(0x3); // End padding
		};
		static_assert(offsetof(CS2::client::CLogicRelay, m_bDisabled) == 0x5F8, "m_bDisabled in CLogicRelay should be at offset 0x5F8");
		static_assert(offsetof(CS2::client::CLogicRelay, m_bWaitForRefire) == 0x5F9, "m_bWaitForRefire in CLogicRelay should be at offset 0x5F9");
		static_assert(offsetof(CS2::client::CLogicRelay, m_bTriggerOnce) == 0x5FA, "m_bTriggerOnce in CLogicRelay should be at offset 0x5FA");
		static_assert(offsetof(CS2::client::CLogicRelay, m_bFastRetrigger) == 0x5FB, "m_bFastRetrigger in CLogicRelay should be at offset 0x5FB");
		static_assert(offsetof(CS2::client::CLogicRelay, m_bPassthoughCaller) == 0x5FC, "m_bPassthoughCaller in CLogicRelay should be at offset 0x5FC");
		static_assert(sizeof(CS2::client::CLogicRelay) == 0x600, "CLogicRelay size should be 0x600");
	}
}
