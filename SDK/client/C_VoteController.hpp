// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/client/C_BaseEntity.hpp>





using namespace GlobalTypes;
namespace CS2 {
	namespace client {
		class C_VoteController : public CS2::client::C_BaseEntity {
		public:
			S2_PAD(0x10);
			int32_t m_iActiveIssueIndex; // 0x608 | Schema_Builtin | Size: 0x4
			int32_t m_iOnlyTeamToVote; // 0x60c | Schema_Builtin | Size: 0x4
			int32_t m_nVoteOptionCount[5]; // 0x610 | Schema_FixedArray | Size: 0x14
			int32_t m_nPotentialVotes; // 0x624 | Schema_Builtin | Size: 0x4
			bool m_bVotesDirty; // 0x628 | Schema_Builtin | Size: 0x1
			bool m_bTypeDirty; // 0x629 | Schema_Builtin | Size: 0x1
			bool m_bIsYesNoVote; // 0x62a | Schema_Builtin | Size: 0x1
			S2_PAD(0x5); // End padding
		};
		static_assert(offsetof(CS2::client::C_VoteController, m_iActiveIssueIndex) == 0x608, "m_iActiveIssueIndex in C_VoteController should be at offset 0x608");
		static_assert(offsetof(CS2::client::C_VoteController, m_iOnlyTeamToVote) == 0x60C, "m_iOnlyTeamToVote in C_VoteController should be at offset 0x60C");
		static_assert(offsetof(CS2::client::C_VoteController, m_nVoteOptionCount) == 0x610, "m_nVoteOptionCount in C_VoteController should be at offset 0x610");
		static_assert(offsetof(CS2::client::C_VoteController, m_nPotentialVotes) == 0x624, "m_nPotentialVotes in C_VoteController should be at offset 0x624");
		static_assert(offsetof(CS2::client::C_VoteController, m_bVotesDirty) == 0x628, "m_bVotesDirty in C_VoteController should be at offset 0x628");
		static_assert(offsetof(CS2::client::C_VoteController, m_bTypeDirty) == 0x629, "m_bTypeDirty in C_VoteController should be at offset 0x629");
		static_assert(offsetof(CS2::client::C_VoteController, m_bIsYesNoVote) == 0x62A, "m_bIsYesNoVote in C_VoteController should be at offset 0x62A");
		static_assert(sizeof(CS2::client::C_VoteController) == 0x630, "C_VoteController size should be 0x630");
	}
}
