// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <SDK/GlobalTypes.hpp>

#include <SDK/tier2/CRangeInt.hpp>
#include <SDK/client/AmmoFlags_t.hpp>
#include <SDK/tier2/CRangeFloat.hpp>



namespace CS2 {
	namespace client {
		class AmmoTypeInfo_t  {
		public:
			S2_PAD(0x10);
			int32_t m_nMaxCarry; // 0x10 | Schema_Builtin | Size: 0x4
			S2_PAD(0x8);
			tier2::CRangeInt m_nSplashSize; // 0x1c | Schema_DeclaredClass | Size: 0x8
			client::AmmoFlags_t m_nFlags; // 0x24 | Schema_DeclaredEnum | Size: 0x4
			float32 m_flMass; // 0x28 | Schema_Builtin | Size: 0x4
			tier2::CRangeFloat m_flSpeed; // 0x2c | Schema_DeclaredClass | Size: 0x8
			S2_PAD(0x4); // End padding
		};
		static_assert(offsetof(CS2::client::AmmoTypeInfo_t, m_nMaxCarry) == 0x10, "m_nMaxCarry in AmmoTypeInfo_t should be at offset 0x10");
		static_assert(offsetof(CS2::client::AmmoTypeInfo_t, m_nSplashSize) == 0x1C, "m_nSplashSize in AmmoTypeInfo_t should be at offset 0x1C");
		static_assert(offsetof(CS2::client::AmmoTypeInfo_t, m_nFlags) == 0x24, "m_nFlags in AmmoTypeInfo_t should be at offset 0x24");
		static_assert(offsetof(CS2::client::AmmoTypeInfo_t, m_flMass) == 0x28, "m_flMass in AmmoTypeInfo_t should be at offset 0x28");
		static_assert(offsetof(CS2::client::AmmoTypeInfo_t, m_flSpeed) == 0x2C, "m_flSpeed in AmmoTypeInfo_t should be at offset 0x2C");
		static_assert(sizeof(CS2::client::AmmoTypeInfo_t) == 0x38, "AmmoTypeInfo_t size should be 0x38");
	}
}
