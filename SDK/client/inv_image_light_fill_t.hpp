// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif





namespace CS2 {
	namespace client {
		class inv_image_light_fill_t  {
		public:
			GlobalTypes::Vector color; // 0x0 | Schema_Atomic | Size: 0xc
			GlobalTypes::QAngle angle; // 0xc | Schema_Atomic | Size: 0xc
			float32 brightness; // 0x18 | Schema_Builtin | Size: 0x4
		};
		static_assert(offsetof(CS2::client::inv_image_light_fill_t, color) == 0x0, "color in inv_image_light_fill_t should be at offset 0x0");
		static_assert(offsetof(CS2::client::inv_image_light_fill_t, angle) == 0xC, "angle in inv_image_light_fill_t should be at offset 0xC");
		static_assert(offsetof(CS2::client::inv_image_light_fill_t, brightness) == 0x18, "brightness in inv_image_light_fill_t should be at offset 0x18");
		static_assert(sizeof(CS2::client::inv_image_light_fill_t) == 0x1C, "inv_image_light_fill_t size should be 0x1C");
	}
}
