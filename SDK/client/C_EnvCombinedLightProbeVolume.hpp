// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <SDK/GlobalTypes.hpp>

#include <SDK/client/C_BaseEntity.hpp>



namespace CS2 {
	namespace client {
		class C_EnvCombinedLightProbeVolume : public CS2::client::C_BaseEntity {
		public:
			S2_PAD(0x1078);
			GlobalTypes::Color m_Entity_Color; // 0x1670 | Schema_Atomic | Size: 0x4
			float32 m_Entity_flBrightness; // 0x1674 | Schema_Builtin | Size: 0x4
			// GlobalTypes::CStrongHandle< resourcesystem::InfoForResourceTypeCTextureBase > m_Entity_hCubemapTexture; // 0x1678 | Schema_Atomic | Size: 0x8
			char  m_Entity_hCubemapTexture[0x8]; // 0x1678 | Schema_Atomic | Size: 0x8
			bool m_Entity_bCustomCubemapTexture; // 0x1680 | Schema_Builtin | Size: 0x1
			S2_PAD(0x7);
			// GlobalTypes::CStrongHandle< resourcesystem::InfoForResourceTypeCTextureBase > m_Entity_hLightProbeTexture_AmbientCube; // 0x1688 | Schema_Atomic | Size: 0x8
			char  m_Entity_hLightProbeTexture_AmbientCube[0x8]; // 0x1688 | Schema_Atomic | Size: 0x8
			// GlobalTypes::CStrongHandle< resourcesystem::InfoForResourceTypeCTextureBase > m_Entity_hLightProbeTexture_SDF; // 0x1690 | Schema_Atomic | Size: 0x8
			char  m_Entity_hLightProbeTexture_SDF[0x8]; // 0x1690 | Schema_Atomic | Size: 0x8
			// GlobalTypes::CStrongHandle< resourcesystem::InfoForResourceTypeCTextureBase > m_Entity_hLightProbeTexture_SH2_DC; // 0x1698 | Schema_Atomic | Size: 0x8
			char  m_Entity_hLightProbeTexture_SH2_DC[0x8]; // 0x1698 | Schema_Atomic | Size: 0x8
			// GlobalTypes::CStrongHandle< resourcesystem::InfoForResourceTypeCTextureBase > m_Entity_hLightProbeTexture_SH2_R; // 0x16a0 | Schema_Atomic | Size: 0x8
			char  m_Entity_hLightProbeTexture_SH2_R[0x8]; // 0x16a0 | Schema_Atomic | Size: 0x8
			// GlobalTypes::CStrongHandle< resourcesystem::InfoForResourceTypeCTextureBase > m_Entity_hLightProbeTexture_SH2_G; // 0x16a8 | Schema_Atomic | Size: 0x8
			char  m_Entity_hLightProbeTexture_SH2_G[0x8]; // 0x16a8 | Schema_Atomic | Size: 0x8
			// GlobalTypes::CStrongHandle< resourcesystem::InfoForResourceTypeCTextureBase > m_Entity_hLightProbeTexture_SH2_B; // 0x16b0 | Schema_Atomic | Size: 0x8
			char  m_Entity_hLightProbeTexture_SH2_B[0x8]; // 0x16b0 | Schema_Atomic | Size: 0x8
			// GlobalTypes::CStrongHandle< resourcesystem::InfoForResourceTypeCTextureBase > m_Entity_hLightProbeDirectLightIndicesTexture; // 0x16b8 | Schema_Atomic | Size: 0x8
			char  m_Entity_hLightProbeDirectLightIndicesTexture[0x8]; // 0x16b8 | Schema_Atomic | Size: 0x8
			// GlobalTypes::CStrongHandle< resourcesystem::InfoForResourceTypeCTextureBase > m_Entity_hLightProbeDirectLightScalarsTexture; // 0x16c0 | Schema_Atomic | Size: 0x8
			char  m_Entity_hLightProbeDirectLightScalarsTexture[0x8]; // 0x16c0 | Schema_Atomic | Size: 0x8
			// GlobalTypes::CStrongHandle< resourcesystem::InfoForResourceTypeCTextureBase > m_Entity_hLightProbeDirectLightShadowsTexture; // 0x16c8 | Schema_Atomic | Size: 0x8
			char  m_Entity_hLightProbeDirectLightShadowsTexture[0x8]; // 0x16c8 | Schema_Atomic | Size: 0x8
			GlobalTypes::Vector m_Entity_vBoxMins; // 0x16d0 | Schema_Atomic | Size: 0xc
			GlobalTypes::Vector m_Entity_vBoxMaxs; // 0x16dc | Schema_Atomic | Size: 0xc
			bool m_Entity_bMoveable; // 0x16e8 | Schema_Builtin | Size: 0x1
			S2_PAD(0x3);
			int32_t m_Entity_nHandshake; // 0x16ec | Schema_Builtin | Size: 0x4
			int32_t m_Entity_nEnvCubeMapArrayIndex; // 0x16f0 | Schema_Builtin | Size: 0x4
			int32_t m_Entity_nPriority; // 0x16f4 | Schema_Builtin | Size: 0x4
			bool m_Entity_bStartDisabled; // 0x16f8 | Schema_Builtin | Size: 0x1
			S2_PAD(0x3);
			float32 m_Entity_flEdgeFadeDist; // 0x16fc | Schema_Builtin | Size: 0x4
			GlobalTypes::Vector m_Entity_vEdgeFadeDists; // 0x1700 | Schema_Atomic | Size: 0xc
			int32_t m_Entity_nLightProbeSizeX; // 0x170c | Schema_Builtin | Size: 0x4
			int32_t m_Entity_nLightProbeSizeY; // 0x1710 | Schema_Builtin | Size: 0x4
			int32_t m_Entity_nLightProbeSizeZ; // 0x1714 | Schema_Builtin | Size: 0x4
			int32_t m_Entity_nLightProbeAtlasX; // 0x1718 | Schema_Builtin | Size: 0x4
			int32_t m_Entity_nLightProbeAtlasY; // 0x171c | Schema_Builtin | Size: 0x4
			int32_t m_Entity_nLightProbeAtlasZ; // 0x1720 | Schema_Builtin | Size: 0x4
			S2_PAD(0x15);
			bool m_Entity_bEnabled; // 0x1739 | Schema_Builtin | Size: 0x1
			S2_PAD(0x6); // End padding
		};
		static_assert(offsetof(CS2::client::C_EnvCombinedLightProbeVolume, m_Entity_Color) == 0x1670, "m_Entity_Color in C_EnvCombinedLightProbeVolume should be at offset 0x1670");
		static_assert(offsetof(CS2::client::C_EnvCombinedLightProbeVolume, m_Entity_flBrightness) == 0x1674, "m_Entity_flBrightness in C_EnvCombinedLightProbeVolume should be at offset 0x1674");
		static_assert(offsetof(CS2::client::C_EnvCombinedLightProbeVolume, m_Entity_hCubemapTexture) == 0x1678, "m_Entity_hCubemapTexture in C_EnvCombinedLightProbeVolume should be at offset 0x1678");
		static_assert(offsetof(CS2::client::C_EnvCombinedLightProbeVolume, m_Entity_bCustomCubemapTexture) == 0x1680, "m_Entity_bCustomCubemapTexture in C_EnvCombinedLightProbeVolume should be at offset 0x1680");
		static_assert(offsetof(CS2::client::C_EnvCombinedLightProbeVolume, m_Entity_hLightProbeTexture_AmbientCube) == 0x1688, "m_Entity_hLightProbeTexture_AmbientCube in C_EnvCombinedLightProbeVolume should be at offset 0x1688");
		static_assert(offsetof(CS2::client::C_EnvCombinedLightProbeVolume, m_Entity_hLightProbeTexture_SDF) == 0x1690, "m_Entity_hLightProbeTexture_SDF in C_EnvCombinedLightProbeVolume should be at offset 0x1690");
		static_assert(offsetof(CS2::client::C_EnvCombinedLightProbeVolume, m_Entity_hLightProbeTexture_SH2_DC) == 0x1698, "m_Entity_hLightProbeTexture_SH2_DC in C_EnvCombinedLightProbeVolume should be at offset 0x1698");
		static_assert(offsetof(CS2::client::C_EnvCombinedLightProbeVolume, m_Entity_hLightProbeTexture_SH2_R) == 0x16A0, "m_Entity_hLightProbeTexture_SH2_R in C_EnvCombinedLightProbeVolume should be at offset 0x16A0");
		static_assert(offsetof(CS2::client::C_EnvCombinedLightProbeVolume, m_Entity_hLightProbeTexture_SH2_G) == 0x16A8, "m_Entity_hLightProbeTexture_SH2_G in C_EnvCombinedLightProbeVolume should be at offset 0x16A8");
		static_assert(offsetof(CS2::client::C_EnvCombinedLightProbeVolume, m_Entity_hLightProbeTexture_SH2_B) == 0x16B0, "m_Entity_hLightProbeTexture_SH2_B in C_EnvCombinedLightProbeVolume should be at offset 0x16B0");
		static_assert(offsetof(CS2::client::C_EnvCombinedLightProbeVolume, m_Entity_hLightProbeDirectLightIndicesTexture) == 0x16B8, "m_Entity_hLightProbeDirectLightIndicesTexture in C_EnvCombinedLightProbeVolume should be at offset 0x16B8");
		static_assert(offsetof(CS2::client::C_EnvCombinedLightProbeVolume, m_Entity_hLightProbeDirectLightScalarsTexture) == 0x16C0, "m_Entity_hLightProbeDirectLightScalarsTexture in C_EnvCombinedLightProbeVolume should be at offset 0x16C0");
		static_assert(offsetof(CS2::client::C_EnvCombinedLightProbeVolume, m_Entity_hLightProbeDirectLightShadowsTexture) == 0x16C8, "m_Entity_hLightProbeDirectLightShadowsTexture in C_EnvCombinedLightProbeVolume should be at offset 0x16C8");
		static_assert(offsetof(CS2::client::C_EnvCombinedLightProbeVolume, m_Entity_vBoxMins) == 0x16D0, "m_Entity_vBoxMins in C_EnvCombinedLightProbeVolume should be at offset 0x16D0");
		static_assert(offsetof(CS2::client::C_EnvCombinedLightProbeVolume, m_Entity_vBoxMaxs) == 0x16DC, "m_Entity_vBoxMaxs in C_EnvCombinedLightProbeVolume should be at offset 0x16DC");
		static_assert(offsetof(CS2::client::C_EnvCombinedLightProbeVolume, m_Entity_bMoveable) == 0x16E8, "m_Entity_bMoveable in C_EnvCombinedLightProbeVolume should be at offset 0x16E8");
		static_assert(offsetof(CS2::client::C_EnvCombinedLightProbeVolume, m_Entity_nHandshake) == 0x16EC, "m_Entity_nHandshake in C_EnvCombinedLightProbeVolume should be at offset 0x16EC");
		static_assert(offsetof(CS2::client::C_EnvCombinedLightProbeVolume, m_Entity_nEnvCubeMapArrayIndex) == 0x16F0, "m_Entity_nEnvCubeMapArrayIndex in C_EnvCombinedLightProbeVolume should be at offset 0x16F0");
		static_assert(offsetof(CS2::client::C_EnvCombinedLightProbeVolume, m_Entity_nPriority) == 0x16F4, "m_Entity_nPriority in C_EnvCombinedLightProbeVolume should be at offset 0x16F4");
		static_assert(offsetof(CS2::client::C_EnvCombinedLightProbeVolume, m_Entity_bStartDisabled) == 0x16F8, "m_Entity_bStartDisabled in C_EnvCombinedLightProbeVolume should be at offset 0x16F8");
		static_assert(offsetof(CS2::client::C_EnvCombinedLightProbeVolume, m_Entity_flEdgeFadeDist) == 0x16FC, "m_Entity_flEdgeFadeDist in C_EnvCombinedLightProbeVolume should be at offset 0x16FC");
		static_assert(offsetof(CS2::client::C_EnvCombinedLightProbeVolume, m_Entity_vEdgeFadeDists) == 0x1700, "m_Entity_vEdgeFadeDists in C_EnvCombinedLightProbeVolume should be at offset 0x1700");
		static_assert(offsetof(CS2::client::C_EnvCombinedLightProbeVolume, m_Entity_nLightProbeSizeX) == 0x170C, "m_Entity_nLightProbeSizeX in C_EnvCombinedLightProbeVolume should be at offset 0x170C");
		static_assert(offsetof(CS2::client::C_EnvCombinedLightProbeVolume, m_Entity_nLightProbeSizeY) == 0x1710, "m_Entity_nLightProbeSizeY in C_EnvCombinedLightProbeVolume should be at offset 0x1710");
		static_assert(offsetof(CS2::client::C_EnvCombinedLightProbeVolume, m_Entity_nLightProbeSizeZ) == 0x1714, "m_Entity_nLightProbeSizeZ in C_EnvCombinedLightProbeVolume should be at offset 0x1714");
		static_assert(offsetof(CS2::client::C_EnvCombinedLightProbeVolume, m_Entity_nLightProbeAtlasX) == 0x1718, "m_Entity_nLightProbeAtlasX in C_EnvCombinedLightProbeVolume should be at offset 0x1718");
		static_assert(offsetof(CS2::client::C_EnvCombinedLightProbeVolume, m_Entity_nLightProbeAtlasY) == 0x171C, "m_Entity_nLightProbeAtlasY in C_EnvCombinedLightProbeVolume should be at offset 0x171C");
		static_assert(offsetof(CS2::client::C_EnvCombinedLightProbeVolume, m_Entity_nLightProbeAtlasZ) == 0x1720, "m_Entity_nLightProbeAtlasZ in C_EnvCombinedLightProbeVolume should be at offset 0x1720");
		static_assert(offsetof(CS2::client::C_EnvCombinedLightProbeVolume, m_Entity_bEnabled) == 0x1739, "m_Entity_bEnabled in C_EnvCombinedLightProbeVolume should be at offset 0x1739");
		static_assert(sizeof(CS2::client::C_EnvCombinedLightProbeVolume) == 0x1740, "C_EnvCombinedLightProbeVolume size should be 0x1740");
	}
}
