// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/client/inv_image_map_t.hpp>
#include <SDK/client/inv_image_item_t.hpp>
#include <SDK/client/inv_image_camera_t.hpp>
#include <SDK/client/inv_image_light_sun_t.hpp>
#include <SDK/client/inv_image_light_fill_t.hpp>
#include <SDK/client/inv_image_light_barn_t.hpp>





using namespace GlobalTypes;
namespace CS2 {
	namespace client {
		class inv_image_data_t  {
		public:
			client::inv_image_map_t map; // 0x0 | Schema_DeclaredClass | Size: 0x10
			client::inv_image_item_t item; // 0x10 | Schema_DeclaredClass | Size: 0x20
			client::inv_image_camera_t camera; // 0x30 | Schema_DeclaredClass | Size: 0x34
			client::inv_image_light_sun_t lightsun; // 0x64 | Schema_DeclaredClass | Size: 0x1c
			client::inv_image_light_fill_t lightfill; // 0x80 | Schema_DeclaredClass | Size: 0x1c
			client::inv_image_light_barn_t light0; // 0x9c | Schema_DeclaredClass | Size: 0x20
			client::inv_image_light_barn_t light1; // 0xbc | Schema_DeclaredClass | Size: 0x20
			S2_PAD(0x4); // End padding
		};
		static_assert(offsetof(CS2::client::inv_image_data_t, map) == 0x0, "map in inv_image_data_t should be at offset 0x0");
		static_assert(offsetof(CS2::client::inv_image_data_t, item) == 0x10, "item in inv_image_data_t should be at offset 0x10");
		static_assert(offsetof(CS2::client::inv_image_data_t, camera) == 0x30, "camera in inv_image_data_t should be at offset 0x30");
		static_assert(offsetof(CS2::client::inv_image_data_t, lightsun) == 0x64, "lightsun in inv_image_data_t should be at offset 0x64");
		static_assert(offsetof(CS2::client::inv_image_data_t, lightfill) == 0x80, "lightfill in inv_image_data_t should be at offset 0x80");
		static_assert(offsetof(CS2::client::inv_image_data_t, light0) == 0x9C, "light0 in inv_image_data_t should be at offset 0x9C");
		static_assert(offsetof(CS2::client::inv_image_data_t, light1) == 0xBC, "light1 in inv_image_data_t should be at offset 0xBC");
		static_assert(sizeof(CS2::client::inv_image_data_t) == 0xE0, "inv_image_data_t size should be 0xE0");
	}
}
