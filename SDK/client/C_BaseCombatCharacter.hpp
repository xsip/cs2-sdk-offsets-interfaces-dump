// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/client/C_BaseFlex.hpp>
#include <SDK/modellib/AttachmentHandle_t.hpp>
#include <SDK/client/WaterWakeMode_t.hpp>





using namespace GlobalTypes;
namespace CS2 {
	namespace client {
		class C_BaseCombatCharacter : public CS2::client::C_BaseFlex {
		public:
			// client::C_NetworkUtlVectorBase<GlobalTypes::CHandle<client::C_EconWearable>> m_hMyWearables; // 0x1368 | Schema_Atomic | Size: 0x18
			char  m_hMyWearables[0x18]; // 0x1368 | Schema_Atomic | Size: 0x18
			modellib::AttachmentHandle_t m_leftFootAttachment; // 0x1380 | Schema_DeclaredClass | Size: 0x1
			modellib::AttachmentHandle_t m_rightFootAttachment; // 0x1381 | Schema_DeclaredClass | Size: 0x1
			S2_PAD(0x2);
			client::WaterWakeMode_t m_nWaterWakeMode; // 0x1384 | Schema_DeclaredEnum | Size: 0x4
			float32 m_flWaterWorldZ; // 0x1388 | Schema_Builtin | Size: 0x4
			float32 m_flWaterNextTraceTime; // 0x138c | Schema_Builtin | Size: 0x4
			S2_PAD(0x60); // End padding
		};
		static_assert(offsetof(CS2::client::C_BaseCombatCharacter, m_hMyWearables) == 0x1368, "m_hMyWearables in C_BaseCombatCharacter should be at offset 0x1368");
		static_assert(offsetof(CS2::client::C_BaseCombatCharacter, m_leftFootAttachment) == 0x1380, "m_leftFootAttachment in C_BaseCombatCharacter should be at offset 0x1380");
		static_assert(offsetof(CS2::client::C_BaseCombatCharacter, m_rightFootAttachment) == 0x1381, "m_rightFootAttachment in C_BaseCombatCharacter should be at offset 0x1381");
		static_assert(offsetof(CS2::client::C_BaseCombatCharacter, m_nWaterWakeMode) == 0x1384, "m_nWaterWakeMode in C_BaseCombatCharacter should be at offset 0x1384");
		static_assert(offsetof(CS2::client::C_BaseCombatCharacter, m_flWaterWorldZ) == 0x1388, "m_flWaterWorldZ in C_BaseCombatCharacter should be at offset 0x1388");
		static_assert(offsetof(CS2::client::C_BaseCombatCharacter, m_flWaterNextTraceTime) == 0x138C, "m_flWaterNextTraceTime in C_BaseCombatCharacter should be at offset 0x138C");
		static_assert(sizeof(CS2::client::C_BaseCombatCharacter) == 0x13F0, "C_BaseCombatCharacter size should be 0x13F0");
	}
}
