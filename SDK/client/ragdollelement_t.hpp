// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif







using namespace GlobalTypes;
namespace CS2 {
	namespace client {
		class ragdollelement_t  {
		public:
			GlobalTypes::Vector originParentSpace; // 0x0 | Schema_Atomic | Size: 0xc
			S2_PAD(0x14);
			int32_t parentIndex; // 0x20 | Schema_Builtin | Size: 0x4
			float32 m_flRadius; // 0x24 | Schema_Builtin | Size: 0x4
			int32_t m_nHeight; // 0x28 | Schema_Builtin | Size: 0x4
			S2_PAD(0x4); // End padding
		};
		static_assert(offsetof(CS2::client::ragdollelement_t, originParentSpace) == 0x0, "originParentSpace in ragdollelement_t should be at offset 0x0");
		static_assert(offsetof(CS2::client::ragdollelement_t, parentIndex) == 0x20, "parentIndex in ragdollelement_t should be at offset 0x20");
		static_assert(offsetof(CS2::client::ragdollelement_t, m_flRadius) == 0x24, "m_flRadius in ragdollelement_t should be at offset 0x24");
		static_assert(offsetof(CS2::client::ragdollelement_t, m_nHeight) == 0x28, "m_nHeight in ragdollelement_t should be at offset 0x28");
		static_assert(sizeof(CS2::client::ragdollelement_t) == 0x30, "ragdollelement_t size should be 0x30");
	}
}
