// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif





namespace CS2 {
	namespace client {
		class C_BaseEntity;
	}
}
namespace CS2 {
	namespace client {
		class CRopeOverlapHit  {
		public:
			GlobalTypes::CHandle< client::C_BaseEntity > m_hEntity; // 0x0 | Schema_Atomic | Size: 0x4
			// char  m_hEntity[0x4]; // 0x0 | Schema_Atomic | Size: 0x4
			// client::CHandle< client::C_BaseEntity > m_hEntity; // 0x0 | Schema_Atomic | Size: 0x4
			S2_PAD(0x4);
			// GlobalTypes::CUtlVector< int32 > m_vecOverlappingLinks; // 0x8 | Schema_Atomic | Size: 0x18
			char  m_vecOverlappingLinks[0x18]; // 0x8 | Schema_Atomic | Size: 0x18
		};
		static_assert(offsetof(CS2::client::CRopeOverlapHit, m_hEntity) == 0x0, "m_hEntity in CRopeOverlapHit should be at offset 0x0");
		static_assert(offsetof(CS2::client::CRopeOverlapHit, m_vecOverlappingLinks) == 0x8, "m_vecOverlappingLinks in CRopeOverlapHit should be at offset 0x8");
		static_assert(sizeof(CS2::client::CRopeOverlapHit) == 0x20, "CRopeOverlapHit size should be 0x20");
	}
}
