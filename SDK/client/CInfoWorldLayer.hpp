// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/client/C_BaseEntity.hpp>
#include <SDK/entity2/CEntityIOOutput.hpp>



namespace CS2 {
	namespace client {
		class CInfoWorldLayer : public CS2::client::C_BaseEntity {
		public:
			entity2::CEntityIOOutput m_pOutputOnEntitiesSpawned; // 0x5f8 | Schema_DeclaredClass | Size: 0x28
			GlobalTypes::CUtlSymbolLarge m_worldName; // 0x620 | Schema_Atomic | Size: 0x8
			GlobalTypes::CUtlSymbolLarge m_layerName; // 0x628 | Schema_Atomic | Size: 0x8
			bool m_bWorldLayerVisible; // 0x630 | Schema_Builtin | Size: 0x1
			bool m_bEntitiesSpawned; // 0x631 | Schema_Builtin | Size: 0x1
			bool m_bCreateAsChildSpawnGroup; // 0x632 | Schema_Builtin | Size: 0x1
			S2_PAD(0x1);
			uint32_t m_hLayerSpawnGroup; // 0x634 | Schema_Builtin | Size: 0x4
			bool m_bWorldLayerActuallyVisible; // 0x638 | Schema_Builtin | Size: 0x1
			S2_PAD(0x7); // End padding
		};
		static_assert(offsetof(CS2::client::CInfoWorldLayer, m_pOutputOnEntitiesSpawned) == 0x5F8, "m_pOutputOnEntitiesSpawned in CInfoWorldLayer should be at offset 0x5F8");
		static_assert(offsetof(CS2::client::CInfoWorldLayer, m_worldName) == 0x620, "m_worldName in CInfoWorldLayer should be at offset 0x620");
		static_assert(offsetof(CS2::client::CInfoWorldLayer, m_layerName) == 0x628, "m_layerName in CInfoWorldLayer should be at offset 0x628");
		static_assert(offsetof(CS2::client::CInfoWorldLayer, m_bWorldLayerVisible) == 0x630, "m_bWorldLayerVisible in CInfoWorldLayer should be at offset 0x630");
		static_assert(offsetof(CS2::client::CInfoWorldLayer, m_bEntitiesSpawned) == 0x631, "m_bEntitiesSpawned in CInfoWorldLayer should be at offset 0x631");
		static_assert(offsetof(CS2::client::CInfoWorldLayer, m_bCreateAsChildSpawnGroup) == 0x632, "m_bCreateAsChildSpawnGroup in CInfoWorldLayer should be at offset 0x632");
		static_assert(offsetof(CS2::client::CInfoWorldLayer, m_hLayerSpawnGroup) == 0x634, "m_hLayerSpawnGroup in CInfoWorldLayer should be at offset 0x634");
		static_assert(offsetof(CS2::client::CInfoWorldLayer, m_bWorldLayerActuallyVisible) == 0x638, "m_bWorldLayerActuallyVisible in CInfoWorldLayer should be at offset 0x638");
		static_assert(sizeof(CS2::client::CInfoWorldLayer) == 0x640, "CInfoWorldLayer size should be 0x640");
	}
}
