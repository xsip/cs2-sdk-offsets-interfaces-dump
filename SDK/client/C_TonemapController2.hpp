// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <SDK/GlobalTypes.hpp>

#include <SDK/client/C_BaseEntity.hpp>



namespace CS2 {
	namespace client {
		class C_TonemapController2 : public CS2::client::C_BaseEntity {
		public:
			float32 m_flAutoExposureMin; // 0x5f8 | Schema_Builtin | Size: 0x4
			float32 m_flAutoExposureMax; // 0x5fc | Schema_Builtin | Size: 0x4
			float32 m_flExposureAdaptationSpeedUp; // 0x600 | Schema_Builtin | Size: 0x4
			float32 m_flExposureAdaptationSpeedDown; // 0x604 | Schema_Builtin | Size: 0x4
			float32 m_flTonemapEVSmoothingRange; // 0x608 | Schema_Builtin | Size: 0x4
			S2_PAD(0x4); // End padding
		};
		static_assert(offsetof(CS2::client::C_TonemapController2, m_flAutoExposureMin) == 0x5F8, "m_flAutoExposureMin in C_TonemapController2 should be at offset 0x5F8");
		static_assert(offsetof(CS2::client::C_TonemapController2, m_flAutoExposureMax) == 0x5FC, "m_flAutoExposureMax in C_TonemapController2 should be at offset 0x5FC");
		static_assert(offsetof(CS2::client::C_TonemapController2, m_flExposureAdaptationSpeedUp) == 0x600, "m_flExposureAdaptationSpeedUp in C_TonemapController2 should be at offset 0x600");
		static_assert(offsetof(CS2::client::C_TonemapController2, m_flExposureAdaptationSpeedDown) == 0x604, "m_flExposureAdaptationSpeedDown in C_TonemapController2 should be at offset 0x604");
		static_assert(offsetof(CS2::client::C_TonemapController2, m_flTonemapEVSmoothingRange) == 0x608, "m_flTonemapEVSmoothingRange in C_TonemapController2 should be at offset 0x608");
		static_assert(sizeof(CS2::client::C_TonemapController2) == 0x610, "C_TonemapController2 size should be 0x610");
	}
}
