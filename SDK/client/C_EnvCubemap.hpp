// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <SDK/GlobalTypes.hpp>

#include <SDK/client/C_BaseEntity.hpp>



namespace CS2 {
	namespace client {
		class C_EnvCubemap : public CS2::client::C_BaseEntity {
		public:
			S2_PAD(0x80);
			// GlobalTypes::CStrongHandle< resourcesystem::InfoForResourceTypeCTextureBase > m_Entity_hCubemapTexture; // 0x678 | Schema_Atomic | Size: 0x8
			char  m_Entity_hCubemapTexture[0x8]; // 0x678 | Schema_Atomic | Size: 0x8
			bool m_Entity_bCustomCubemapTexture; // 0x680 | Schema_Builtin | Size: 0x1
			S2_PAD(0x3);
			float32 m_Entity_flInfluenceRadius; // 0x684 | Schema_Builtin | Size: 0x4
			GlobalTypes::Vector m_Entity_vBoxProjectMins; // 0x688 | Schema_Atomic | Size: 0xc
			GlobalTypes::Vector m_Entity_vBoxProjectMaxs; // 0x694 | Schema_Atomic | Size: 0xc
			bool m_Entity_bMoveable; // 0x6a0 | Schema_Builtin | Size: 0x1
			S2_PAD(0x3);
			int32_t m_Entity_nHandshake; // 0x6a4 | Schema_Builtin | Size: 0x4
			int32_t m_Entity_nEnvCubeMapArrayIndex; // 0x6a8 | Schema_Builtin | Size: 0x4
			int32_t m_Entity_nPriority; // 0x6ac | Schema_Builtin | Size: 0x4
			float32 m_Entity_flEdgeFadeDist; // 0x6b0 | Schema_Builtin | Size: 0x4
			GlobalTypes::Vector m_Entity_vEdgeFadeDists; // 0x6b4 | Schema_Atomic | Size: 0xc
			float32 m_Entity_flDiffuseScale; // 0x6c0 | Schema_Builtin | Size: 0x4
			bool m_Entity_bStartDisabled; // 0x6c4 | Schema_Builtin | Size: 0x1
			bool m_Entity_bDefaultEnvMap; // 0x6c5 | Schema_Builtin | Size: 0x1
			bool m_Entity_bDefaultSpecEnvMap; // 0x6c6 | Schema_Builtin | Size: 0x1
			bool m_Entity_bIndoorCubeMap; // 0x6c7 | Schema_Builtin | Size: 0x1
			bool m_Entity_bCopyDiffuseFromDefaultCubemap; // 0x6c8 | Schema_Builtin | Size: 0x1
			S2_PAD(0xf);
			bool m_Entity_bEnabled; // 0x6d8 | Schema_Builtin | Size: 0x1
			S2_PAD(0x7); // End padding
		};
		static_assert(offsetof(CS2::client::C_EnvCubemap, m_Entity_hCubemapTexture) == 0x678, "m_Entity_hCubemapTexture in C_EnvCubemap should be at offset 0x678");
		static_assert(offsetof(CS2::client::C_EnvCubemap, m_Entity_bCustomCubemapTexture) == 0x680, "m_Entity_bCustomCubemapTexture in C_EnvCubemap should be at offset 0x680");
		static_assert(offsetof(CS2::client::C_EnvCubemap, m_Entity_flInfluenceRadius) == 0x684, "m_Entity_flInfluenceRadius in C_EnvCubemap should be at offset 0x684");
		static_assert(offsetof(CS2::client::C_EnvCubemap, m_Entity_vBoxProjectMins) == 0x688, "m_Entity_vBoxProjectMins in C_EnvCubemap should be at offset 0x688");
		static_assert(offsetof(CS2::client::C_EnvCubemap, m_Entity_vBoxProjectMaxs) == 0x694, "m_Entity_vBoxProjectMaxs in C_EnvCubemap should be at offset 0x694");
		static_assert(offsetof(CS2::client::C_EnvCubemap, m_Entity_bMoveable) == 0x6A0, "m_Entity_bMoveable in C_EnvCubemap should be at offset 0x6A0");
		static_assert(offsetof(CS2::client::C_EnvCubemap, m_Entity_nHandshake) == 0x6A4, "m_Entity_nHandshake in C_EnvCubemap should be at offset 0x6A4");
		static_assert(offsetof(CS2::client::C_EnvCubemap, m_Entity_nEnvCubeMapArrayIndex) == 0x6A8, "m_Entity_nEnvCubeMapArrayIndex in C_EnvCubemap should be at offset 0x6A8");
		static_assert(offsetof(CS2::client::C_EnvCubemap, m_Entity_nPriority) == 0x6AC, "m_Entity_nPriority in C_EnvCubemap should be at offset 0x6AC");
		static_assert(offsetof(CS2::client::C_EnvCubemap, m_Entity_flEdgeFadeDist) == 0x6B0, "m_Entity_flEdgeFadeDist in C_EnvCubemap should be at offset 0x6B0");
		static_assert(offsetof(CS2::client::C_EnvCubemap, m_Entity_vEdgeFadeDists) == 0x6B4, "m_Entity_vEdgeFadeDists in C_EnvCubemap should be at offset 0x6B4");
		static_assert(offsetof(CS2::client::C_EnvCubemap, m_Entity_flDiffuseScale) == 0x6C0, "m_Entity_flDiffuseScale in C_EnvCubemap should be at offset 0x6C0");
		static_assert(offsetof(CS2::client::C_EnvCubemap, m_Entity_bStartDisabled) == 0x6C4, "m_Entity_bStartDisabled in C_EnvCubemap should be at offset 0x6C4");
		static_assert(offsetof(CS2::client::C_EnvCubemap, m_Entity_bDefaultEnvMap) == 0x6C5, "m_Entity_bDefaultEnvMap in C_EnvCubemap should be at offset 0x6C5");
		static_assert(offsetof(CS2::client::C_EnvCubemap, m_Entity_bDefaultSpecEnvMap) == 0x6C6, "m_Entity_bDefaultSpecEnvMap in C_EnvCubemap should be at offset 0x6C6");
		static_assert(offsetof(CS2::client::C_EnvCubemap, m_Entity_bIndoorCubeMap) == 0x6C7, "m_Entity_bIndoorCubeMap in C_EnvCubemap should be at offset 0x6C7");
		static_assert(offsetof(CS2::client::C_EnvCubemap, m_Entity_bCopyDiffuseFromDefaultCubemap) == 0x6C8, "m_Entity_bCopyDiffuseFromDefaultCubemap in C_EnvCubemap should be at offset 0x6C8");
		static_assert(offsetof(CS2::client::C_EnvCubemap, m_Entity_bEnabled) == 0x6D8, "m_Entity_bEnabled in C_EnvCubemap should be at offset 0x6D8");
		static_assert(sizeof(CS2::client::C_EnvCubemap) == 0x6E0, "C_EnvCubemap size should be 0x6E0");
	}
}
