// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/client/C_PointEntity.hpp>





using namespace GlobalTypes;
namespace CS2 {
	namespace client {
		class CInfoOffscreenPanoramaTexture : public CS2::client::C_PointEntity {
		public:
			bool m_bDisabled; // 0x5f8 | Schema_Builtin | Size: 0x1
			S2_PAD(0x3);
			int32_t m_nResolutionX; // 0x5fc | Schema_Builtin | Size: 0x4
			int32_t m_nResolutionY; // 0x600 | Schema_Builtin | Size: 0x4
			S2_PAD(0x4);
			GlobalTypes::CUtlSymbolLarge m_szLayoutFileName; // 0x608 | Schema_Atomic | Size: 0x8
			GlobalTypes::CUtlSymbolLarge m_RenderAttrName; // 0x610 | Schema_Atomic | Size: 0x8
			// client::C_NetworkUtlVectorBase< client.dll::CHandle< C_BaseModelEntity > > m_TargetEntities; // 0x618 | Schema_Atomic | Size: 0x18
			char  m_TargetEntities[0x18]; // 0x618 | Schema_Atomic | Size: 0x18
			int32_t m_nTargetChangeCount; // 0x630 | Schema_Builtin | Size: 0x4
			S2_PAD(0x4);
			// GlobalTypes::C_NetworkUtlVectorBase< GlobalTypes::CUtlSymbolLarge > m_vecCSSClasses; // 0x638 | Schema_Atomic | Size: 0x18
			char  m_vecCSSClasses[0x18]; // 0x638 | Schema_Atomic | Size: 0x18
			S2_PAD(0x160);
			bool m_bCheckCSSClasses; // 0x7b0 | Schema_Builtin | Size: 0x1
			S2_PAD(0x27); // End padding
		};
		static_assert(offsetof(CS2::client::CInfoOffscreenPanoramaTexture, m_bDisabled) == 0x5F8, "m_bDisabled in CInfoOffscreenPanoramaTexture should be at offset 0x5F8");
		static_assert(offsetof(CS2::client::CInfoOffscreenPanoramaTexture, m_nResolutionX) == 0x5FC, "m_nResolutionX in CInfoOffscreenPanoramaTexture should be at offset 0x5FC");
		static_assert(offsetof(CS2::client::CInfoOffscreenPanoramaTexture, m_nResolutionY) == 0x600, "m_nResolutionY in CInfoOffscreenPanoramaTexture should be at offset 0x600");
		static_assert(offsetof(CS2::client::CInfoOffscreenPanoramaTexture, m_szLayoutFileName) == 0x608, "m_szLayoutFileName in CInfoOffscreenPanoramaTexture should be at offset 0x608");
		static_assert(offsetof(CS2::client::CInfoOffscreenPanoramaTexture, m_RenderAttrName) == 0x610, "m_RenderAttrName in CInfoOffscreenPanoramaTexture should be at offset 0x610");
		static_assert(offsetof(CS2::client::CInfoOffscreenPanoramaTexture, m_TargetEntities) == 0x618, "m_TargetEntities in CInfoOffscreenPanoramaTexture should be at offset 0x618");
		static_assert(offsetof(CS2::client::CInfoOffscreenPanoramaTexture, m_nTargetChangeCount) == 0x630, "m_nTargetChangeCount in CInfoOffscreenPanoramaTexture should be at offset 0x630");
		static_assert(offsetof(CS2::client::CInfoOffscreenPanoramaTexture, m_vecCSSClasses) == 0x638, "m_vecCSSClasses in CInfoOffscreenPanoramaTexture should be at offset 0x638");
		static_assert(offsetof(CS2::client::CInfoOffscreenPanoramaTexture, m_bCheckCSSClasses) == 0x7B0, "m_bCheckCSSClasses in CInfoOffscreenPanoramaTexture should be at offset 0x7B0");
		static_assert(sizeof(CS2::client::CInfoOffscreenPanoramaTexture) == 0x7D8, "CInfoOffscreenPanoramaTexture size should be 0x7D8");
	}
}
