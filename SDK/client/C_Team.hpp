// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <SDK/GlobalTypes.hpp>

#include <SDK/client/C_BaseEntity.hpp>



namespace CS2 {
	namespace client {
		class C_Team : public CS2::client::C_BaseEntity {
		public:
			// client::C_NetworkUtlVectorBase< client.dll::CHandle< CBasePlayerController > > m_aPlayerControllers; // 0x5f8 | Schema_Atomic | Size: 0x18
			char  m_aPlayerControllers[0x18]; // 0x5f8 | Schema_Atomic | Size: 0x18
			// client::C_NetworkUtlVectorBase< client.dll::CHandle< C_BasePlayerPawn > > m_aPlayers; // 0x610 | Schema_Atomic | Size: 0x18
			char  m_aPlayers[0x18]; // 0x610 | Schema_Atomic | Size: 0x18
			int32_t m_iScore; // 0x628 | Schema_Builtin | Size: 0x4
			char m_szTeamname[129]; // 0x62c | Schema_FixedArray | Size: 0x81
			S2_PAD(0x3); // End padding
		};
		static_assert(offsetof(CS2::client::C_Team, m_aPlayerControllers) == 0x5F8, "m_aPlayerControllers in C_Team should be at offset 0x5F8");
		static_assert(offsetof(CS2::client::C_Team, m_aPlayers) == 0x610, "m_aPlayers in C_Team should be at offset 0x610");
		static_assert(offsetof(CS2::client::C_Team, m_iScore) == 0x628, "m_iScore in C_Team should be at offset 0x628");
		static_assert(offsetof(CS2::client::C_Team, m_szTeamname) == 0x62C, "m_szTeamname in C_Team should be at offset 0x62C");
		static_assert(sizeof(CS2::client::C_Team) == 0x6B0, "C_Team size should be 0x6B0");
	}
}
