// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/client/CAnimGraphControllerBase.hpp>



namespace CS2 {
	namespace client {
		class CCS2ChickenGraphController : public CS2::client::CAnimGraphControllerBase {
		public:
			// GlobalTypes::CAnimGraph2ParamOptionalRef< GlobalTypes::CGlobalSymbol > m_action; // 0x80 | Schema_Atomic | Size: 0x20
			char  m_action[0x20]; // 0x80 | Schema_Atomic | Size: 0x20
			// GlobalTypes::CAnimGraph2ParamOptionalRef< GlobalTypes::CGlobalSymbol > m_actionSubtype; // 0xa0 | Schema_Atomic | Size: 0x20
			char  m_actionSubtype[0x20]; // 0xa0 | Schema_Atomic | Size: 0x20
			// GlobalTypes::CAnimGraph2ParamOptionalRef< bool > m_bActionReset; // 0xc0 | Schema_Atomic | Size: 0x18
			char  m_bActionReset[0x18]; // 0xc0 | Schema_Atomic | Size: 0x18
			// GlobalTypes::CAnimGraph2ParamOptionalRef< float32 > m_idleVariation; // 0xd8 | Schema_Atomic | Size: 0x18
			char  m_idleVariation[0x18]; // 0xd8 | Schema_Atomic | Size: 0x18
			// GlobalTypes::CAnimGraph2ParamOptionalRef< float32 > m_runVariation; // 0xf0 | Schema_Atomic | Size: 0x18
			char  m_runVariation[0x18]; // 0xf0 | Schema_Atomic | Size: 0x18
			// GlobalTypes::CAnimGraph2ParamOptionalRef< float32 > m_panicVariation; // 0x108 | Schema_Atomic | Size: 0x18
			char  m_panicVariation[0x18]; // 0x108 | Schema_Atomic | Size: 0x18
			// GlobalTypes::CAnimGraph2ParamOptionalRef< float32 > m_squatVariation; // 0x120 | Schema_Atomic | Size: 0x18
			char  m_squatVariation[0x18]; // 0x120 | Schema_Atomic | Size: 0x18
			// GlobalTypes::CAnimGraph2ParamOptionalRef< bool > m_bInWater; // 0x138 | Schema_Atomic | Size: 0x18
			char  m_bInWater[0x18]; // 0x138 | Schema_Atomic | Size: 0x18
			bool m_bHasActionCompletedEvent; // 0x150 | Schema_Builtin | Size: 0x1
			bool m_bWaitingForCompletedEvent; // 0x151 | Schema_Builtin | Size: 0x1
			S2_PAD(0x6); // End padding
		};
		static_assert(offsetof(CS2::client::CCS2ChickenGraphController, m_action) == 0x80, "m_action in CCS2ChickenGraphController should be at offset 0x80");
		static_assert(offsetof(CS2::client::CCS2ChickenGraphController, m_actionSubtype) == 0xA0, "m_actionSubtype in CCS2ChickenGraphController should be at offset 0xA0");
		static_assert(offsetof(CS2::client::CCS2ChickenGraphController, m_bActionReset) == 0xC0, "m_bActionReset in CCS2ChickenGraphController should be at offset 0xC0");
		static_assert(offsetof(CS2::client::CCS2ChickenGraphController, m_idleVariation) == 0xD8, "m_idleVariation in CCS2ChickenGraphController should be at offset 0xD8");
		static_assert(offsetof(CS2::client::CCS2ChickenGraphController, m_runVariation) == 0xF0, "m_runVariation in CCS2ChickenGraphController should be at offset 0xF0");
		static_assert(offsetof(CS2::client::CCS2ChickenGraphController, m_panicVariation) == 0x108, "m_panicVariation in CCS2ChickenGraphController should be at offset 0x108");
		static_assert(offsetof(CS2::client::CCS2ChickenGraphController, m_squatVariation) == 0x120, "m_squatVariation in CCS2ChickenGraphController should be at offset 0x120");
		static_assert(offsetof(CS2::client::CCS2ChickenGraphController, m_bInWater) == 0x138, "m_bInWater in CCS2ChickenGraphController should be at offset 0x138");
		static_assert(offsetof(CS2::client::CCS2ChickenGraphController, m_bHasActionCompletedEvent) == 0x150, "m_bHasActionCompletedEvent in CCS2ChickenGraphController should be at offset 0x150");
		static_assert(offsetof(CS2::client::CCS2ChickenGraphController, m_bWaitingForCompletedEvent) == 0x151, "m_bWaitingForCompletedEvent in CCS2ChickenGraphController should be at offset 0x151");
		static_assert(sizeof(CS2::client::CCS2ChickenGraphController) == 0x158, "CCS2ChickenGraphController size should be 0x158");
	}
}
