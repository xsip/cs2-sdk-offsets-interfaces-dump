// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/client/C_Team.hpp>



namespace CS2 {
	namespace client {
		class C_CSTeam : public CS2::client::C_Team {
		public:
			char m_szTeamMatchStat[512]; // 0x6b0 | Schema_FixedArray | Size: 0x200
			int32_t m_numMapVictories; // 0x8b0 | Schema_Builtin | Size: 0x4
			bool m_bSurrendered; // 0x8b4 | Schema_Builtin | Size: 0x1
			S2_PAD(0x3);
			int32_t m_scoreFirstHalf; // 0x8b8 | Schema_Builtin | Size: 0x4
			int32_t m_scoreSecondHalf; // 0x8bc | Schema_Builtin | Size: 0x4
			int32_t m_scoreOvertime; // 0x8c0 | Schema_Builtin | Size: 0x4
			char m_szClanTeamname[129]; // 0x8c4 | Schema_FixedArray | Size: 0x81
			S2_PAD(0x3);
			uint32_t m_iClanID; // 0x948 | Schema_Builtin | Size: 0x4
			char m_szTeamFlagImage[8]; // 0x94c | Schema_FixedArray | Size: 0x8
			char m_szTeamLogoImage[8]; // 0x954 | Schema_FixedArray | Size: 0x8
			S2_PAD(0x4); // End padding
		};
		static_assert(offsetof(CS2::client::C_CSTeam, m_szTeamMatchStat) == 0x6B0, "m_szTeamMatchStat in C_CSTeam should be at offset 0x6B0");
		static_assert(offsetof(CS2::client::C_CSTeam, m_numMapVictories) == 0x8B0, "m_numMapVictories in C_CSTeam should be at offset 0x8B0");
		static_assert(offsetof(CS2::client::C_CSTeam, m_bSurrendered) == 0x8B4, "m_bSurrendered in C_CSTeam should be at offset 0x8B4");
		static_assert(offsetof(CS2::client::C_CSTeam, m_scoreFirstHalf) == 0x8B8, "m_scoreFirstHalf in C_CSTeam should be at offset 0x8B8");
		static_assert(offsetof(CS2::client::C_CSTeam, m_scoreSecondHalf) == 0x8BC, "m_scoreSecondHalf in C_CSTeam should be at offset 0x8BC");
		static_assert(offsetof(CS2::client::C_CSTeam, m_scoreOvertime) == 0x8C0, "m_scoreOvertime in C_CSTeam should be at offset 0x8C0");
		static_assert(offsetof(CS2::client::C_CSTeam, m_szClanTeamname) == 0x8C4, "m_szClanTeamname in C_CSTeam should be at offset 0x8C4");
		static_assert(offsetof(CS2::client::C_CSTeam, m_iClanID) == 0x948, "m_iClanID in C_CSTeam should be at offset 0x948");
		static_assert(offsetof(CS2::client::C_CSTeam, m_szTeamFlagImage) == 0x94C, "m_szTeamFlagImage in C_CSTeam should be at offset 0x94C");
		static_assert(offsetof(CS2::client::C_CSTeam, m_szTeamLogoImage) == 0x954, "m_szTeamLogoImage in C_CSTeam should be at offset 0x954");
		static_assert(sizeof(CS2::client::C_CSTeam) == 0x960, "C_CSTeam size should be 0x960");
	}
}
