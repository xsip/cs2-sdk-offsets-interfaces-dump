// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <SDK/GlobalTypes.hpp>

#include <SDK/client/CPlayerPawnComponent.hpp>
#include <SDK/client/CInButtonState.hpp>



namespace CS2 {
	namespace client {
		class CPlayer_MovementServices : public CS2::client::CPlayerPawnComponent {
		public:
			int32_t m_nImpulse; // 0x40 | Schema_Builtin | Size: 0x4
			S2_PAD(0x4);
			client::CInButtonState m_nButtons; // 0x48 | Schema_DeclaredClass | Size: 0x20
			uint64_t m_nQueuedButtonDownMask; // 0x68 | Schema_Builtin | Size: 0x8
			uint64_t m_nQueuedButtonChangeMask; // 0x70 | Schema_Builtin | Size: 0x8
			uint64_t m_nButtonDoublePressed; // 0x78 | Schema_Builtin | Size: 0x8
			uint32_t m_pButtonPressedCmdNumber[64]; // 0x80 | Schema_FixedArray | Size: 0x100
			uint32_t m_nLastCommandNumberProcessed; // 0x180 | Schema_Builtin | Size: 0x4
			S2_PAD(0x4);
			uint64_t m_nToggleButtonDownMask; // 0x188 | Schema_Builtin | Size: 0x8
			S2_PAD(0x8);
			float32 m_flMaxspeed; // 0x198 | Schema_Builtin | Size: 0x4
			float32 m_arrForceSubtickMoveWhen[4]; // 0x19c | Schema_FixedArray | Size: 0x10
			float32 m_flForwardMove; // 0x1ac | Schema_Builtin | Size: 0x4
			float32 m_flLeftMove; // 0x1b0 | Schema_Builtin | Size: 0x4
			float32 m_flUpMove; // 0x1b4 | Schema_Builtin | Size: 0x4
			GlobalTypes::Vector m_vecLastMovementImpulses; // 0x1b8 | Schema_Atomic | Size: 0xc
			S2_PAD(0x5c);
			GlobalTypes::QAngle m_vecOldViewAngles; // 0x220 | Schema_Atomic | Size: 0xc
			S2_PAD(0xc); // End padding
		};
		static_assert(offsetof(CS2::client::CPlayer_MovementServices, m_nImpulse) == 0x40, "m_nImpulse in CPlayer_MovementServices should be at offset 0x40");
		static_assert(offsetof(CS2::client::CPlayer_MovementServices, m_nButtons) == 0x48, "m_nButtons in CPlayer_MovementServices should be at offset 0x48");
		static_assert(offsetof(CS2::client::CPlayer_MovementServices, m_nQueuedButtonDownMask) == 0x68, "m_nQueuedButtonDownMask in CPlayer_MovementServices should be at offset 0x68");
		static_assert(offsetof(CS2::client::CPlayer_MovementServices, m_nQueuedButtonChangeMask) == 0x70, "m_nQueuedButtonChangeMask in CPlayer_MovementServices should be at offset 0x70");
		static_assert(offsetof(CS2::client::CPlayer_MovementServices, m_nButtonDoublePressed) == 0x78, "m_nButtonDoublePressed in CPlayer_MovementServices should be at offset 0x78");
		static_assert(offsetof(CS2::client::CPlayer_MovementServices, m_pButtonPressedCmdNumber) == 0x80, "m_pButtonPressedCmdNumber in CPlayer_MovementServices should be at offset 0x80");
		static_assert(offsetof(CS2::client::CPlayer_MovementServices, m_nLastCommandNumberProcessed) == 0x180, "m_nLastCommandNumberProcessed in CPlayer_MovementServices should be at offset 0x180");
		static_assert(offsetof(CS2::client::CPlayer_MovementServices, m_nToggleButtonDownMask) == 0x188, "m_nToggleButtonDownMask in CPlayer_MovementServices should be at offset 0x188");
		static_assert(offsetof(CS2::client::CPlayer_MovementServices, m_flMaxspeed) == 0x198, "m_flMaxspeed in CPlayer_MovementServices should be at offset 0x198");
		static_assert(offsetof(CS2::client::CPlayer_MovementServices, m_arrForceSubtickMoveWhen) == 0x19C, "m_arrForceSubtickMoveWhen in CPlayer_MovementServices should be at offset 0x19C");
		static_assert(offsetof(CS2::client::CPlayer_MovementServices, m_flForwardMove) == 0x1AC, "m_flForwardMove in CPlayer_MovementServices should be at offset 0x1AC");
		static_assert(offsetof(CS2::client::CPlayer_MovementServices, m_flLeftMove) == 0x1B0, "m_flLeftMove in CPlayer_MovementServices should be at offset 0x1B0");
		static_assert(offsetof(CS2::client::CPlayer_MovementServices, m_flUpMove) == 0x1B4, "m_flUpMove in CPlayer_MovementServices should be at offset 0x1B4");
		static_assert(offsetof(CS2::client::CPlayer_MovementServices, m_vecLastMovementImpulses) == 0x1B8, "m_vecLastMovementImpulses in CPlayer_MovementServices should be at offset 0x1B8");
		static_assert(offsetof(CS2::client::CPlayer_MovementServices, m_vecOldViewAngles) == 0x220, "m_vecOldViewAngles in CPlayer_MovementServices should be at offset 0x220");
		static_assert(sizeof(CS2::client::CPlayer_MovementServices) == 0x238, "CPlayer_MovementServices size should be 0x238");
	}
}
