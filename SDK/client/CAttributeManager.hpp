// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/client/attributeprovidertypes_t.hpp>



namespace CS2 {
	namespace client {
		class C_BaseEntity;
		class cached_attribute_float_t;
	}
}


using namespace GlobalTypes;
namespace CS2 {
	namespace client {
		class CAttributeManager  {
		public:
			S2_PAD(0x8);
			GlobalTypes::CUtlVector< GlobalTypes::CHandle< C_BaseEntity > > m_Providers; // 0x8 | Schema_Atomic | Size: 0x18
			// char  m_Providers[0x18]; // 0x8 | Schema_Atomic | Size: 0x18
			int32_t m_iReapplyProvisionParity; // 0x20 | Schema_Builtin | Size: 0x4
			GlobalTypes::CHandle< client::C_BaseEntity > m_hOuter; // 0x24 | Schema_Atomic | Size: 0x4
			// char  m_hOuter[0x4]; // 0x24 | Schema_Atomic | Size: 0x4
			bool m_bPreventLoopback; // 0x28 | Schema_Builtin | Size: 0x1
			S2_PAD(0x3);
			client::attributeprovidertypes_t m_ProviderType; // 0x2c | Schema_DeclaredEnum | Size: 0x4
			GlobalTypes::CUtlVector< client::cached_attribute_float_t > m_CachedResults; // 0x30 | Schema_Atomic | Size: 0x18
			// char  m_CachedResults[0x18]; // 0x30 | Schema_Atomic | Size: 0x18
			S2_PAD(0x8); // End padding
		};
		static_assert(offsetof(CS2::client::CAttributeManager, m_Providers) == 0x8, "m_Providers in CAttributeManager should be at offset 0x8");
		static_assert(offsetof(CS2::client::CAttributeManager, m_iReapplyProvisionParity) == 0x20, "m_iReapplyProvisionParity in CAttributeManager should be at offset 0x20");
		static_assert(offsetof(CS2::client::CAttributeManager, m_hOuter) == 0x24, "m_hOuter in CAttributeManager should be at offset 0x24");
		static_assert(offsetof(CS2::client::CAttributeManager, m_bPreventLoopback) == 0x28, "m_bPreventLoopback in CAttributeManager should be at offset 0x28");
		static_assert(offsetof(CS2::client::CAttributeManager, m_ProviderType) == 0x2C, "m_ProviderType in CAttributeManager should be at offset 0x2C");
		static_assert(offsetof(CS2::client::CAttributeManager, m_CachedResults) == 0x30, "m_CachedResults in CAttributeManager should be at offset 0x30");
		static_assert(sizeof(CS2::client::CAttributeManager) == 0x50, "CAttributeManager size should be 0x50");
	}
}
