// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/client/C_BaseEntity.hpp>



namespace CS2 {
	namespace client {
		class C_SoundOpvarSetPointBase : public CS2::client::C_BaseEntity {
		public:
			GlobalTypes::CUtlSymbolLarge m_iszStackName; // 0x5f8 | Schema_Atomic | Size: 0x8
			GlobalTypes::CUtlSymbolLarge m_iszOperatorName; // 0x600 | Schema_Atomic | Size: 0x8
			GlobalTypes::CUtlSymbolLarge m_iszOpvarName; // 0x608 | Schema_Atomic | Size: 0x8
			int32_t m_iOpvarIndex; // 0x610 | Schema_Builtin | Size: 0x4
			bool m_bUseAutoCompare; // 0x614 | Schema_Builtin | Size: 0x1
			S2_PAD(0x3); // End padding
		};
		static_assert(offsetof(CS2::client::C_SoundOpvarSetPointBase, m_iszStackName) == 0x5F8, "m_iszStackName in C_SoundOpvarSetPointBase should be at offset 0x5F8");
		static_assert(offsetof(CS2::client::C_SoundOpvarSetPointBase, m_iszOperatorName) == 0x600, "m_iszOperatorName in C_SoundOpvarSetPointBase should be at offset 0x600");
		static_assert(offsetof(CS2::client::C_SoundOpvarSetPointBase, m_iszOpvarName) == 0x608, "m_iszOpvarName in C_SoundOpvarSetPointBase should be at offset 0x608");
		static_assert(offsetof(CS2::client::C_SoundOpvarSetPointBase, m_iOpvarIndex) == 0x610, "m_iOpvarIndex in C_SoundOpvarSetPointBase should be at offset 0x610");
		static_assert(offsetof(CS2::client::C_SoundOpvarSetPointBase, m_bUseAutoCompare) == 0x614, "m_bUseAutoCompare in C_SoundOpvarSetPointBase should be at offset 0x614");
		static_assert(sizeof(CS2::client::C_SoundOpvarSetPointBase) == 0x618, "C_SoundOpvarSetPointBase size should be 0x618");
	}
}
