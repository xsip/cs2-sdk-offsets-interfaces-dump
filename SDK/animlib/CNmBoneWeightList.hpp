// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif







using namespace GlobalTypes;
namespace CS2 {
	namespace animlib {
		class CNmBoneWeightList  {
		public:
			GlobalTypes::CResourceName m_skeletonName; // 0x0 | Schema_Atomic | Size: 0xe0
			GlobalTypes::CUtlVector<GlobalTypes::CGlobalSymbol> m_boneIDs; // 0xe0 | Schema_Atomic | Size: 0x18
			// char  m_boneIDs[0x18]; // 0xe0 | Schema_Atomic | Size: 0x18
			GlobalTypes::CUtlVector< float32 > m_weights; // 0xf8 | Schema_Atomic | Size: 0x18
			// char  m_weights[0x18]; // 0xf8 | Schema_Atomic | Size: 0x18
		};
		static_assert(offsetof(CS2::animlib::CNmBoneWeightList, m_skeletonName) == 0x0, "m_skeletonName in CNmBoneWeightList should be at offset 0x0");
		static_assert(offsetof(CS2::animlib::CNmBoneWeightList, m_boneIDs) == 0xE0, "m_boneIDs in CNmBoneWeightList should be at offset 0xE0");
		static_assert(offsetof(CS2::animlib::CNmBoneWeightList, m_weights) == 0xF8, "m_weights in CNmBoneWeightList should be at offset 0xF8");
		static_assert(sizeof(CS2::animlib::CNmBoneWeightList) == 0x110, "CNmBoneWeightList size should be 0x110");
	}
}
