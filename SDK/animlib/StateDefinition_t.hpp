// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif







using namespace GlobalTypes;
namespace CS2 {
	namespace animlib {
		class StateDefinition_t  {
		public:
			int16_t m_nStateNodeIdx; // 0x0 | Schema_Builtin | Size: 0x2
			int16_t m_nEntryConditionNodeIdx; // 0x2 | Schema_Builtin | Size: 0x2
			S2_PAD(0x4);
			// GlobalTypes::TransitionDefinition_t, 5 > m_transitionDefinitions; // 0x8 | Schema_Atomic | Size: 0x30
			char  m_transitionDefinitions[0x30]; // 0x8 | Schema_Atomic | Size: 0x30
		};
		static_assert(offsetof(CS2::animlib::StateDefinition_t, m_nStateNodeIdx) == 0x0, "m_nStateNodeIdx in CNmStateMachineNode::StateDefinition_t should be at offset 0x0");
		static_assert(offsetof(CS2::animlib::StateDefinition_t, m_nEntryConditionNodeIdx) == 0x2, "m_nEntryConditionNodeIdx in CNmStateMachineNode::StateDefinition_t should be at offset 0x2");
		static_assert(offsetof(CS2::animlib::StateDefinition_t, m_transitionDefinitions) == 0x8, "m_transitionDefinitions in CNmStateMachineNode::StateDefinition_t should be at offset 0x8");
		static_assert(sizeof(CS2::animlib::StateDefinition_t) == 0x38, "CNmStateMachineNode::StateDefinition_t size should be 0x38");
	}
}
