// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <SDK/GlobalTypes.hpp>




namespace CS2 {
	namespace animlib {
		class CNmTarget  {
		public:
			GlobalTypes::CTransform m_transform; // 0x0 | Schema_Atomic | Size: 0x20
			GlobalTypes::CGlobalSymbol m_boneID; // 0x20 | Schema_Atomic | Size: 0x8
			bool m_bIsBoneTarget; // 0x28 | Schema_Builtin | Size: 0x1
			bool m_bIsUsingBoneSpaceOffsets; // 0x29 | Schema_Builtin | Size: 0x1
			bool m_bHasOffsets; // 0x2a | Schema_Builtin | Size: 0x1
			bool m_bIsSet; // 0x2b | Schema_Builtin | Size: 0x1
			S2_PAD(0x4); // End padding
		};
		static_assert(offsetof(CS2::animlib::CNmTarget, m_transform) == 0x0, "m_transform in CNmTarget should be at offset 0x0");
		static_assert(offsetof(CS2::animlib::CNmTarget, m_boneID) == 0x20, "m_boneID in CNmTarget should be at offset 0x20");
		static_assert(offsetof(CS2::animlib::CNmTarget, m_bIsBoneTarget) == 0x28, "m_bIsBoneTarget in CNmTarget should be at offset 0x28");
		static_assert(offsetof(CS2::animlib::CNmTarget, m_bIsUsingBoneSpaceOffsets) == 0x29, "m_bIsUsingBoneSpaceOffsets in CNmTarget should be at offset 0x29");
		static_assert(offsetof(CS2::animlib::CNmTarget, m_bHasOffsets) == 0x2A, "m_bHasOffsets in CNmTarget should be at offset 0x2A");
		static_assert(offsetof(CS2::animlib::CNmTarget, m_bIsSet) == 0x2B, "m_bIsSet in CNmTarget should be at offset 0x2B");
		static_assert(sizeof(CS2::animlib::CNmTarget) == 0x30, "CNmTarget size should be 0x30");
	}
}
