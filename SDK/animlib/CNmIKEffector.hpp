// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif







using namespace GlobalTypes;
namespace CS2 {
	namespace animlib {
		class CNmIKEffector  {
		public:
			int32_t m_nBodyIndex; // 0x0 | Schema_Builtin | Size: 0x4
			bool m_bEnabled; // 0x4 | Schema_Builtin | Size: 0x1
			S2_PAD(0x3);
			GlobalTypes::Vector m_vTargetPosition; // 0x8 | Schema_Atomic | Size: 0xc
			S2_PAD(0xc);
			GlobalTypes::Quaternion m_qTargetOrientation; // 0x20 | Schema_Atomic | Size: 0x10
			float32 m_flWeight; // 0x30 | Schema_Builtin | Size: 0x4
			S2_PAD(0xc); // End padding
		};
		static_assert(offsetof(CS2::animlib::CNmIKEffector, m_nBodyIndex) == 0x0, "m_nBodyIndex in CNmIKEffector should be at offset 0x0");
		static_assert(offsetof(CS2::animlib::CNmIKEffector, m_bEnabled) == 0x4, "m_bEnabled in CNmIKEffector should be at offset 0x4");
		static_assert(offsetof(CS2::animlib::CNmIKEffector, m_vTargetPosition) == 0x8, "m_vTargetPosition in CNmIKEffector should be at offset 0x8");
		static_assert(offsetof(CS2::animlib::CNmIKEffector, m_qTargetOrientation) == 0x20, "m_qTargetOrientation in CNmIKEffector should be at offset 0x20");
		static_assert(offsetof(CS2::animlib::CNmIKEffector, m_flWeight) == 0x30, "m_flWeight in CNmIKEffector should be at offset 0x30");
		static_assert(sizeof(CS2::animlib::CNmIKEffector) == 0x40, "CNmIKEffector size should be 0x40");
	}
}
