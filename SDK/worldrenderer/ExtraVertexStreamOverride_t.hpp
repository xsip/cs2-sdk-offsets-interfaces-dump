// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/worldrenderer/BaseSceneObjectOverride_t.hpp>
#include <SDK/modellib/MeshDrawPrimitiveFlags_t.hpp>
#include <SDK/modellib/CRenderBufferBinding.hpp>





using namespace GlobalTypes;
namespace CS2 {
	namespace worldrenderer {
		class ExtraVertexStreamOverride_t : public CS2::worldrenderer::BaseSceneObjectOverride_t {
		public:
			uint32_t m_nSubSceneObject; // 0x4 | Schema_Builtin | Size: 0x4
			uint32_t m_nDrawCallIndex; // 0x8 | Schema_Builtin | Size: 0x4
			modellib::MeshDrawPrimitiveFlags_t m_nAdditionalMeshDrawPrimitiveFlags; // 0xc | Schema_DeclaredEnum | Size: 0x4
			modellib::CRenderBufferBinding m_extraBufferBinding; // 0x10 | Schema_DeclaredClass | Size: 0x20
		};
		static_assert(offsetof(CS2::worldrenderer::ExtraVertexStreamOverride_t, m_nSubSceneObject) == 0x4, "m_nSubSceneObject in ExtraVertexStreamOverride_t should be at offset 0x4");
		static_assert(offsetof(CS2::worldrenderer::ExtraVertexStreamOverride_t, m_nDrawCallIndex) == 0x8, "m_nDrawCallIndex in ExtraVertexStreamOverride_t should be at offset 0x8");
		static_assert(offsetof(CS2::worldrenderer::ExtraVertexStreamOverride_t, m_nAdditionalMeshDrawPrimitiveFlags) == 0xC, "m_nAdditionalMeshDrawPrimitiveFlags in ExtraVertexStreamOverride_t should be at offset 0xC");
		static_assert(offsetof(CS2::worldrenderer::ExtraVertexStreamOverride_t, m_extraBufferBinding) == 0x10, "m_extraBufferBinding in ExtraVertexStreamOverride_t should be at offset 0x10");
		static_assert(sizeof(CS2::worldrenderer::ExtraVertexStreamOverride_t) == 0x30, "ExtraVertexStreamOverride_t size should be 0x30");
	}
}
