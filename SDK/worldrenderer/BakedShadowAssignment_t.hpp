// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif







using namespace GlobalTypes;
namespace CS2 {
	namespace worldrenderer {
		class BakedShadowAssignment_t  {
		public:
			uint32_t m_nLightHash; // 0x0 | Schema_Builtin | Size: 0x4
			uint32_t m_nMapHash; // 0x4 | Schema_Builtin | Size: 0x4
			int8_t m_nShadowChannel; // 0x8 | Schema_Builtin | Size: 0x1
			S2_PAD(0x3); // End padding
		};
		static_assert(offsetof(CS2::worldrenderer::BakedShadowAssignment_t, m_nLightHash) == 0x0, "m_nLightHash in BakedLightingInfo_t::BakedShadowAssignment_t should be at offset 0x0");
		static_assert(offsetof(CS2::worldrenderer::BakedShadowAssignment_t, m_nMapHash) == 0x4, "m_nMapHash in BakedLightingInfo_t::BakedShadowAssignment_t should be at offset 0x4");
		static_assert(offsetof(CS2::worldrenderer::BakedShadowAssignment_t, m_nShadowChannel) == 0x8, "m_nShadowChannel in BakedLightingInfo_t::BakedShadowAssignment_t should be at offset 0x8");
		static_assert(sizeof(CS2::worldrenderer::BakedShadowAssignment_t) == 0xC, "BakedLightingInfo_t::BakedShadowAssignment_t size should be 0xC");
	}
}
