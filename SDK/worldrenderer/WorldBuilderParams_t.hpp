// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <SDK/GlobalTypes.hpp>

#include <SDK/worldrenderer/BakedLightingInfo_t.hpp>



namespace CS2 {
	namespace worldrenderer {
		class WorldBuilderParams_t  {
		public:
			float32 m_flMinDrawVolumeSize; // 0x0 | Schema_Builtin | Size: 0x4
			bool m_bBuildBakedLighting; // 0x4 | Schema_Builtin | Size: 0x1
			bool m_bAggregateInstanceStreams; // 0x5 | Schema_Builtin | Size: 0x1
			S2_PAD(0x2);
			worldrenderer::BakedLightingInfo_t m_bakedLightingInfo; // 0x8 | Schema_DeclaredClass | Size: 0x48
			uint64_t m_nCompileTimestamp; // 0x50 | Schema_Builtin | Size: 0x8
			uint64_t m_nCompileFingerprint; // 0x58 | Schema_Builtin | Size: 0x8
		};
		static_assert(offsetof(CS2::worldrenderer::WorldBuilderParams_t, m_flMinDrawVolumeSize) == 0x0, "m_flMinDrawVolumeSize in WorldBuilderParams_t should be at offset 0x0");
		static_assert(offsetof(CS2::worldrenderer::WorldBuilderParams_t, m_bBuildBakedLighting) == 0x4, "m_bBuildBakedLighting in WorldBuilderParams_t should be at offset 0x4");
		static_assert(offsetof(CS2::worldrenderer::WorldBuilderParams_t, m_bAggregateInstanceStreams) == 0x5, "m_bAggregateInstanceStreams in WorldBuilderParams_t should be at offset 0x5");
		static_assert(offsetof(CS2::worldrenderer::WorldBuilderParams_t, m_bakedLightingInfo) == 0x8, "m_bakedLightingInfo in WorldBuilderParams_t should be at offset 0x8");
		static_assert(offsetof(CS2::worldrenderer::WorldBuilderParams_t, m_nCompileTimestamp) == 0x50, "m_nCompileTimestamp in WorldBuilderParams_t should be at offset 0x50");
		static_assert(offsetof(CS2::worldrenderer::WorldBuilderParams_t, m_nCompileFingerprint) == 0x58, "m_nCompileFingerprint in WorldBuilderParams_t should be at offset 0x58");
		static_assert(sizeof(CS2::worldrenderer::WorldBuilderParams_t) == 0x60, "WorldBuilderParams_t size should be 0x60");
	}
}
