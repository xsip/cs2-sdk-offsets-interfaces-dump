// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <SDK/GlobalTypes.hpp>




namespace CS2 {
	namespace modellib {
		class CModelConfig  {
		public:
			GlobalTypes::CUtlString m_ConfigName; // 0x0 | Schema_Atomic | Size: 0x8
			// GlobalTypes::CUtlVector< CModelConfigElement >* m_Elements; // 0x8 | Schema_Atomic | Size: 0x18
			char  m_Elements[0x18]; // 0x8 | Schema_Atomic | Size: 0x18
			bool m_bTopLevel; // 0x20 | Schema_Builtin | Size: 0x1
			bool m_bActiveInEditorByDefault; // 0x21 | Schema_Builtin | Size: 0x1
			S2_PAD(0x6); // End padding
		};
		static_assert(offsetof(CS2::modellib::CModelConfig, m_ConfigName) == 0x0, "m_ConfigName in CModelConfig should be at offset 0x0");
		static_assert(offsetof(CS2::modellib::CModelConfig, m_Elements) == 0x8, "m_Elements in CModelConfig should be at offset 0x8");
		static_assert(offsetof(CS2::modellib::CModelConfig, m_bTopLevel) == 0x20, "m_bTopLevel in CModelConfig should be at offset 0x20");
		static_assert(offsetof(CS2::modellib::CModelConfig, m_bActiveInEditorByDefault) == 0x21, "m_bActiveInEditorByDefault in CModelConfig should be at offset 0x21");
		static_assert(sizeof(CS2::modellib::CModelConfig) == 0x28, "CModelConfig size should be 0x28");
	}
}
