// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <SDK/GlobalTypes.hpp>




namespace CS2 {
	namespace modellib {
		class CPhysSurfacePropertiesAudio  {
		public:
			float32 m_reflectivity; // 0x0 | Schema_Builtin | Size: 0x4
			float32 m_hardnessFactor; // 0x4 | Schema_Builtin | Size: 0x4
			float32 m_roughnessFactor; // 0x8 | Schema_Builtin | Size: 0x4
			float32 m_roughThreshold; // 0xc | Schema_Builtin | Size: 0x4
			float32 m_hardThreshold; // 0x10 | Schema_Builtin | Size: 0x4
			float32 m_hardVelocityThreshold; // 0x14 | Schema_Builtin | Size: 0x4
			float32 m_flStaticImpactVolume; // 0x18 | Schema_Builtin | Size: 0x4
			float32 m_flOcclusionFactor; // 0x1c | Schema_Builtin | Size: 0x4
		};
		static_assert(offsetof(CS2::modellib::CPhysSurfacePropertiesAudio, m_reflectivity) == 0x0, "m_reflectivity in CPhysSurfacePropertiesAudio should be at offset 0x0");
		static_assert(offsetof(CS2::modellib::CPhysSurfacePropertiesAudio, m_hardnessFactor) == 0x4, "m_hardnessFactor in CPhysSurfacePropertiesAudio should be at offset 0x4");
		static_assert(offsetof(CS2::modellib::CPhysSurfacePropertiesAudio, m_roughnessFactor) == 0x8, "m_roughnessFactor in CPhysSurfacePropertiesAudio should be at offset 0x8");
		static_assert(offsetof(CS2::modellib::CPhysSurfacePropertiesAudio, m_roughThreshold) == 0xC, "m_roughThreshold in CPhysSurfacePropertiesAudio should be at offset 0xC");
		static_assert(offsetof(CS2::modellib::CPhysSurfacePropertiesAudio, m_hardThreshold) == 0x10, "m_hardThreshold in CPhysSurfacePropertiesAudio should be at offset 0x10");
		static_assert(offsetof(CS2::modellib::CPhysSurfacePropertiesAudio, m_hardVelocityThreshold) == 0x14, "m_hardVelocityThreshold in CPhysSurfacePropertiesAudio should be at offset 0x14");
		static_assert(offsetof(CS2::modellib::CPhysSurfacePropertiesAudio, m_flStaticImpactVolume) == 0x18, "m_flStaticImpactVolume in CPhysSurfacePropertiesAudio should be at offset 0x18");
		static_assert(offsetof(CS2::modellib::CPhysSurfacePropertiesAudio, m_flOcclusionFactor) == 0x1C, "m_flOcclusionFactor in CPhysSurfacePropertiesAudio should be at offset 0x1C");
		static_assert(sizeof(CS2::modellib::CPhysSurfacePropertiesAudio) == 0x20, "CPhysSurfacePropertiesAudio size should be 0x20");
	}
}
