// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif





namespace CS2 {
	namespace modellib {
		class CFlexOp;
	}
}


using namespace GlobalTypes;
namespace CS2 {
	namespace modellib {
		class CFlexRule  {
		public:
			int32_t m_nFlex; // 0x0 | Schema_Builtin | Size: 0x4
			S2_PAD(0x4);
			GlobalTypes::CUtlVector<modellib::CFlexOp> m_FlexOps; // 0x8 | Schema_Atomic | Size: 0x18
			// char  m_FlexOps[0x18]; // 0x8 | Schema_Atomic | Size: 0x18
		};
		static_assert(offsetof(CS2::modellib::CFlexRule, m_nFlex) == 0x0, "m_nFlex in CFlexRule should be at offset 0x0");
		static_assert(offsetof(CS2::modellib::CFlexRule, m_FlexOps) == 0x8, "m_FlexOps in CFlexRule should be at offset 0x8");
		static_assert(sizeof(CS2::modellib::CFlexRule) == 0x20, "CFlexRule size should be 0x20");
	}
}
