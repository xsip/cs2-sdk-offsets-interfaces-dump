// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif





namespace CS2 {
	namespace modellib {
		class VPhysXCollisionAttributes_t  {
		public:
			uint32_t m_CollisionGroup; // 0x0 | Schema_Builtin | Size: 0x4
			S2_PAD(0x4);
			// GlobalTypes::CUtlVector< uint32 > m_InteractAs; // 0x8 | Schema_Atomic | Size: 0x18
			char  m_InteractAs[0x18]; // 0x8 | Schema_Atomic | Size: 0x18
			// GlobalTypes::CUtlVector< uint32 > m_InteractWith; // 0x20 | Schema_Atomic | Size: 0x18
			char  m_InteractWith[0x18]; // 0x20 | Schema_Atomic | Size: 0x18
			// GlobalTypes::CUtlVector< uint32 > m_InteractExclude; // 0x38 | Schema_Atomic | Size: 0x18
			char  m_InteractExclude[0x18]; // 0x38 | Schema_Atomic | Size: 0x18
			GlobalTypes::CUtlString m_CollisionGroupString; // 0x50 | Schema_Atomic | Size: 0x8
			GlobalTypes::CUtlVector< GlobalTypes::CUtlString > m_InteractAsStrings; // 0x58 | Schema_Atomic | Size: 0x18
			// char  m_InteractAsStrings[0x18]; // 0x58 | Schema_Atomic | Size: 0x18
			// GlobalTypes::CUtlVector< GlobalTypes::CUtlString > m_InteractAsStrings; // 0x58 | Schema_Atomic | Size: 0x18
			GlobalTypes::CUtlVector< GlobalTypes::CUtlString > m_InteractWithStrings; // 0x70 | Schema_Atomic | Size: 0x18
			// char  m_InteractWithStrings[0x18]; // 0x70 | Schema_Atomic | Size: 0x18
			// GlobalTypes::CUtlVector< GlobalTypes::CUtlString > m_InteractWithStrings; // 0x70 | Schema_Atomic | Size: 0x18
			GlobalTypes::CUtlVector< GlobalTypes::CUtlString > m_InteractExcludeStrings; // 0x88 | Schema_Atomic | Size: 0x18
			// char  m_InteractExcludeStrings[0x18]; // 0x88 | Schema_Atomic | Size: 0x18
			// GlobalTypes::CUtlVector< GlobalTypes::CUtlString > m_InteractExcludeStrings; // 0x88 | Schema_Atomic | Size: 0x18
		};
		static_assert(offsetof(CS2::modellib::VPhysXCollisionAttributes_t, m_CollisionGroup) == 0x0, "m_CollisionGroup in VPhysXCollisionAttributes_t should be at offset 0x0");
		static_assert(offsetof(CS2::modellib::VPhysXCollisionAttributes_t, m_InteractAs) == 0x8, "m_InteractAs in VPhysXCollisionAttributes_t should be at offset 0x8");
		static_assert(offsetof(CS2::modellib::VPhysXCollisionAttributes_t, m_InteractWith) == 0x20, "m_InteractWith in VPhysXCollisionAttributes_t should be at offset 0x20");
		static_assert(offsetof(CS2::modellib::VPhysXCollisionAttributes_t, m_InteractExclude) == 0x38, "m_InteractExclude in VPhysXCollisionAttributes_t should be at offset 0x38");
		static_assert(offsetof(CS2::modellib::VPhysXCollisionAttributes_t, m_CollisionGroupString) == 0x50, "m_CollisionGroupString in VPhysXCollisionAttributes_t should be at offset 0x50");
		static_assert(offsetof(CS2::modellib::VPhysXCollisionAttributes_t, m_InteractAsStrings) == 0x58, "m_InteractAsStrings in VPhysXCollisionAttributes_t should be at offset 0x58");
		static_assert(offsetof(CS2::modellib::VPhysXCollisionAttributes_t, m_InteractWithStrings) == 0x70, "m_InteractWithStrings in VPhysXCollisionAttributes_t should be at offset 0x70");
		static_assert(offsetof(CS2::modellib::VPhysXCollisionAttributes_t, m_InteractExcludeStrings) == 0x88, "m_InteractExcludeStrings in VPhysXCollisionAttributes_t should be at offset 0x88");
		static_assert(sizeof(CS2::modellib::VPhysXCollisionAttributes_t) == 0xA0, "VPhysXCollisionAttributes_t size should be 0xA0");
	}
}
