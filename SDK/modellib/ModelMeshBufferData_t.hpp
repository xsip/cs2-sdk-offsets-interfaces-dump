// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif





namespace CS2 {
	namespace modellib {
		class RenderInputLayoutField_t;
	}
}
namespace CS2 {
	namespace modellib {
		class ModelMeshBufferData_t  {
		public:
			int32_t m_nBlockIndex; // 0x0 | Schema_Builtin | Size: 0x4
			uint32_t m_nElementCount; // 0x4 | Schema_Builtin | Size: 0x4
			uint32_t m_nElementSizeInBytes; // 0x8 | Schema_Builtin | Size: 0x4
			bool m_bMeshoptCompressed; // 0xc | Schema_Builtin | Size: 0x1
			bool m_bMeshoptIndexSequence; // 0xd | Schema_Builtin | Size: 0x1
			bool m_bCompressedZSTD; // 0xe | Schema_Builtin | Size: 0x1
			bool m_bCreateBufferSRV; // 0xf | Schema_Builtin | Size: 0x1
			bool m_bCreateBufferUAV; // 0x10 | Schema_Builtin | Size: 0x1
			bool m_bCreateRawBuffer; // 0x11 | Schema_Builtin | Size: 0x1
			bool m_bCreatePooledBuffer; // 0x12 | Schema_Builtin | Size: 0x1
			S2_PAD(0x5);
			GlobalTypes::CUtlVector< modellib::RenderInputLayoutField_t > m_inputLayoutFields; // 0x18 | Schema_Atomic | Size: 0x18
			// char  m_inputLayoutFields[0x18]; // 0x18 | Schema_Atomic | Size: 0x18
			// GlobalTypes::CUtlVector< modellib::RenderInputLayoutField_t > m_inputLayoutFields; // 0x18 | Schema_Atomic | Size: 0x18
		};
		static_assert(offsetof(CS2::modellib::ModelMeshBufferData_t, m_nBlockIndex) == 0x0, "m_nBlockIndex in ModelMeshBufferData_t should be at offset 0x0");
		static_assert(offsetof(CS2::modellib::ModelMeshBufferData_t, m_nElementCount) == 0x4, "m_nElementCount in ModelMeshBufferData_t should be at offset 0x4");
		static_assert(offsetof(CS2::modellib::ModelMeshBufferData_t, m_nElementSizeInBytes) == 0x8, "m_nElementSizeInBytes in ModelMeshBufferData_t should be at offset 0x8");
		static_assert(offsetof(CS2::modellib::ModelMeshBufferData_t, m_bMeshoptCompressed) == 0xC, "m_bMeshoptCompressed in ModelMeshBufferData_t should be at offset 0xC");
		static_assert(offsetof(CS2::modellib::ModelMeshBufferData_t, m_bMeshoptIndexSequence) == 0xD, "m_bMeshoptIndexSequence in ModelMeshBufferData_t should be at offset 0xD");
		static_assert(offsetof(CS2::modellib::ModelMeshBufferData_t, m_bCompressedZSTD) == 0xE, "m_bCompressedZSTD in ModelMeshBufferData_t should be at offset 0xE");
		static_assert(offsetof(CS2::modellib::ModelMeshBufferData_t, m_bCreateBufferSRV) == 0xF, "m_bCreateBufferSRV in ModelMeshBufferData_t should be at offset 0xF");
		static_assert(offsetof(CS2::modellib::ModelMeshBufferData_t, m_bCreateBufferUAV) == 0x10, "m_bCreateBufferUAV in ModelMeshBufferData_t should be at offset 0x10");
		static_assert(offsetof(CS2::modellib::ModelMeshBufferData_t, m_bCreateRawBuffer) == 0x11, "m_bCreateRawBuffer in ModelMeshBufferData_t should be at offset 0x11");
		static_assert(offsetof(CS2::modellib::ModelMeshBufferData_t, m_bCreatePooledBuffer) == 0x12, "m_bCreatePooledBuffer in ModelMeshBufferData_t should be at offset 0x12");
		static_assert(offsetof(CS2::modellib::ModelMeshBufferData_t, m_inputLayoutFields) == 0x18, "m_inputLayoutFields in ModelMeshBufferData_t should be at offset 0x18");
		static_assert(sizeof(CS2::modellib::ModelMeshBufferData_t) == 0x30, "ModelMeshBufferData_t size should be 0x30");
	}
}
