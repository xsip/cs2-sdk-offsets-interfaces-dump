// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/modellib/FrameStamp_t.hpp>





using namespace GlobalTypes;
namespace CS2 {
	namespace modellib {
		class Frame_t  {
		public:
			float32 m_flTime; // 0x0 | Schema_Builtin | Size: 0x4
			modellib::FrameStamp_t m_Stamp; // 0x4 | Schema_DeclaredClass | Size: 0x1c
			GlobalTypes::CTransform m_Transform; // 0x20 | Schema_Atomic | Size: 0x20
			bool m_bTeleport; // 0x40 | Schema_Builtin | Size: 0x1
			S2_PAD(0x7);
			GlobalTypes::CUtlVector<GlobalTypes::CTransform> m_CompositeBones; // 0x48 | Schema_Atomic | Size: 0x18
			// char  m_CompositeBones[0x18]; // 0x48 | Schema_Atomic | Size: 0x18
			GlobalTypes::CUtlVector<GlobalTypes::CTransform> m_SimStateBones; // 0x60 | Schema_Atomic | Size: 0x18
			// char  m_SimStateBones[0x18]; // 0x60 | Schema_Atomic | Size: 0x18
			GlobalTypes::CUtlVector<GlobalTypes::CTransform> m_FeModelAnims; // 0x78 | Schema_Atomic | Size: 0x18
			// char  m_FeModelAnims[0x18]; // 0x78 | Schema_Atomic | Size: 0x18
			GlobalTypes::CUtlVector<GlobalTypes::VectorAligned> m_FeModelPos; // 0x90 | Schema_Atomic | Size: 0x18
			// char  m_FeModelPos[0x18]; // 0x90 | Schema_Atomic | Size: 0x18
			GlobalTypes::CUtlVector< float32 > m_FlexControllerWeights; // 0xa8 | Schema_Atomic | Size: 0x18
			// char  m_FlexControllerWeights[0x18]; // 0xa8 | Schema_Atomic | Size: 0x18
		};
		static_assert(offsetof(CS2::modellib::Frame_t, m_flTime) == 0x0, "m_flTime in SkeletonAnimCapture_t::Frame_t should be at offset 0x0");
		static_assert(offsetof(CS2::modellib::Frame_t, m_Stamp) == 0x4, "m_Stamp in SkeletonAnimCapture_t::Frame_t should be at offset 0x4");
		static_assert(offsetof(CS2::modellib::Frame_t, m_Transform) == 0x20, "m_Transform in SkeletonAnimCapture_t::Frame_t should be at offset 0x20");
		static_assert(offsetof(CS2::modellib::Frame_t, m_bTeleport) == 0x40, "m_bTeleport in SkeletonAnimCapture_t::Frame_t should be at offset 0x40");
		static_assert(offsetof(CS2::modellib::Frame_t, m_CompositeBones) == 0x48, "m_CompositeBones in SkeletonAnimCapture_t::Frame_t should be at offset 0x48");
		static_assert(offsetof(CS2::modellib::Frame_t, m_SimStateBones) == 0x60, "m_SimStateBones in SkeletonAnimCapture_t::Frame_t should be at offset 0x60");
		static_assert(offsetof(CS2::modellib::Frame_t, m_FeModelAnims) == 0x78, "m_FeModelAnims in SkeletonAnimCapture_t::Frame_t should be at offset 0x78");
		static_assert(offsetof(CS2::modellib::Frame_t, m_FeModelPos) == 0x90, "m_FeModelPos in SkeletonAnimCapture_t::Frame_t should be at offset 0x90");
		static_assert(offsetof(CS2::modellib::Frame_t, m_FlexControllerWeights) == 0xA8, "m_FlexControllerWeights in SkeletonAnimCapture_t::Frame_t should be at offset 0xA8");
		static_assert(sizeof(CS2::modellib::Frame_t) == 0xC0, "SkeletonAnimCapture_t::Frame_t size should be 0xC0");
	}
}
