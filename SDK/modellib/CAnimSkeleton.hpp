// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <SDK/GlobalTypes.hpp>




namespace CS2 {
	namespace modellib {
		class CAnimSkeleton  {
		public:
			S2_PAD(0x10);
			// GlobalTypes::CUtlVector< GlobalTypes::CTransform > m_localSpaceTransforms; // 0x10 | Schema_Atomic | Size: 0x18
			char  m_localSpaceTransforms[0x18]; // 0x10 | Schema_Atomic | Size: 0x18
			// GlobalTypes::CUtlVector< GlobalTypes::CTransform > m_modelSpaceTransforms; // 0x28 | Schema_Atomic | Size: 0x18
			char  m_modelSpaceTransforms[0x18]; // 0x28 | Schema_Atomic | Size: 0x18
			// GlobalTypes::CUtlVector< GlobalTypes::CUtlString > m_boneNames; // 0x40 | Schema_Atomic | Size: 0x18
			char  m_boneNames[0x18]; // 0x40 | Schema_Atomic | Size: 0x18
			// GlobalTypes::CUtlVector< GlobalTypes::CUtlVector< int32 > > m_children; // 0x58 | Schema_Atomic | Size: 0x18
			char  m_children[0x18]; // 0x58 | Schema_Atomic | Size: 0x18
			// GlobalTypes::CUtlVector< int32 > m_parents; // 0x70 | Schema_Atomic | Size: 0x18
			char  m_parents[0x18]; // 0x70 | Schema_Atomic | Size: 0x18
			// GlobalTypes::CUtlVector< modellib::CAnimFoot > m_feet; // 0x88 | Schema_Atomic | Size: 0x18
			char  m_feet[0x18]; // 0x88 | Schema_Atomic | Size: 0x18
			// GlobalTypes::CUtlVector< GlobalTypes::CUtlString > m_morphNames; // 0xa0 | Schema_Atomic | Size: 0x18
			char  m_morphNames[0x18]; // 0xa0 | Schema_Atomic | Size: 0x18
			// GlobalTypes::CUtlVector< int32 > m_lodBoneCounts; // 0xb8 | Schema_Atomic | Size: 0x18
			char  m_lodBoneCounts[0x18]; // 0xb8 | Schema_Atomic | Size: 0x18
		};
		static_assert(offsetof(CS2::modellib::CAnimSkeleton, m_localSpaceTransforms) == 0x10, "m_localSpaceTransforms in CAnimSkeleton should be at offset 0x10");
		static_assert(offsetof(CS2::modellib::CAnimSkeleton, m_modelSpaceTransforms) == 0x28, "m_modelSpaceTransforms in CAnimSkeleton should be at offset 0x28");
		static_assert(offsetof(CS2::modellib::CAnimSkeleton, m_boneNames) == 0x40, "m_boneNames in CAnimSkeleton should be at offset 0x40");
		static_assert(offsetof(CS2::modellib::CAnimSkeleton, m_children) == 0x58, "m_children in CAnimSkeleton should be at offset 0x58");
		static_assert(offsetof(CS2::modellib::CAnimSkeleton, m_parents) == 0x70, "m_parents in CAnimSkeleton should be at offset 0x70");
		static_assert(offsetof(CS2::modellib::CAnimSkeleton, m_feet) == 0x88, "m_feet in CAnimSkeleton should be at offset 0x88");
		static_assert(offsetof(CS2::modellib::CAnimSkeleton, m_morphNames) == 0xA0, "m_morphNames in CAnimSkeleton should be at offset 0xA0");
		static_assert(offsetof(CS2::modellib::CAnimSkeleton, m_lodBoneCounts) == 0xB8, "m_lodBoneCounts in CAnimSkeleton should be at offset 0xB8");
		static_assert(sizeof(CS2::modellib::CAnimSkeleton) == 0xD0, "CAnimSkeleton size should be 0xD0");
	}
}
