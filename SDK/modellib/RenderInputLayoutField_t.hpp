// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/modellib/RenderSlotType_t.hpp>



namespace CS2 {
	namespace modellib {
		class RenderInputLayoutField_t  {
		public:
			char m_pSemanticName[32]; // 0x0 | Schema_FixedArray | Size: 0x20
			int8_t m_nSemanticIndex; // 0x20 | Schema_Builtin | Size: 0x1
			S2_PAD(0x7);
			int16_t m_nOffset; // 0x28 | Schema_Builtin | Size: 0x2
			int8_t m_nSlot; // 0x2a | Schema_Builtin | Size: 0x1
			modellib::RenderSlotType_t m_nSlotType; // 0x2b | Schema_DeclaredEnum | Size: 0x1
			char m_szShaderSemantic[32]; // 0x2c | Schema_FixedArray | Size: 0x20
		};
		static_assert(offsetof(CS2::modellib::RenderInputLayoutField_t, m_pSemanticName) == 0x0, "m_pSemanticName in RenderInputLayoutField_t should be at offset 0x0");
		static_assert(offsetof(CS2::modellib::RenderInputLayoutField_t, m_nSemanticIndex) == 0x20, "m_nSemanticIndex in RenderInputLayoutField_t should be at offset 0x20");
		static_assert(offsetof(CS2::modellib::RenderInputLayoutField_t, m_nOffset) == 0x28, "m_nOffset in RenderInputLayoutField_t should be at offset 0x28");
		static_assert(offsetof(CS2::modellib::RenderInputLayoutField_t, m_nSlot) == 0x2A, "m_nSlot in RenderInputLayoutField_t should be at offset 0x2A");
		static_assert(offsetof(CS2::modellib::RenderInputLayoutField_t, m_nSlotType) == 0x2B, "m_nSlotType in RenderInputLayoutField_t should be at offset 0x2B");
		static_assert(offsetof(CS2::modellib::RenderInputLayoutField_t, m_szShaderSemantic) == 0x2C, "m_szShaderSemantic in RenderInputLayoutField_t should be at offset 0x2C");
		static_assert(sizeof(CS2::modellib::RenderInputLayoutField_t) == 0x4C, "RenderInputLayoutField_t size should be 0x4C");
	}
}
