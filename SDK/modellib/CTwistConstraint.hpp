// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/modellib/CBaseConstraint.hpp>



namespace CS2 {
	namespace modellib {
		class CTwistConstraint : public CS2::modellib::CBaseConstraint {
		public:
			bool m_bInverse; // 0x60 | Schema_Builtin | Size: 0x1
			S2_PAD(0xf);
			GlobalTypes::Quaternion m_qParentBindRotation; // 0x70 | Schema_Atomic | Size: 0x10
			GlobalTypes::Quaternion m_qChildBindRotation; // 0x80 | Schema_Atomic | Size: 0x10
		};
		static_assert(offsetof(CS2::modellib::CTwistConstraint, m_bInverse) == 0x60, "m_bInverse in CTwistConstraint should be at offset 0x60");
		static_assert(offsetof(CS2::modellib::CTwistConstraint, m_qParentBindRotation) == 0x70, "m_qParentBindRotation in CTwistConstraint should be at offset 0x70");
		static_assert(offsetof(CS2::modellib::CTwistConstraint, m_qChildBindRotation) == 0x80, "m_qChildBindRotation in CTwistConstraint should be at offset 0x80");
		static_assert(sizeof(CS2::modellib::CTwistConstraint) == 0x90, "CTwistConstraint size should be 0x90");
	}
}
