// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/modellib/SkeletonBoneBounds_t.hpp>





using namespace GlobalTypes;
namespace CS2 {
	namespace modellib {
		class RenderSkeletonBone_t  {
		public:
			GlobalTypes::CUtlString m_boneName; // 0x0 | Schema_Atomic | Size: 0x8
			GlobalTypes::CUtlString m_parentName; // 0x8 | Schema_Atomic | Size: 0x8
			GlobalTypes::matrix3x4_t m_invBindPose; // 0x10 | Schema_Atomic | Size: 0x30
			modellib::SkeletonBoneBounds_t m_bbox; // 0x40 | Schema_DeclaredClass | Size: 0x18
			float32 m_flSphereRadius; // 0x58 | Schema_Builtin | Size: 0x4
			S2_PAD(0x4); // End padding
		};
		static_assert(offsetof(CS2::modellib::RenderSkeletonBone_t, m_boneName) == 0x0, "m_boneName in RenderSkeletonBone_t should be at offset 0x0");
		static_assert(offsetof(CS2::modellib::RenderSkeletonBone_t, m_parentName) == 0x8, "m_parentName in RenderSkeletonBone_t should be at offset 0x8");
		static_assert(offsetof(CS2::modellib::RenderSkeletonBone_t, m_invBindPose) == 0x10, "m_invBindPose in RenderSkeletonBone_t should be at offset 0x10");
		static_assert(offsetof(CS2::modellib::RenderSkeletonBone_t, m_bbox) == 0x40, "m_bbox in RenderSkeletonBone_t should be at offset 0x40");
		static_assert(offsetof(CS2::modellib::RenderSkeletonBone_t, m_flSphereRadius) == 0x58, "m_flSphereRadius in RenderSkeletonBone_t should be at offset 0x58");
		static_assert(sizeof(CS2::modellib::RenderSkeletonBone_t) == 0x60, "RenderSkeletonBone_t size should be 0x60");
	}
}
