// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <SDK/GlobalTypes.hpp>

#include <SDK/modellib/CBoneConstraintBase.hpp>



namespace CS2 {
	namespace modellib {
		class CBaseConstraint : public CS2::modellib::CBoneConstraintBase {
		public:
			GlobalTypes::CUtlString m_name; // 0x20 | Schema_Atomic | Size: 0x8
			GlobalTypes::Vector m_vUpVector; // 0x28 | Schema_Atomic | Size: 0xc
			S2_PAD(0x4);
			// GlobalTypes::CUtlLeanVector< modellib::CConstraintSlave > m_slaves; // 0x38 | Schema_Atomic | Size: 0x10
			char  m_slaves[0x10]; // 0x38 | Schema_Atomic | Size: 0x10
			// GlobalTypes::CUtlVector< modellib::CConstraintTarget > m_targets; // 0x48 | Schema_Atomic | Size: 0x18
			char  m_targets[0x18]; // 0x48 | Schema_Atomic | Size: 0x18
		};
		static_assert(offsetof(CS2::modellib::CBaseConstraint, m_name) == 0x20, "m_name in CBaseConstraint should be at offset 0x20");
		static_assert(offsetof(CS2::modellib::CBaseConstraint, m_vUpVector) == 0x28, "m_vUpVector in CBaseConstraint should be at offset 0x28");
		static_assert(offsetof(CS2::modellib::CBaseConstraint, m_slaves) == 0x38, "m_slaves in CBaseConstraint should be at offset 0x38");
		static_assert(offsetof(CS2::modellib::CBaseConstraint, m_targets) == 0x48, "m_targets in CBaseConstraint should be at offset 0x48");
		static_assert(sizeof(CS2::modellib::CBaseConstraint) == 0x60, "CBaseConstraint size should be 0x60");
	}
}
