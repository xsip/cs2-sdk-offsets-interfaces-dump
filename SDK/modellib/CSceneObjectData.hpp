// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif







using namespace GlobalTypes;
namespace CS2 {
	namespace modellib {
		class CSceneObjectData  {
		public:
			GlobalTypes::Vector m_vMinBounds; // 0x0 | Schema_Atomic | Size: 0xc
			GlobalTypes::Vector m_vMaxBounds; // 0xc | Schema_Atomic | Size: 0xc
			// GlobalTypes::CUtlLeanVector< modellib::CMaterialDrawDescriptor > m_drawCalls; // 0x18 | Schema_Atomic | Size: 0x10
			char  m_drawCalls[0x10]; // 0x18 | Schema_Atomic | Size: 0x10
			// GlobalTypes::CUtlLeanVector< mathlib_extended::AABB_t > m_drawBounds; // 0x28 | Schema_Atomic | Size: 0x10
			char  m_drawBounds[0x10]; // 0x28 | Schema_Atomic | Size: 0x10
			// GlobalTypes::CUtlLeanVector< modellib::CMeshletDescriptor > m_meshlets; // 0x38 | Schema_Atomic | Size: 0x10
			char  m_meshlets[0x10]; // 0x38 | Schema_Atomic | Size: 0x10
			GlobalTypes::Vector4D m_vTintColor; // 0x48 | Schema_Atomic | Size: 0x10
			S2_PAD(0x38); // End padding
		};
		static_assert(offsetof(CS2::modellib::CSceneObjectData, m_vMinBounds) == 0x0, "m_vMinBounds in CSceneObjectData should be at offset 0x0");
		static_assert(offsetof(CS2::modellib::CSceneObjectData, m_vMaxBounds) == 0xC, "m_vMaxBounds in CSceneObjectData should be at offset 0xC");
		static_assert(offsetof(CS2::modellib::CSceneObjectData, m_drawCalls) == 0x18, "m_drawCalls in CSceneObjectData should be at offset 0x18");
		static_assert(offsetof(CS2::modellib::CSceneObjectData, m_drawBounds) == 0x28, "m_drawBounds in CSceneObjectData should be at offset 0x28");
		static_assert(offsetof(CS2::modellib::CSceneObjectData, m_meshlets) == 0x38, "m_meshlets in CSceneObjectData should be at offset 0x38");
		static_assert(offsetof(CS2::modellib::CSceneObjectData, m_vTintColor) == 0x48, "m_vTintColor in CSceneObjectData should be at offset 0x48");
		static_assert(sizeof(CS2::modellib::CSceneObjectData) == 0x90, "CSceneObjectData size should be 0x90");
	}
}
