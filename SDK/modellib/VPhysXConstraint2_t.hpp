// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <SDK/GlobalTypes.hpp>

#include <SDK/modellib/VPhysXConstraintParams_t.hpp>



namespace CS2 {
	namespace modellib {
		class VPhysXConstraint2_t  {
		public:
			uint32_t m_nFlags; // 0x0 | Schema_Builtin | Size: 0x4
			uint16_t m_nParent; // 0x4 | Schema_Builtin | Size: 0x2
			uint16_t m_nChild; // 0x6 | Schema_Builtin | Size: 0x2
			modellib::VPhysXConstraintParams_t m_params; // 0x8 | Schema_DeclaredClass | Size: 0xf8
		};
		static_assert(offsetof(CS2::modellib::VPhysXConstraint2_t, m_nFlags) == 0x0, "m_nFlags in VPhysXConstraint2_t should be at offset 0x0");
		static_assert(offsetof(CS2::modellib::VPhysXConstraint2_t, m_nParent) == 0x4, "m_nParent in VPhysXConstraint2_t should be at offset 0x4");
		static_assert(offsetof(CS2::modellib::VPhysXConstraint2_t, m_nChild) == 0x6, "m_nChild in VPhysXConstraint2_t should be at offset 0x6");
		static_assert(offsetof(CS2::modellib::VPhysXConstraint2_t, m_params) == 0x8, "m_params in VPhysXConstraint2_t should be at offset 0x8");
		static_assert(sizeof(CS2::modellib::VPhysXConstraint2_t) == 0x100, "VPhysXConstraint2_t size should be 0x100");
	}
}
