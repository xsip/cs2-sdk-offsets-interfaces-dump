// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif





namespace CS2 {
	namespace modellib {
		class SkeletonAnimCapture_t::Camera_t;
	}
}
namespace CS2 {
	namespace modellib {
		class SkeletonDemoDb_t  {
		public:
			// GlobalTypes::CUtlVector< SkeletonAnimCapture_t >* m_AnimCaptures; // 0x0 | Schema_Atomic | Size: 0x18
			char  m_AnimCaptures[0x18]; // 0x0 | Schema_Atomic | Size: 0x18
			GlobalTypes::CUtlVector< modellib::Camera_t > m_CameraTrack; // 0x18 | Schema_Atomic | Size: 0x18
			// char  m_CameraTrack[0x18]; // 0x18 | Schema_Atomic | Size: 0x18
			// GlobalTypes::Camera_t > m_CameraTrack; // 0x18 | Schema_Atomic | Size: 0x18
			float32 m_flRecordingTime; // 0x30 | Schema_Builtin | Size: 0x4
			S2_PAD(0x4); // End padding
		};
		static_assert(offsetof(CS2::modellib::SkeletonDemoDb_t, m_AnimCaptures) == 0x0, "m_AnimCaptures in SkeletonDemoDb_t should be at offset 0x0");
		static_assert(offsetof(CS2::modellib::SkeletonDemoDb_t, m_CameraTrack) == 0x18, "m_CameraTrack in SkeletonDemoDb_t should be at offset 0x18");
		static_assert(offsetof(CS2::modellib::SkeletonDemoDb_t, m_flRecordingTime) == 0x30, "m_flRecordingTime in SkeletonDemoDb_t should be at offset 0x30");
		static_assert(sizeof(CS2::modellib::SkeletonDemoDb_t) == 0x38, "SkeletonDemoDb_t size should be 0x38");
	}
}
