// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif





namespace CS2 {
	namespace rendersystemdx11 {
		class RsBlendStateDesc_t  {
		public:
			uint32_t m_srcBlendBits; // 0x0 | Schema_Builtin | Size: 0x4
			uint32_t m_destBlendBits; // 0x4 | Schema_Builtin | Size: 0x4
			uint32_t m_srcBlendAlphaBits; // 0x8 | Schema_Builtin | Size: 0x4
			uint32_t m_destBlendAlphaBits; // 0xc | Schema_Builtin | Size: 0x4
			uint32_t m_renderTargetWriteMaskBits; // 0x10 | Schema_Builtin | Size: 0x4
			S2_PAD(0x4);
			uint32_t m_blendOpAlphaBits; // 0x18 | Schema_Builtin | Size: 0x4
			uint8_t m_blendEnableBits; // 0x1c | Schema_Builtin | Size: 0x1
			uint8_t m_srgbWriteEnableBits; // 0x1d | Schema_Builtin | Size: 0x1
			S2_PAD(0x2); // End padding
		};
		static_assert(offsetof(CS2::rendersystemdx11::RsBlendStateDesc_t, m_srcBlendBits) == 0x0, "m_srcBlendBits in RsBlendStateDesc_t should be at offset 0x0");
		static_assert(offsetof(CS2::rendersystemdx11::RsBlendStateDesc_t, m_destBlendBits) == 0x4, "m_destBlendBits in RsBlendStateDesc_t should be at offset 0x4");
		static_assert(offsetof(CS2::rendersystemdx11::RsBlendStateDesc_t, m_srcBlendAlphaBits) == 0x8, "m_srcBlendAlphaBits in RsBlendStateDesc_t should be at offset 0x8");
		static_assert(offsetof(CS2::rendersystemdx11::RsBlendStateDesc_t, m_destBlendAlphaBits) == 0xC, "m_destBlendAlphaBits in RsBlendStateDesc_t should be at offset 0xC");
		static_assert(offsetof(CS2::rendersystemdx11::RsBlendStateDesc_t, m_renderTargetWriteMaskBits) == 0x10, "m_renderTargetWriteMaskBits in RsBlendStateDesc_t should be at offset 0x10");
		static_assert(offsetof(CS2::rendersystemdx11::RsBlendStateDesc_t, m_blendOpAlphaBits) == 0x18, "m_blendOpAlphaBits in RsBlendStateDesc_t should be at offset 0x18");
		static_assert(offsetof(CS2::rendersystemdx11::RsBlendStateDesc_t, m_blendEnableBits) == 0x1C, "m_blendEnableBits in RsBlendStateDesc_t should be at offset 0x1C");
		static_assert(offsetof(CS2::rendersystemdx11::RsBlendStateDesc_t, m_srgbWriteEnableBits) == 0x1D, "m_srgbWriteEnableBits in RsBlendStateDesc_t should be at offset 0x1D");
		static_assert(sizeof(CS2::rendersystemdx11::RsBlendStateDesc_t) == 0x20, "RsBlendStateDesc_t size should be 0x20");
	}
}
