// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif







using namespace GlobalTypes;
namespace CS2 {
	namespace toolscene {
		class CLightRigLight  {
		public:
			GlobalTypes::Vector m_vPosition; // 0x0 | Schema_Atomic | Size: 0xc
			GlobalTypes::Vector m_vDirection; // 0xc | Schema_Atomic | Size: 0xc
			GlobalTypes::Vector m_vLookAt; // 0x18 | Schema_Atomic | Size: 0xc
			GlobalTypes::Color m_Color; // 0x24 | Schema_Atomic | Size: 0x4
			float32 m_flAxisScale; // 0x28 | Schema_Builtin | Size: 0x4
			float32 m_flRadius; // 0x2c | Schema_Builtin | Size: 0x4
			float32 m_flBrightness; // 0x30 | Schema_Builtin | Size: 0x4
			float32 m_flLightSourceRadius; // 0x34 | Schema_Builtin | Size: 0x4
			float32 m_flDistance; // 0x38 | Schema_Builtin | Size: 0x4
			bool m_bRelativePositioning; // 0x3c | Schema_Builtin | Size: 0x1
			bool m_bParentToCamera; // 0x3d | Schema_Builtin | Size: 0x1
			S2_PAD(0x2); // End padding
		};
		static_assert(offsetof(CS2::toolscene::CLightRigLight, m_vPosition) == 0x0, "m_vPosition in CLightRigLight should be at offset 0x0");
		static_assert(offsetof(CS2::toolscene::CLightRigLight, m_vDirection) == 0xC, "m_vDirection in CLightRigLight should be at offset 0xC");
		static_assert(offsetof(CS2::toolscene::CLightRigLight, m_vLookAt) == 0x18, "m_vLookAt in CLightRigLight should be at offset 0x18");
		static_assert(offsetof(CS2::toolscene::CLightRigLight, m_Color) == 0x24, "m_Color in CLightRigLight should be at offset 0x24");
		static_assert(offsetof(CS2::toolscene::CLightRigLight, m_flAxisScale) == 0x28, "m_flAxisScale in CLightRigLight should be at offset 0x28");
		static_assert(offsetof(CS2::toolscene::CLightRigLight, m_flRadius) == 0x2C, "m_flRadius in CLightRigLight should be at offset 0x2C");
		static_assert(offsetof(CS2::toolscene::CLightRigLight, m_flBrightness) == 0x30, "m_flBrightness in CLightRigLight should be at offset 0x30");
		static_assert(offsetof(CS2::toolscene::CLightRigLight, m_flLightSourceRadius) == 0x34, "m_flLightSourceRadius in CLightRigLight should be at offset 0x34");
		static_assert(offsetof(CS2::toolscene::CLightRigLight, m_flDistance) == 0x38, "m_flDistance in CLightRigLight should be at offset 0x38");
		static_assert(offsetof(CS2::toolscene::CLightRigLight, m_bRelativePositioning) == 0x3C, "m_bRelativePositioning in CLightRigLight should be at offset 0x3C");
		static_assert(offsetof(CS2::toolscene::CLightRigLight, m_bParentToCamera) == 0x3D, "m_bParentToCamera in CLightRigLight should be at offset 0x3D");
		static_assert(sizeof(CS2::toolscene::CLightRigLight) == 0x40, "CLightRigLight size should be 0x40");
	}
}
