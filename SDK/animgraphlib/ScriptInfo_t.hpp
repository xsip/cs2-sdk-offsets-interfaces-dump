// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <SDK/GlobalTypes.hpp>

#include <SDK/animgraphlib/AnimScriptType.hpp>



namespace CS2 {
	namespace animgraphlib {
		class ScriptInfo_t  {
		public:
			GlobalTypes::CUtlString m_code; // 0x0 | Schema_Atomic | Size: 0x8
			// GlobalTypes::CUtlVector< animgraphlib::CAnimParamHandle > m_paramsModified; // 0x8 | Schema_Atomic | Size: 0x18
			char  m_paramsModified[0x18]; // 0x8 | Schema_Atomic | Size: 0x18
			// GlobalTypes::CUtlVector< int32 > m_proxyReadParams; // 0x20 | Schema_Atomic | Size: 0x18
			char  m_proxyReadParams[0x18]; // 0x20 | Schema_Atomic | Size: 0x18
			// GlobalTypes::CUtlVector< int32 > m_proxyWriteParams; // 0x38 | Schema_Atomic | Size: 0x18
			char  m_proxyWriteParams[0x18]; // 0x38 | Schema_Atomic | Size: 0x18
			animgraphlib::AnimScriptType m_eScriptType; // 0x50 | Schema_DeclaredEnum | Size: 0x2
			S2_PAD(0x6); // End padding
		};
		static_assert(offsetof(CS2::animgraphlib::ScriptInfo_t, m_code) == 0x0, "m_code in ScriptInfo_t should be at offset 0x0");
		static_assert(offsetof(CS2::animgraphlib::ScriptInfo_t, m_paramsModified) == 0x8, "m_paramsModified in ScriptInfo_t should be at offset 0x8");
		static_assert(offsetof(CS2::animgraphlib::ScriptInfo_t, m_proxyReadParams) == 0x20, "m_proxyReadParams in ScriptInfo_t should be at offset 0x20");
		static_assert(offsetof(CS2::animgraphlib::ScriptInfo_t, m_proxyWriteParams) == 0x38, "m_proxyWriteParams in ScriptInfo_t should be at offset 0x38");
		static_assert(offsetof(CS2::animgraphlib::ScriptInfo_t, m_eScriptType) == 0x50, "m_eScriptType in ScriptInfo_t should be at offset 0x50");
		static_assert(sizeof(CS2::animgraphlib::ScriptInfo_t) == 0x58, "ScriptInfo_t size should be 0x58");
	}
}
