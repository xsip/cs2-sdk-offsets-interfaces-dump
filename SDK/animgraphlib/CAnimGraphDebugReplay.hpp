// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif







using namespace GlobalTypes;
namespace CS2 {
	namespace animgraphlib {
		class CAnimGraphDebugReplay  {
		public:
			S2_PAD(0x40);
			GlobalTypes::CUtlString m_animGraphFileName; // 0x40 | Schema_Atomic | Size: 0x8
			GlobalTypes::CUtlVector<GlobalTypes::CSmartPtr<animgraphlib::CAnimReplayFrame>> m_frameList; // 0x48 | Schema_Atomic | Size: 0x18
			// char  m_frameList[0x18]; // 0x48 | Schema_Atomic | Size: 0x18
			int32_t m_startIndex; // 0x60 | Schema_Builtin | Size: 0x4
			int32_t m_writeIndex; // 0x64 | Schema_Builtin | Size: 0x4
			int32_t m_frameCount; // 0x68 | Schema_Builtin | Size: 0x4
			S2_PAD(0x4); // End padding
		};
		static_assert(offsetof(CS2::animgraphlib::CAnimGraphDebugReplay, m_animGraphFileName) == 0x40, "m_animGraphFileName in CAnimGraphDebugReplay should be at offset 0x40");
		static_assert(offsetof(CS2::animgraphlib::CAnimGraphDebugReplay, m_frameList) == 0x48, "m_frameList in CAnimGraphDebugReplay should be at offset 0x48");
		static_assert(offsetof(CS2::animgraphlib::CAnimGraphDebugReplay, m_startIndex) == 0x60, "m_startIndex in CAnimGraphDebugReplay should be at offset 0x60");
		static_assert(offsetof(CS2::animgraphlib::CAnimGraphDebugReplay, m_writeIndex) == 0x64, "m_writeIndex in CAnimGraphDebugReplay should be at offset 0x64");
		static_assert(offsetof(CS2::animgraphlib::CAnimGraphDebugReplay, m_frameCount) == 0x68, "m_frameCount in CAnimGraphDebugReplay should be at offset 0x68");
		static_assert(sizeof(CS2::animgraphlib::CAnimGraphDebugReplay) == 0x70, "CAnimGraphDebugReplay size should be 0x70");
	}
}
