// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <SDK/GlobalTypes.hpp>

#include <SDK/animgraphlib/CParamSpanUpdater.hpp>



namespace CS2 {
	namespace animgraphlib {
		class CMotionGraph  {
		public:
			S2_PAD(0x10);
			animgraphlib::CParamSpanUpdater m_paramSpans; // 0x10 | Schema_DeclaredClass | Size: 0x18
			// GlobalTypes::CUtlVector< animgraphlib::TagSpan_t > m_tags; // 0x28 | Schema_Atomic | Size: 0x18
			char  m_tags[0x18]; // 0x28 | Schema_Atomic | Size: 0x18
			// GlobalTypes::CSmartPtr< animgraphlib::CMotionNode > m_pRootNode; // 0x40 | Schema_Atomic | Size: 0x8
			char  m_pRootNode[0x8]; // 0x40 | Schema_Atomic | Size: 0x8
			int32_t m_nParameterCount; // 0x48 | Schema_Builtin | Size: 0x4
			int32_t m_nConfigStartIndex; // 0x4c | Schema_Builtin | Size: 0x4
			int32_t m_nConfigCount; // 0x50 | Schema_Builtin | Size: 0x4
			bool m_bLoop; // 0x54 | Schema_Builtin | Size: 0x1
			S2_PAD(0x3); // End padding
		};
		static_assert(offsetof(CS2::animgraphlib::CMotionGraph, m_paramSpans) == 0x10, "m_paramSpans in CMotionGraph should be at offset 0x10");
		static_assert(offsetof(CS2::animgraphlib::CMotionGraph, m_tags) == 0x28, "m_tags in CMotionGraph should be at offset 0x28");
		static_assert(offsetof(CS2::animgraphlib::CMotionGraph, m_pRootNode) == 0x40, "m_pRootNode in CMotionGraph should be at offset 0x40");
		static_assert(offsetof(CS2::animgraphlib::CMotionGraph, m_nParameterCount) == 0x48, "m_nParameterCount in CMotionGraph should be at offset 0x48");
		static_assert(offsetof(CS2::animgraphlib::CMotionGraph, m_nConfigStartIndex) == 0x4C, "m_nConfigStartIndex in CMotionGraph should be at offset 0x4C");
		static_assert(offsetof(CS2::animgraphlib::CMotionGraph, m_nConfigCount) == 0x50, "m_nConfigCount in CMotionGraph should be at offset 0x50");
		static_assert(offsetof(CS2::animgraphlib::CMotionGraph, m_bLoop) == 0x54, "m_bLoop in CMotionGraph should be at offset 0x54");
		static_assert(sizeof(CS2::animgraphlib::CMotionGraph) == 0x58, "CMotionGraph size should be 0x58");
	}
}
