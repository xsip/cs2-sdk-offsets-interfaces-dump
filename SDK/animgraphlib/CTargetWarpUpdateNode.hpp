// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <SDK/GlobalTypes.hpp>

#include <SDK/animgraphlib/CUnaryUpdateNode.hpp>
#include <SDK/animgraphlib/TargetWarpAngleMode_t.hpp>
#include <SDK/animgraphlib/CAnimParamHandle.hpp>
#include <SDK/animgraphlib/TargetWarpCorrectionMethod.hpp>
#include <SDK/animgraphlib/TargetWarpTimingMethod.hpp>



namespace CS2 {
	namespace animgraphlib {
		class CTargetWarpUpdateNode : public CS2::animgraphlib::CUnaryUpdateNode {
		public:
			S2_PAD(0x4);
			animgraphlib::TargetWarpAngleMode_t m_eAngleMode; // 0x74 | Schema_DeclaredEnum | Size: 0x4
			animgraphlib::CAnimParamHandle m_hTargetPositionParameter; // 0x78 | Schema_DeclaredClass | Size: 0x2
			animgraphlib::CAnimParamHandle m_hTargetUpVectorParameter; // 0x7a | Schema_DeclaredClass | Size: 0x2
			animgraphlib::CAnimParamHandle m_hTargetFacePositionParameter; // 0x7c | Schema_DeclaredClass | Size: 0x2
			animgraphlib::CAnimParamHandle m_hMoveHeadingParameter; // 0x7e | Schema_DeclaredClass | Size: 0x2
			animgraphlib::CAnimParamHandle m_hDesiredMoveHeadingParameter; // 0x80 | Schema_DeclaredClass | Size: 0x2
			S2_PAD(0x2);
			animgraphlib::TargetWarpCorrectionMethod m_eCorrectionMethod; // 0x84 | Schema_DeclaredEnum | Size: 0x4
			animgraphlib::TargetWarpTimingMethod m_eTargetWarpTimingMethod; // 0x88 | Schema_DeclaredEnum | Size: 0x4
			bool m_bTargetFacePositionIsWorldSpace; // 0x8c | Schema_Builtin | Size: 0x1
			bool m_bTargetPositionIsWorldSpace; // 0x8d | Schema_Builtin | Size: 0x1
			bool m_bOnlyWarpWhenTagIsFound; // 0x8e | Schema_Builtin | Size: 0x1
			bool m_bWarpOrientationDuringTranslation; // 0x8f | Schema_Builtin | Size: 0x1
			bool m_bWarpAroundCenter; // 0x90 | Schema_Builtin | Size: 0x1
			S2_PAD(0x3);
			float32 m_flMaxAngle; // 0x94 | Schema_Builtin | Size: 0x4
		};
		static_assert(offsetof(CS2::animgraphlib::CTargetWarpUpdateNode, m_eAngleMode) == 0x74, "m_eAngleMode in CTargetWarpUpdateNode should be at offset 0x74");
		static_assert(offsetof(CS2::animgraphlib::CTargetWarpUpdateNode, m_hTargetPositionParameter) == 0x78, "m_hTargetPositionParameter in CTargetWarpUpdateNode should be at offset 0x78");
		static_assert(offsetof(CS2::animgraphlib::CTargetWarpUpdateNode, m_hTargetUpVectorParameter) == 0x7A, "m_hTargetUpVectorParameter in CTargetWarpUpdateNode should be at offset 0x7A");
		static_assert(offsetof(CS2::animgraphlib::CTargetWarpUpdateNode, m_hTargetFacePositionParameter) == 0x7C, "m_hTargetFacePositionParameter in CTargetWarpUpdateNode should be at offset 0x7C");
		static_assert(offsetof(CS2::animgraphlib::CTargetWarpUpdateNode, m_hMoveHeadingParameter) == 0x7E, "m_hMoveHeadingParameter in CTargetWarpUpdateNode should be at offset 0x7E");
		static_assert(offsetof(CS2::animgraphlib::CTargetWarpUpdateNode, m_hDesiredMoveHeadingParameter) == 0x80, "m_hDesiredMoveHeadingParameter in CTargetWarpUpdateNode should be at offset 0x80");
		static_assert(offsetof(CS2::animgraphlib::CTargetWarpUpdateNode, m_eCorrectionMethod) == 0x84, "m_eCorrectionMethod in CTargetWarpUpdateNode should be at offset 0x84");
		static_assert(offsetof(CS2::animgraphlib::CTargetWarpUpdateNode, m_eTargetWarpTimingMethod) == 0x88, "m_eTargetWarpTimingMethod in CTargetWarpUpdateNode should be at offset 0x88");
		static_assert(offsetof(CS2::animgraphlib::CTargetWarpUpdateNode, m_bTargetFacePositionIsWorldSpace) == 0x8C, "m_bTargetFacePositionIsWorldSpace in CTargetWarpUpdateNode should be at offset 0x8C");
		static_assert(offsetof(CS2::animgraphlib::CTargetWarpUpdateNode, m_bTargetPositionIsWorldSpace) == 0x8D, "m_bTargetPositionIsWorldSpace in CTargetWarpUpdateNode should be at offset 0x8D");
		static_assert(offsetof(CS2::animgraphlib::CTargetWarpUpdateNode, m_bOnlyWarpWhenTagIsFound) == 0x8E, "m_bOnlyWarpWhenTagIsFound in CTargetWarpUpdateNode should be at offset 0x8E");
		static_assert(offsetof(CS2::animgraphlib::CTargetWarpUpdateNode, m_bWarpOrientationDuringTranslation) == 0x8F, "m_bWarpOrientationDuringTranslation in CTargetWarpUpdateNode should be at offset 0x8F");
		static_assert(offsetof(CS2::animgraphlib::CTargetWarpUpdateNode, m_bWarpAroundCenter) == 0x90, "m_bWarpAroundCenter in CTargetWarpUpdateNode should be at offset 0x90");
		static_assert(offsetof(CS2::animgraphlib::CTargetWarpUpdateNode, m_flMaxAngle) == 0x94, "m_flMaxAngle in CTargetWarpUpdateNode should be at offset 0x94");
		static_assert(sizeof(CS2::animgraphlib::CTargetWarpUpdateNode) == 0x98, "CTargetWarpUpdateNode size should be 0x98");
	}
}
