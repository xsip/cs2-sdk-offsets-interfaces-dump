// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif







using namespace GlobalTypes;
namespace CS2 {
	namespace animgraphlib {
		class CAnimReplayFrame  {
		public:
			S2_PAD(0x10);
			GlobalTypes::CUtlVector<GlobalTypes::CUtlBinaryBlock> m_inputDataBlocks; // 0x10 | Schema_Atomic | Size: 0x18
			// char  m_inputDataBlocks[0x18]; // 0x10 | Schema_Atomic | Size: 0x18
			GlobalTypes::CUtlBinaryBlock m_instanceData; // 0x28 | Schema_Atomic | Size: 0x10
			S2_PAD(0x8);
			GlobalTypes::CTransform m_startingLocalToWorldTransform; // 0x40 | Schema_Atomic | Size: 0x20
			GlobalTypes::CTransform m_localToWorldTransform; // 0x60 | Schema_Atomic | Size: 0x20
			float32 m_timeStamp; // 0x80 | Schema_Builtin | Size: 0x4
			S2_PAD(0xc); // End padding
		};
		static_assert(offsetof(CS2::animgraphlib::CAnimReplayFrame, m_inputDataBlocks) == 0x10, "m_inputDataBlocks in CAnimReplayFrame should be at offset 0x10");
		static_assert(offsetof(CS2::animgraphlib::CAnimReplayFrame, m_instanceData) == 0x28, "m_instanceData in CAnimReplayFrame should be at offset 0x28");
		static_assert(offsetof(CS2::animgraphlib::CAnimReplayFrame, m_startingLocalToWorldTransform) == 0x40, "m_startingLocalToWorldTransform in CAnimReplayFrame should be at offset 0x40");
		static_assert(offsetof(CS2::animgraphlib::CAnimReplayFrame, m_localToWorldTransform) == 0x60, "m_localToWorldTransform in CAnimReplayFrame should be at offset 0x60");
		static_assert(offsetof(CS2::animgraphlib::CAnimReplayFrame, m_timeStamp) == 0x80, "m_timeStamp in CAnimReplayFrame should be at offset 0x80");
		static_assert(sizeof(CS2::animgraphlib::CAnimReplayFrame) == 0x90, "CAnimReplayFrame size should be 0x90");
	}
}
