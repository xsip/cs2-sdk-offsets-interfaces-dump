// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/modellib/CAnimAttachment.hpp>
#include <SDK/animgraphlib/CAnimInputDamping.hpp>



namespace CS2 {
	namespace animgraphlib {
		class LookAtBone_t;
	}
}


using namespace GlobalTypes;
namespace CS2 {
	namespace animgraphlib {
		class LookAtOpFixedSettings_t  {
		public:
			modellib::CAnimAttachment m_attachment; // 0x0 | Schema_DeclaredClass | Size: 0x80
			animgraphlib::CAnimInputDamping m_damping; // 0x80 | Schema_DeclaredClass | Size: 0x18
			GlobalTypes::CUtlVector< animgraphlib::LookAtBone_t > m_bones; // 0x98 | Schema_Atomic | Size: 0x18
			// char  m_bones[0x18]; // 0x98 | Schema_Atomic | Size: 0x18
			float32 m_flYawLimit; // 0xb0 | Schema_Builtin | Size: 0x4
			float32 m_flPitchLimit; // 0xb4 | Schema_Builtin | Size: 0x4
			float32 m_flHysteresisInnerAngle; // 0xb8 | Schema_Builtin | Size: 0x4
			float32 m_flHysteresisOuterAngle; // 0xbc | Schema_Builtin | Size: 0x4
			bool m_bRotateYawForward; // 0xc0 | Schema_Builtin | Size: 0x1
			bool m_bMaintainUpDirection; // 0xc1 | Schema_Builtin | Size: 0x1
			bool m_bTargetIsPosition; // 0xc2 | Schema_Builtin | Size: 0x1
			bool m_bUseHysteresis; // 0xc3 | Schema_Builtin | Size: 0x1
			S2_PAD(0xc); // End padding
		};
		static_assert(offsetof(CS2::animgraphlib::LookAtOpFixedSettings_t, m_attachment) == 0x0, "m_attachment in LookAtOpFixedSettings_t should be at offset 0x0");
		static_assert(offsetof(CS2::animgraphlib::LookAtOpFixedSettings_t, m_damping) == 0x80, "m_damping in LookAtOpFixedSettings_t should be at offset 0x80");
		static_assert(offsetof(CS2::animgraphlib::LookAtOpFixedSettings_t, m_bones) == 0x98, "m_bones in LookAtOpFixedSettings_t should be at offset 0x98");
		static_assert(offsetof(CS2::animgraphlib::LookAtOpFixedSettings_t, m_flYawLimit) == 0xB0, "m_flYawLimit in LookAtOpFixedSettings_t should be at offset 0xB0");
		static_assert(offsetof(CS2::animgraphlib::LookAtOpFixedSettings_t, m_flPitchLimit) == 0xB4, "m_flPitchLimit in LookAtOpFixedSettings_t should be at offset 0xB4");
		static_assert(offsetof(CS2::animgraphlib::LookAtOpFixedSettings_t, m_flHysteresisInnerAngle) == 0xB8, "m_flHysteresisInnerAngle in LookAtOpFixedSettings_t should be at offset 0xB8");
		static_assert(offsetof(CS2::animgraphlib::LookAtOpFixedSettings_t, m_flHysteresisOuterAngle) == 0xBC, "m_flHysteresisOuterAngle in LookAtOpFixedSettings_t should be at offset 0xBC");
		static_assert(offsetof(CS2::animgraphlib::LookAtOpFixedSettings_t, m_bRotateYawForward) == 0xC0, "m_bRotateYawForward in LookAtOpFixedSettings_t should be at offset 0xC0");
		static_assert(offsetof(CS2::animgraphlib::LookAtOpFixedSettings_t, m_bMaintainUpDirection) == 0xC1, "m_bMaintainUpDirection in LookAtOpFixedSettings_t should be at offset 0xC1");
		static_assert(offsetof(CS2::animgraphlib::LookAtOpFixedSettings_t, m_bTargetIsPosition) == 0xC2, "m_bTargetIsPosition in LookAtOpFixedSettings_t should be at offset 0xC2");
		static_assert(offsetof(CS2::animgraphlib::LookAtOpFixedSettings_t, m_bUseHysteresis) == 0xC3, "m_bUseHysteresis in LookAtOpFixedSettings_t should be at offset 0xC3");
		static_assert(sizeof(CS2::animgraphlib::LookAtOpFixedSettings_t) == 0xD0, "LookAtOpFixedSettings_t size should be 0xD0");
	}
}
