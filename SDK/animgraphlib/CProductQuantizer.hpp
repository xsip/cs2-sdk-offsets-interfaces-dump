// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif





namespace CS2 {
	namespace animgraphlib {
		class CVectorQuantizer;
	}
}


using namespace GlobalTypes;
namespace CS2 {
	namespace animgraphlib {
		class CProductQuantizer  {
		public:
			GlobalTypes::CUtlVector<animgraphlib::CVectorQuantizer> m_subQuantizers; // 0x0 | Schema_Atomic | Size: 0x18
			// char  m_subQuantizers[0x18]; // 0x0 | Schema_Atomic | Size: 0x18
			int32_t m_nDimensions; // 0x18 | Schema_Builtin | Size: 0x4
			S2_PAD(0x4); // End padding
		};
		static_assert(offsetof(CS2::animgraphlib::CProductQuantizer, m_subQuantizers) == 0x0, "m_subQuantizers in CProductQuantizer should be at offset 0x0");
		static_assert(offsetof(CS2::animgraphlib::CProductQuantizer, m_nDimensions) == 0x18, "m_nDimensions in CProductQuantizer should be at offset 0x18");
		static_assert(sizeof(CS2::animgraphlib::CProductQuantizer) == 0x20, "CProductQuantizer size should be 0x20");
	}
}
