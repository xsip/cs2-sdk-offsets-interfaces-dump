// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/animationsystem/HSequence.hpp>





using namespace GlobalTypes;
namespace CS2 {
	namespace animgraphlib {
		class CCachedPose  {
		public:
			S2_PAD(0x8);
			GlobalTypes::CUtlVector< GlobalTypes::CTransform > m_transforms; // 0x8 | Schema_Atomic | Size: 0x18
			// char  m_transforms[0x18]; // 0x8 | Schema_Atomic | Size: 0x18
			GlobalTypes::CUtlVector< float32 > m_morphWeights; // 0x20 | Schema_Atomic | Size: 0x18
			// char  m_morphWeights[0x18]; // 0x20 | Schema_Atomic | Size: 0x18
			animationsystem::HSequence m_hSequence; // 0x38 | Schema_DeclaredClass | Size: 0x4
			float32 m_flCycle; // 0x3c | Schema_Builtin | Size: 0x4
		};
		static_assert(offsetof(CS2::animgraphlib::CCachedPose, m_transforms) == 0x8, "m_transforms in CCachedPose should be at offset 0x8");
		static_assert(offsetof(CS2::animgraphlib::CCachedPose, m_morphWeights) == 0x20, "m_morphWeights in CCachedPose should be at offset 0x20");
		static_assert(offsetof(CS2::animgraphlib::CCachedPose, m_hSequence) == 0x38, "m_hSequence in CCachedPose should be at offset 0x38");
		static_assert(offsetof(CS2::animgraphlib::CCachedPose, m_flCycle) == 0x3C, "m_flCycle in CCachedPose should be at offset 0x3C");
		static_assert(sizeof(CS2::animgraphlib::CCachedPose) == 0x40, "CCachedPose size should be 0x40");
	}
}
