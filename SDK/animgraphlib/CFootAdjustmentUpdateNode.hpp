// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/animgraphlib/CUnaryUpdateNode.hpp>
#include <SDK/animgraphlib/CPoseHandle.hpp>
#include <SDK/animgraphlib/CAnimParamHandle.hpp>



namespace CS2 {
	namespace animationsystem {
		class HSequence;
	}
}
namespace CS2 {
	namespace animgraphlib {
		class CFootAdjustmentUpdateNode : public CS2::animgraphlib::CUnaryUpdateNode {
		public:
			S2_PAD(0x8);
			GlobalTypes::CUtlVector< animationsystem::HSequence > m_clips; // 0x78 | Schema_Atomic | Size: 0x18
			// char  m_clips[0x18]; // 0x78 | Schema_Atomic | Size: 0x18
			// GlobalTypes::CUtlVector< animationsystem::HSequence > m_clips; // 0x78 | Schema_Atomic | Size: 0x18
			animgraphlib::CPoseHandle m_hBasePoseCacheHandle; // 0x90 | Schema_DeclaredClass | Size: 0x4
			animgraphlib::CAnimParamHandle m_facingTarget; // 0x94 | Schema_DeclaredClass | Size: 0x2
			S2_PAD(0x2);
			float32 m_flTurnTimeMin; // 0x98 | Schema_Builtin | Size: 0x4
			float32 m_flTurnTimeMax; // 0x9c | Schema_Builtin | Size: 0x4
			float32 m_flStepHeightMax; // 0xa0 | Schema_Builtin | Size: 0x4
			float32 m_flStepHeightMaxAngle; // 0xa4 | Schema_Builtin | Size: 0x4
			bool m_bResetChild; // 0xa8 | Schema_Builtin | Size: 0x1
			bool m_bAnimationDriven; // 0xa9 | Schema_Builtin | Size: 0x1
			S2_PAD(0x6); // End padding
		};
		static_assert(offsetof(CS2::animgraphlib::CFootAdjustmentUpdateNode, m_clips) == 0x78, "m_clips in CFootAdjustmentUpdateNode should be at offset 0x78");
		static_assert(offsetof(CS2::animgraphlib::CFootAdjustmentUpdateNode, m_hBasePoseCacheHandle) == 0x90, "m_hBasePoseCacheHandle in CFootAdjustmentUpdateNode should be at offset 0x90");
		static_assert(offsetof(CS2::animgraphlib::CFootAdjustmentUpdateNode, m_facingTarget) == 0x94, "m_facingTarget in CFootAdjustmentUpdateNode should be at offset 0x94");
		static_assert(offsetof(CS2::animgraphlib::CFootAdjustmentUpdateNode, m_flTurnTimeMin) == 0x98, "m_flTurnTimeMin in CFootAdjustmentUpdateNode should be at offset 0x98");
		static_assert(offsetof(CS2::animgraphlib::CFootAdjustmentUpdateNode, m_flTurnTimeMax) == 0x9C, "m_flTurnTimeMax in CFootAdjustmentUpdateNode should be at offset 0x9C");
		static_assert(offsetof(CS2::animgraphlib::CFootAdjustmentUpdateNode, m_flStepHeightMax) == 0xA0, "m_flStepHeightMax in CFootAdjustmentUpdateNode should be at offset 0xA0");
		static_assert(offsetof(CS2::animgraphlib::CFootAdjustmentUpdateNode, m_flStepHeightMaxAngle) == 0xA4, "m_flStepHeightMaxAngle in CFootAdjustmentUpdateNode should be at offset 0xA4");
		static_assert(offsetof(CS2::animgraphlib::CFootAdjustmentUpdateNode, m_bResetChild) == 0xA8, "m_bResetChild in CFootAdjustmentUpdateNode should be at offset 0xA8");
		static_assert(offsetof(CS2::animgraphlib::CFootAdjustmentUpdateNode, m_bAnimationDriven) == 0xA9, "m_bAnimationDriven in CFootAdjustmentUpdateNode should be at offset 0xA9");
		static_assert(sizeof(CS2::animgraphlib::CFootAdjustmentUpdateNode) == 0xB0, "CFootAdjustmentUpdateNode size should be 0xB0");
	}
}
