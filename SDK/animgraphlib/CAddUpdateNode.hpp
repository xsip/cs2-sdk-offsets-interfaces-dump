// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/animgraphlib/CBinaryUpdateNode.hpp>
#include <SDK/animgraphlib/BinaryNodeChildOption.hpp>



namespace CS2 {
	namespace animgraphlib {
		class CAddUpdateNode : public CS2::animgraphlib::CBinaryUpdateNode {
		public:
			S2_PAD(0x4);
			animgraphlib::BinaryNodeChildOption m_footMotionTiming; // 0x94 | Schema_DeclaredEnum | Size: 0x4
			bool m_bApplyToFootMotion; // 0x98 | Schema_Builtin | Size: 0x1
			bool m_bApplyChannelsSeparately; // 0x99 | Schema_Builtin | Size: 0x1
			bool m_bUseModelSpace; // 0x9a | Schema_Builtin | Size: 0x1
			bool m_bApplyScale; // 0x9b | Schema_Builtin | Size: 0x1
			S2_PAD(0x4); // End padding
		};
		static_assert(offsetof(CS2::animgraphlib::CAddUpdateNode, m_footMotionTiming) == 0x94, "m_footMotionTiming in CAddUpdateNode should be at offset 0x94");
		static_assert(offsetof(CS2::animgraphlib::CAddUpdateNode, m_bApplyToFootMotion) == 0x98, "m_bApplyToFootMotion in CAddUpdateNode should be at offset 0x98");
		static_assert(offsetof(CS2::animgraphlib::CAddUpdateNode, m_bApplyChannelsSeparately) == 0x99, "m_bApplyChannelsSeparately in CAddUpdateNode should be at offset 0x99");
		static_assert(offsetof(CS2::animgraphlib::CAddUpdateNode, m_bUseModelSpace) == 0x9A, "m_bUseModelSpace in CAddUpdateNode should be at offset 0x9A");
		static_assert(offsetof(CS2::animgraphlib::CAddUpdateNode, m_bApplyScale) == 0x9B, "m_bApplyScale in CAddUpdateNode should be at offset 0x9B");
		static_assert(sizeof(CS2::animgraphlib::CAddUpdateNode) == 0xA0, "CAddUpdateNode size should be 0xA0");
	}
}
