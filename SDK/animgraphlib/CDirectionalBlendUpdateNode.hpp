// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/animgraphlib/CLeafUpdateNode.hpp>
#include <SDK/animationsystem/HSequence.hpp>
#include <SDK/animgraphlib/CAnimInputDamping.hpp>
#include <SDK/animgraphlib/AnimValueSource.hpp>
#include <SDK/animgraphlib/CAnimParamHandle.hpp>



namespace CS2 {
	namespace animgraphlib {
		class CDirectionalBlendUpdateNode : public CS2::animgraphlib::CLeafUpdateNode {
		public:
			S2_PAD(0x4);
			animationsystem::HSequence m_hSequences[8]; // 0x5c | Schema_FixedArray | Size: 0x100
			animgraphlib::CAnimInputDamping m_damping; // 0x80 | Schema_DeclaredClass | Size: 0x18
			animgraphlib::AnimValueSource m_blendValueSource; // 0x98 | Schema_DeclaredEnum | Size: 0x4
			animgraphlib::CAnimParamHandle m_paramIndex; // 0x9c | Schema_DeclaredClass | Size: 0x2
			S2_PAD(0x2);
			float32 m_playbackSpeed; // 0xa0 | Schema_Builtin | Size: 0x4
			float32 m_duration; // 0xa4 | Schema_Builtin | Size: 0x4
			bool m_bLoop; // 0xa8 | Schema_Builtin | Size: 0x1
			bool m_bLockBlendOnReset; // 0xa9 | Schema_Builtin | Size: 0x1
			S2_PAD(0x6); // End padding
		};
		static_assert(offsetof(CS2::animgraphlib::CDirectionalBlendUpdateNode, m_hSequences) == 0x5C, "m_hSequences in CDirectionalBlendUpdateNode should be at offset 0x5C");
		static_assert(offsetof(CS2::animgraphlib::CDirectionalBlendUpdateNode, m_damping) == 0x80, "m_damping in CDirectionalBlendUpdateNode should be at offset 0x80");
		static_assert(offsetof(CS2::animgraphlib::CDirectionalBlendUpdateNode, m_blendValueSource) == 0x98, "m_blendValueSource in CDirectionalBlendUpdateNode should be at offset 0x98");
		static_assert(offsetof(CS2::animgraphlib::CDirectionalBlendUpdateNode, m_paramIndex) == 0x9C, "m_paramIndex in CDirectionalBlendUpdateNode should be at offset 0x9C");
		static_assert(offsetof(CS2::animgraphlib::CDirectionalBlendUpdateNode, m_playbackSpeed) == 0xA0, "m_playbackSpeed in CDirectionalBlendUpdateNode should be at offset 0xA0");
		static_assert(offsetof(CS2::animgraphlib::CDirectionalBlendUpdateNode, m_duration) == 0xA4, "m_duration in CDirectionalBlendUpdateNode should be at offset 0xA4");
		static_assert(offsetof(CS2::animgraphlib::CDirectionalBlendUpdateNode, m_bLoop) == 0xA8, "m_bLoop in CDirectionalBlendUpdateNode should be at offset 0xA8");
		static_assert(offsetof(CS2::animgraphlib::CDirectionalBlendUpdateNode, m_bLockBlendOnReset) == 0xA9, "m_bLockBlendOnReset in CDirectionalBlendUpdateNode should be at offset 0xA9");
		static_assert(sizeof(CS2::animgraphlib::CDirectionalBlendUpdateNode) == 0xB0, "CDirectionalBlendUpdateNode size should be 0xB0");
	}
}
