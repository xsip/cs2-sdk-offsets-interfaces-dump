// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif





namespace CS2 {
	namespace animgraphlib {
		class CMotionMetricEvaluator  {
		public:
			S2_PAD(0x18);
			// GlobalTypes::CUtlVector< float32 > m_means; // 0x18 | Schema_Atomic | Size: 0x18
			char  m_means[0x18]; // 0x18 | Schema_Atomic | Size: 0x18
			// GlobalTypes::CUtlVector< float32 > m_standardDeviations; // 0x30 | Schema_Atomic | Size: 0x18
			char  m_standardDeviations[0x18]; // 0x30 | Schema_Atomic | Size: 0x18
			float32 m_flWeight; // 0x48 | Schema_Builtin | Size: 0x4
			int32_t m_nDimensionStartIndex; // 0x4c | Schema_Builtin | Size: 0x4
		};
		static_assert(offsetof(CS2::animgraphlib::CMotionMetricEvaluator, m_means) == 0x18, "m_means in CMotionMetricEvaluator should be at offset 0x18");
		static_assert(offsetof(CS2::animgraphlib::CMotionMetricEvaluator, m_standardDeviations) == 0x30, "m_standardDeviations in CMotionMetricEvaluator should be at offset 0x30");
		static_assert(offsetof(CS2::animgraphlib::CMotionMetricEvaluator, m_flWeight) == 0x48, "m_flWeight in CMotionMetricEvaluator should be at offset 0x48");
		static_assert(offsetof(CS2::animgraphlib::CMotionMetricEvaluator, m_nDimensionStartIndex) == 0x4C, "m_nDimensionStartIndex in CMotionMetricEvaluator should be at offset 0x4C");
		static_assert(sizeof(CS2::animgraphlib::CMotionMetricEvaluator) == 0x50, "CMotionMetricEvaluator size should be 0x50");
	}
}
