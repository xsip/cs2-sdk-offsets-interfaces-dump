// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/animgraphlib/CUnaryUpdateNode.hpp>
#include <SDK/animgraphlib/CAnimInputDamping.hpp>
#include <SDK/animgraphlib/AnimValueSource.hpp>
#include <SDK/animgraphlib/CAnimParamHandle.hpp>



namespace CS2 {
	namespace animgraphlib {
		class CFollowPathUpdateNode : public CS2::animgraphlib::CUnaryUpdateNode {
		public:
			S2_PAD(0x4);
			float32 m_flBlendOutTime; // 0x74 | Schema_Builtin | Size: 0x4
			bool m_bBlockNonPathMovement; // 0x78 | Schema_Builtin | Size: 0x1
			bool m_bStopFeetAtGoal; // 0x79 | Schema_Builtin | Size: 0x1
			bool m_bScaleSpeed; // 0x7a | Schema_Builtin | Size: 0x1
			S2_PAD(0x1);
			float32 m_flScale; // 0x7c | Schema_Builtin | Size: 0x4
			float32 m_flMinAngle; // 0x80 | Schema_Builtin | Size: 0x4
			float32 m_flMaxAngle; // 0x84 | Schema_Builtin | Size: 0x4
			float32 m_flSpeedScaleBlending; // 0x88 | Schema_Builtin | Size: 0x4
			S2_PAD(0x4);
			animgraphlib::CAnimInputDamping m_turnDamping; // 0x90 | Schema_DeclaredClass | Size: 0x18
			animgraphlib::AnimValueSource m_facingTarget; // 0xa8 | Schema_DeclaredEnum | Size: 0x4
			animgraphlib::CAnimParamHandle m_hParam; // 0xac | Schema_DeclaredClass | Size: 0x2
			S2_PAD(0x2);
			float32 m_flTurnToFaceOffset; // 0xb0 | Schema_Builtin | Size: 0x4
			bool m_bTurnToFace; // 0xb4 | Schema_Builtin | Size: 0x1
			S2_PAD(0x3); // End padding
		};
		static_assert(offsetof(CS2::animgraphlib::CFollowPathUpdateNode, m_flBlendOutTime) == 0x74, "m_flBlendOutTime in CFollowPathUpdateNode should be at offset 0x74");
		static_assert(offsetof(CS2::animgraphlib::CFollowPathUpdateNode, m_bBlockNonPathMovement) == 0x78, "m_bBlockNonPathMovement in CFollowPathUpdateNode should be at offset 0x78");
		static_assert(offsetof(CS2::animgraphlib::CFollowPathUpdateNode, m_bStopFeetAtGoal) == 0x79, "m_bStopFeetAtGoal in CFollowPathUpdateNode should be at offset 0x79");
		static_assert(offsetof(CS2::animgraphlib::CFollowPathUpdateNode, m_bScaleSpeed) == 0x7A, "m_bScaleSpeed in CFollowPathUpdateNode should be at offset 0x7A");
		static_assert(offsetof(CS2::animgraphlib::CFollowPathUpdateNode, m_flScale) == 0x7C, "m_flScale in CFollowPathUpdateNode should be at offset 0x7C");
		static_assert(offsetof(CS2::animgraphlib::CFollowPathUpdateNode, m_flMinAngle) == 0x80, "m_flMinAngle in CFollowPathUpdateNode should be at offset 0x80");
		static_assert(offsetof(CS2::animgraphlib::CFollowPathUpdateNode, m_flMaxAngle) == 0x84, "m_flMaxAngle in CFollowPathUpdateNode should be at offset 0x84");
		static_assert(offsetof(CS2::animgraphlib::CFollowPathUpdateNode, m_flSpeedScaleBlending) == 0x88, "m_flSpeedScaleBlending in CFollowPathUpdateNode should be at offset 0x88");
		static_assert(offsetof(CS2::animgraphlib::CFollowPathUpdateNode, m_turnDamping) == 0x90, "m_turnDamping in CFollowPathUpdateNode should be at offset 0x90");
		static_assert(offsetof(CS2::animgraphlib::CFollowPathUpdateNode, m_facingTarget) == 0xA8, "m_facingTarget in CFollowPathUpdateNode should be at offset 0xA8");
		static_assert(offsetof(CS2::animgraphlib::CFollowPathUpdateNode, m_hParam) == 0xAC, "m_hParam in CFollowPathUpdateNode should be at offset 0xAC");
		static_assert(offsetof(CS2::animgraphlib::CFollowPathUpdateNode, m_flTurnToFaceOffset) == 0xB0, "m_flTurnToFaceOffset in CFollowPathUpdateNode should be at offset 0xB0");
		static_assert(offsetof(CS2::animgraphlib::CFollowPathUpdateNode, m_bTurnToFace) == 0xB4, "m_bTurnToFace in CFollowPathUpdateNode should be at offset 0xB4");
		static_assert(sizeof(CS2::animgraphlib::CFollowPathUpdateNode) == 0xB8, "CFollowPathUpdateNode size should be 0xB8");
	}
}
