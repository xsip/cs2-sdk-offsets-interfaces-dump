// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/animgraphlib/CUnaryUpdateNode.hpp>
#include <SDK/animgraphlib/FootLockPoseOpFixedSettings.hpp>
#include <SDK/animgraphlib/CAnimInputDamping.hpp>



namespace CS2 {
	namespace animgraphlib {
		class FootFixedSettings;
	}
}


using namespace GlobalTypes;
namespace CS2 {
	namespace animgraphlib {
		class CFootLockUpdateNode : public CS2::animgraphlib::CUnaryUpdateNode {
		public:
			animgraphlib::FootLockPoseOpFixedSettings m_opFixedSettings; // 0x70 | Schema_DeclaredClass | Size: 0x68
			S2_PAD(0x8);
			GlobalTypes::CUtlVector< animgraphlib::FootFixedSettings > m_footSettings; // 0xe0 | Schema_Atomic | Size: 0x18
			// char  m_footSettings[0x18]; // 0xe0 | Schema_Atomic | Size: 0x18
			animgraphlib::CAnimInputDamping m_hipShiftDamping; // 0xf8 | Schema_DeclaredClass | Size: 0x18
			animgraphlib::CAnimInputDamping m_rootHeightDamping; // 0x110 | Schema_DeclaredClass | Size: 0x18
			float32 m_flStrideCurveScale; // 0x128 | Schema_Builtin | Size: 0x4
			float32 m_flStrideCurveLimitScale; // 0x12c | Schema_Builtin | Size: 0x4
			float32 m_flStepHeightIncreaseScale; // 0x130 | Schema_Builtin | Size: 0x4
			float32 m_flStepHeightDecreaseScale; // 0x134 | Schema_Builtin | Size: 0x4
			float32 m_flHipShiftScale; // 0x138 | Schema_Builtin | Size: 0x4
			float32 m_flBlendTime; // 0x13c | Schema_Builtin | Size: 0x4
			float32 m_flMaxRootHeightOffset; // 0x140 | Schema_Builtin | Size: 0x4
			float32 m_flMinRootHeightOffset; // 0x144 | Schema_Builtin | Size: 0x4
			float32 m_flTiltPlanePitchSpringStrength; // 0x148 | Schema_Builtin | Size: 0x4
			float32 m_flTiltPlaneRollSpringStrength; // 0x14c | Schema_Builtin | Size: 0x4
			bool m_bApplyFootRotationLimits; // 0x150 | Schema_Builtin | Size: 0x1
			bool m_bApplyHipShift; // 0x151 | Schema_Builtin | Size: 0x1
			bool m_bModulateStepHeight; // 0x152 | Schema_Builtin | Size: 0x1
			bool m_bResetChild; // 0x153 | Schema_Builtin | Size: 0x1
			bool m_bEnableVerticalCurvedPaths; // 0x154 | Schema_Builtin | Size: 0x1
			bool m_bEnableRootHeightDamping; // 0x155 | Schema_Builtin | Size: 0x1
			S2_PAD(0x2); // End padding
		};
		static_assert(offsetof(CS2::animgraphlib::CFootLockUpdateNode, m_opFixedSettings) == 0x70, "m_opFixedSettings in CFootLockUpdateNode should be at offset 0x70");
		static_assert(offsetof(CS2::animgraphlib::CFootLockUpdateNode, m_footSettings) == 0xE0, "m_footSettings in CFootLockUpdateNode should be at offset 0xE0");
		static_assert(offsetof(CS2::animgraphlib::CFootLockUpdateNode, m_hipShiftDamping) == 0xF8, "m_hipShiftDamping in CFootLockUpdateNode should be at offset 0xF8");
		static_assert(offsetof(CS2::animgraphlib::CFootLockUpdateNode, m_rootHeightDamping) == 0x110, "m_rootHeightDamping in CFootLockUpdateNode should be at offset 0x110");
		static_assert(offsetof(CS2::animgraphlib::CFootLockUpdateNode, m_flStrideCurveScale) == 0x128, "m_flStrideCurveScale in CFootLockUpdateNode should be at offset 0x128");
		static_assert(offsetof(CS2::animgraphlib::CFootLockUpdateNode, m_flStrideCurveLimitScale) == 0x12C, "m_flStrideCurveLimitScale in CFootLockUpdateNode should be at offset 0x12C");
		static_assert(offsetof(CS2::animgraphlib::CFootLockUpdateNode, m_flStepHeightIncreaseScale) == 0x130, "m_flStepHeightIncreaseScale in CFootLockUpdateNode should be at offset 0x130");
		static_assert(offsetof(CS2::animgraphlib::CFootLockUpdateNode, m_flStepHeightDecreaseScale) == 0x134, "m_flStepHeightDecreaseScale in CFootLockUpdateNode should be at offset 0x134");
		static_assert(offsetof(CS2::animgraphlib::CFootLockUpdateNode, m_flHipShiftScale) == 0x138, "m_flHipShiftScale in CFootLockUpdateNode should be at offset 0x138");
		static_assert(offsetof(CS2::animgraphlib::CFootLockUpdateNode, m_flBlendTime) == 0x13C, "m_flBlendTime in CFootLockUpdateNode should be at offset 0x13C");
		static_assert(offsetof(CS2::animgraphlib::CFootLockUpdateNode, m_flMaxRootHeightOffset) == 0x140, "m_flMaxRootHeightOffset in CFootLockUpdateNode should be at offset 0x140");
		static_assert(offsetof(CS2::animgraphlib::CFootLockUpdateNode, m_flMinRootHeightOffset) == 0x144, "m_flMinRootHeightOffset in CFootLockUpdateNode should be at offset 0x144");
		static_assert(offsetof(CS2::animgraphlib::CFootLockUpdateNode, m_flTiltPlanePitchSpringStrength) == 0x148, "m_flTiltPlanePitchSpringStrength in CFootLockUpdateNode should be at offset 0x148");
		static_assert(offsetof(CS2::animgraphlib::CFootLockUpdateNode, m_flTiltPlaneRollSpringStrength) == 0x14C, "m_flTiltPlaneRollSpringStrength in CFootLockUpdateNode should be at offset 0x14C");
		static_assert(offsetof(CS2::animgraphlib::CFootLockUpdateNode, m_bApplyFootRotationLimits) == 0x150, "m_bApplyFootRotationLimits in CFootLockUpdateNode should be at offset 0x150");
		static_assert(offsetof(CS2::animgraphlib::CFootLockUpdateNode, m_bApplyHipShift) == 0x151, "m_bApplyHipShift in CFootLockUpdateNode should be at offset 0x151");
		static_assert(offsetof(CS2::animgraphlib::CFootLockUpdateNode, m_bModulateStepHeight) == 0x152, "m_bModulateStepHeight in CFootLockUpdateNode should be at offset 0x152");
		static_assert(offsetof(CS2::animgraphlib::CFootLockUpdateNode, m_bResetChild) == 0x153, "m_bResetChild in CFootLockUpdateNode should be at offset 0x153");
		static_assert(offsetof(CS2::animgraphlib::CFootLockUpdateNode, m_bEnableVerticalCurvedPaths) == 0x154, "m_bEnableVerticalCurvedPaths in CFootLockUpdateNode should be at offset 0x154");
		static_assert(offsetof(CS2::animgraphlib::CFootLockUpdateNode, m_bEnableRootHeightDamping) == 0x155, "m_bEnableRootHeightDamping in CFootLockUpdateNode should be at offset 0x155");
		static_assert(sizeof(CS2::animgraphlib::CFootLockUpdateNode) == 0x158, "CFootLockUpdateNode size should be 0x158");
	}
}
