// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/animgraphlib/CUnaryUpdateNode.hpp>
#include <SDK/animgraphlib/SolveIKChainPoseOpFixedSettings_t.hpp>



namespace CS2 {
	namespace animgraphlib {
		class CSolveIKTargetHandle_t;
	}
}


using namespace GlobalTypes;
namespace CS2 {
	namespace animgraphlib {
		class CSolveIKChainUpdateNode : public CS2::animgraphlib::CUnaryUpdateNode {
		public:
			GlobalTypes::CUtlVector<animgraphlib::CSolveIKTargetHandle_t> m_targetHandles; // 0x70 | Schema_Atomic | Size: 0x18
			// char  m_targetHandles[0x18]; // 0x70 | Schema_Atomic | Size: 0x18
			animgraphlib::SolveIKChainPoseOpFixedSettings_t m_opFixedData; // 0x88 | Schema_DeclaredClass | Size: 0x18
			S2_PAD(0x8); // End padding
		};
		static_assert(offsetof(CS2::animgraphlib::CSolveIKChainUpdateNode, m_targetHandles) == 0x70, "m_targetHandles in CSolveIKChainUpdateNode should be at offset 0x70");
		static_assert(offsetof(CS2::animgraphlib::CSolveIKChainUpdateNode, m_opFixedData) == 0x88, "m_opFixedData in CSolveIKChainUpdateNode should be at offset 0x88");
		static_assert(sizeof(CS2::animgraphlib::CSolveIKChainUpdateNode) == 0xA8, "CSolveIKChainUpdateNode size should be 0xA8");
	}
}
