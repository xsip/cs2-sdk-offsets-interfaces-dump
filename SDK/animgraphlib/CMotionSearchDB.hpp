// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/animgraphlib/CMotionSearchNode.hpp>
#include <SDK/animgraphlib/CProductQuantizer.hpp>



namespace CS2 {
	namespace animgraphlib {
		class MotionDBIndex;
	}
}


using namespace GlobalTypes;
namespace CS2 {
	namespace animgraphlib {
		class CMotionSearchDB  {
		public:
			animgraphlib::CMotionSearchNode m_rootNode; // 0x0 | Schema_DeclaredClass | Size: 0x80
			animgraphlib::CProductQuantizer m_residualQuantizer; // 0x80 | Schema_DeclaredClass | Size: 0x20
			GlobalTypes::CUtlVector< animgraphlib::MotionDBIndex > m_codeIndices; // 0xa0 | Schema_Atomic | Size: 0x18
			// char  m_codeIndices[0x18]; // 0xa0 | Schema_Atomic | Size: 0x18
		};
		static_assert(offsetof(CS2::animgraphlib::CMotionSearchDB, m_rootNode) == 0x0, "m_rootNode in CMotionSearchDB should be at offset 0x0");
		static_assert(offsetof(CS2::animgraphlib::CMotionSearchDB, m_residualQuantizer) == 0x80, "m_residualQuantizer in CMotionSearchDB should be at offset 0x80");
		static_assert(offsetof(CS2::animgraphlib::CMotionSearchDB, m_codeIndices) == 0xA0, "m_codeIndices in CMotionSearchDB should be at offset 0xA0");
		static_assert(sizeof(CS2::animgraphlib::CMotionSearchDB) == 0xB8, "CMotionSearchDB size should be 0xB8");
	}
}
