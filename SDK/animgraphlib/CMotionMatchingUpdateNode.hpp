// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/animgraphlib/CLeafUpdateNode.hpp>
#include <SDK/animgraphlib/CMotionDataSet.hpp>
#include <SDK/animgraphlib/CBlendCurve.hpp>
#include <SDK/animgraphlib/CAnimInputDamping.hpp>





using namespace GlobalTypes;
namespace CS2 {
	namespace animgraphlib {
		class CMotionMatchingUpdateNode : public CS2::animgraphlib::CLeafUpdateNode {
		public:
			animgraphlib::CMotionDataSet m_dataSet; // 0x58 | Schema_DeclaredClass | Size: 0x20
			GlobalTypes::CUtlVector< GlobalTypes::CSmartPtr< CMotionMetricEvaluator > > m_metrics; // 0x78 | Schema_Atomic | Size: 0x18
			// char  m_metrics[0x18]; // 0x78 | Schema_Atomic | Size: 0x18
			GlobalTypes::CUtlVector< float32 > m_weights; // 0x90 | Schema_Atomic | Size: 0x18
			// char  m_weights[0x18]; // 0x90 | Schema_Atomic | Size: 0x18
			S2_PAD(0x38);
			bool m_bSearchEveryTick; // 0xe0 | Schema_Builtin | Size: 0x1
			S2_PAD(0x3);
			float32 m_flSearchInterval; // 0xe4 | Schema_Builtin | Size: 0x4
			bool m_bSearchWhenClipEnds; // 0xe8 | Schema_Builtin | Size: 0x1
			bool m_bSearchWhenGoalChanges; // 0xe9 | Schema_Builtin | Size: 0x1
			S2_PAD(0x2);
			animgraphlib::CBlendCurve m_blendCurve; // 0xec | Schema_DeclaredClass | Size: 0x8
			float32 m_flSampleRate; // 0xf4 | Schema_Builtin | Size: 0x4
			float32 m_flBlendTime; // 0xf8 | Schema_Builtin | Size: 0x4
			bool m_bLockClipWhenWaning; // 0xfc | Schema_Builtin | Size: 0x1
			S2_PAD(0x3);
			float32 m_flSelectionThreshold; // 0x100 | Schema_Builtin | Size: 0x4
			float32 m_flReselectionTimeWindow; // 0x104 | Schema_Builtin | Size: 0x4
			bool m_bEnableRotationCorrection; // 0x108 | Schema_Builtin | Size: 0x1
			bool m_bGoalAssist; // 0x109 | Schema_Builtin | Size: 0x1
			S2_PAD(0x2);
			float32 m_flGoalAssistDistance; // 0x10c | Schema_Builtin | Size: 0x4
			float32 m_flGoalAssistTolerance; // 0x110 | Schema_Builtin | Size: 0x4
			S2_PAD(0x4);
			animgraphlib::CAnimInputDamping m_distanceScale_Damping; // 0x118 | Schema_DeclaredClass | Size: 0x18
			float32 m_flDistanceScale_OuterRadius; // 0x130 | Schema_Builtin | Size: 0x4
			float32 m_flDistanceScale_InnerRadius; // 0x134 | Schema_Builtin | Size: 0x4
			float32 m_flDistanceScale_MaxScale; // 0x138 | Schema_Builtin | Size: 0x4
			float32 m_flDistanceScale_MinScale; // 0x13c | Schema_Builtin | Size: 0x4
			bool m_bEnableDistanceScaling; // 0x140 | Schema_Builtin | Size: 0x1
			S2_PAD(0x7); // End padding
		};
		static_assert(offsetof(CS2::animgraphlib::CMotionMatchingUpdateNode, m_dataSet) == 0x58, "m_dataSet in CMotionMatchingUpdateNode should be at offset 0x58");
		static_assert(offsetof(CS2::animgraphlib::CMotionMatchingUpdateNode, m_metrics) == 0x78, "m_metrics in CMotionMatchingUpdateNode should be at offset 0x78");
		static_assert(offsetof(CS2::animgraphlib::CMotionMatchingUpdateNode, m_weights) == 0x90, "m_weights in CMotionMatchingUpdateNode should be at offset 0x90");
		static_assert(offsetof(CS2::animgraphlib::CMotionMatchingUpdateNode, m_bSearchEveryTick) == 0xE0, "m_bSearchEveryTick in CMotionMatchingUpdateNode should be at offset 0xE0");
		static_assert(offsetof(CS2::animgraphlib::CMotionMatchingUpdateNode, m_flSearchInterval) == 0xE4, "m_flSearchInterval in CMotionMatchingUpdateNode should be at offset 0xE4");
		static_assert(offsetof(CS2::animgraphlib::CMotionMatchingUpdateNode, m_bSearchWhenClipEnds) == 0xE8, "m_bSearchWhenClipEnds in CMotionMatchingUpdateNode should be at offset 0xE8");
		static_assert(offsetof(CS2::animgraphlib::CMotionMatchingUpdateNode, m_bSearchWhenGoalChanges) == 0xE9, "m_bSearchWhenGoalChanges in CMotionMatchingUpdateNode should be at offset 0xE9");
		static_assert(offsetof(CS2::animgraphlib::CMotionMatchingUpdateNode, m_blendCurve) == 0xEC, "m_blendCurve in CMotionMatchingUpdateNode should be at offset 0xEC");
		static_assert(offsetof(CS2::animgraphlib::CMotionMatchingUpdateNode, m_flSampleRate) == 0xF4, "m_flSampleRate in CMotionMatchingUpdateNode should be at offset 0xF4");
		static_assert(offsetof(CS2::animgraphlib::CMotionMatchingUpdateNode, m_flBlendTime) == 0xF8, "m_flBlendTime in CMotionMatchingUpdateNode should be at offset 0xF8");
		static_assert(offsetof(CS2::animgraphlib::CMotionMatchingUpdateNode, m_bLockClipWhenWaning) == 0xFC, "m_bLockClipWhenWaning in CMotionMatchingUpdateNode should be at offset 0xFC");
		static_assert(offsetof(CS2::animgraphlib::CMotionMatchingUpdateNode, m_flSelectionThreshold) == 0x100, "m_flSelectionThreshold in CMotionMatchingUpdateNode should be at offset 0x100");
		static_assert(offsetof(CS2::animgraphlib::CMotionMatchingUpdateNode, m_flReselectionTimeWindow) == 0x104, "m_flReselectionTimeWindow in CMotionMatchingUpdateNode should be at offset 0x104");
		static_assert(offsetof(CS2::animgraphlib::CMotionMatchingUpdateNode, m_bEnableRotationCorrection) == 0x108, "m_bEnableRotationCorrection in CMotionMatchingUpdateNode should be at offset 0x108");
		static_assert(offsetof(CS2::animgraphlib::CMotionMatchingUpdateNode, m_bGoalAssist) == 0x109, "m_bGoalAssist in CMotionMatchingUpdateNode should be at offset 0x109");
		static_assert(offsetof(CS2::animgraphlib::CMotionMatchingUpdateNode, m_flGoalAssistDistance) == 0x10C, "m_flGoalAssistDistance in CMotionMatchingUpdateNode should be at offset 0x10C");
		static_assert(offsetof(CS2::animgraphlib::CMotionMatchingUpdateNode, m_flGoalAssistTolerance) == 0x110, "m_flGoalAssistTolerance in CMotionMatchingUpdateNode should be at offset 0x110");
		static_assert(offsetof(CS2::animgraphlib::CMotionMatchingUpdateNode, m_distanceScale_Damping) == 0x118, "m_distanceScale_Damping in CMotionMatchingUpdateNode should be at offset 0x118");
		static_assert(offsetof(CS2::animgraphlib::CMotionMatchingUpdateNode, m_flDistanceScale_OuterRadius) == 0x130, "m_flDistanceScale_OuterRadius in CMotionMatchingUpdateNode should be at offset 0x130");
		static_assert(offsetof(CS2::animgraphlib::CMotionMatchingUpdateNode, m_flDistanceScale_InnerRadius) == 0x134, "m_flDistanceScale_InnerRadius in CMotionMatchingUpdateNode should be at offset 0x134");
		static_assert(offsetof(CS2::animgraphlib::CMotionMatchingUpdateNode, m_flDistanceScale_MaxScale) == 0x138, "m_flDistanceScale_MaxScale in CMotionMatchingUpdateNode should be at offset 0x138");
		static_assert(offsetof(CS2::animgraphlib::CMotionMatchingUpdateNode, m_flDistanceScale_MinScale) == 0x13C, "m_flDistanceScale_MinScale in CMotionMatchingUpdateNode should be at offset 0x13C");
		static_assert(offsetof(CS2::animgraphlib::CMotionMatchingUpdateNode, m_bEnableDistanceScaling) == 0x140, "m_bEnableDistanceScaling in CMotionMatchingUpdateNode should be at offset 0x140");
		static_assert(sizeof(CS2::animgraphlib::CMotionMatchingUpdateNode) == 0x148, "CMotionMatchingUpdateNode size should be 0x148");
	}
}
