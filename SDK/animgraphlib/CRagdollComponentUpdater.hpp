// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <SDK/GlobalTypes.hpp>

#include <SDK/animgraphlib/CAnimComponentUpdater.hpp>



namespace CS2 {
	namespace animgraphlib {
		class CRagdollComponentUpdater : public CS2::animgraphlib::CAnimComponentUpdater {
		public:
			// GlobalTypes::CUtlVector< animgraphlib::CAnimNodePath > m_ragdollNodePaths; // 0x30 | Schema_Atomic | Size: 0x18
			char  m_ragdollNodePaths[0x18]; // 0x30 | Schema_Atomic | Size: 0x18
			// GlobalTypes::CUtlVector< animgraphlib::CAnimNodePath > m_followAttachmentNodePaths; // 0x48 | Schema_Atomic | Size: 0x18
			char  m_followAttachmentNodePaths[0x18]; // 0x48 | Schema_Atomic | Size: 0x18
			// GlobalTypes::CUtlVector< int32 > m_boneIndices; // 0x60 | Schema_Atomic | Size: 0x18
			char  m_boneIndices[0x18]; // 0x60 | Schema_Atomic | Size: 0x18
			// GlobalTypes::CUtlVector< GlobalTypes::CUtlString > m_boneNames; // 0x78 | Schema_Atomic | Size: 0x18
			char  m_boneNames[0x18]; // 0x78 | Schema_Atomic | Size: 0x18
			// GlobalTypes::CUtlVector< animgraphlib::WeightList > m_weightLists; // 0x90 | Schema_Atomic | Size: 0x18
			char  m_weightLists[0x18]; // 0x90 | Schema_Atomic | Size: 0x18
			// GlobalTypes::CUtlVector< int32 > m_boneToWeightIndices; // 0xa8 | Schema_Atomic | Size: 0x18
			char  m_boneToWeightIndices[0x18]; // 0xa8 | Schema_Atomic | Size: 0x18
			float32 m_flSpringFrequencyMin; // 0xc0 | Schema_Builtin | Size: 0x4
			float32 m_flSpringFrequencyMax; // 0xc4 | Schema_Builtin | Size: 0x4
			float32 m_flMaxStretch; // 0xc8 | Schema_Builtin | Size: 0x4
			bool m_bSolidCollisionAtZeroWeight; // 0xcc | Schema_Builtin | Size: 0x1
			S2_PAD(0xb); // End padding
		};
		static_assert(offsetof(CS2::animgraphlib::CRagdollComponentUpdater, m_ragdollNodePaths) == 0x30, "m_ragdollNodePaths in CRagdollComponentUpdater should be at offset 0x30");
		static_assert(offsetof(CS2::animgraphlib::CRagdollComponentUpdater, m_followAttachmentNodePaths) == 0x48, "m_followAttachmentNodePaths in CRagdollComponentUpdater should be at offset 0x48");
		static_assert(offsetof(CS2::animgraphlib::CRagdollComponentUpdater, m_boneIndices) == 0x60, "m_boneIndices in CRagdollComponentUpdater should be at offset 0x60");
		static_assert(offsetof(CS2::animgraphlib::CRagdollComponentUpdater, m_boneNames) == 0x78, "m_boneNames in CRagdollComponentUpdater should be at offset 0x78");
		static_assert(offsetof(CS2::animgraphlib::CRagdollComponentUpdater, m_weightLists) == 0x90, "m_weightLists in CRagdollComponentUpdater should be at offset 0x90");
		static_assert(offsetof(CS2::animgraphlib::CRagdollComponentUpdater, m_boneToWeightIndices) == 0xA8, "m_boneToWeightIndices in CRagdollComponentUpdater should be at offset 0xA8");
		static_assert(offsetof(CS2::animgraphlib::CRagdollComponentUpdater, m_flSpringFrequencyMin) == 0xC0, "m_flSpringFrequencyMin in CRagdollComponentUpdater should be at offset 0xC0");
		static_assert(offsetof(CS2::animgraphlib::CRagdollComponentUpdater, m_flSpringFrequencyMax) == 0xC4, "m_flSpringFrequencyMax in CRagdollComponentUpdater should be at offset 0xC4");
		static_assert(offsetof(CS2::animgraphlib::CRagdollComponentUpdater, m_flMaxStretch) == 0xC8, "m_flMaxStretch in CRagdollComponentUpdater should be at offset 0xC8");
		static_assert(offsetof(CS2::animgraphlib::CRagdollComponentUpdater, m_bSolidCollisionAtZeroWeight) == 0xCC, "m_bSolidCollisionAtZeroWeight in CRagdollComponentUpdater should be at offset 0xCC");
		static_assert(sizeof(CS2::animgraphlib::CRagdollComponentUpdater) == 0xD8, "CRagdollComponentUpdater size should be 0xD8");
	}
}
