// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/animgraphlib/CAnimInputDamping.hpp>
#include <SDK/animgraphlib/IKSolverType.hpp>



namespace CS2 {
	namespace animgraphlib {
		class FootFixedData_t;
	}
}
namespace CS2 {
	namespace animgraphlib {
		class FootLockPoseOpFixedSettings  {
		public:
			GlobalTypes::CUtlVector< animgraphlib::FootFixedData_t > m_footInfo; // 0x0 | Schema_Atomic | Size: 0x18
			// char  m_footInfo[0x18]; // 0x0 | Schema_Atomic | Size: 0x18
			// GlobalTypes::CUtlVector< animgraphlib::FootFixedData_t > m_footInfo; // 0x0 | Schema_Atomic | Size: 0x18
			animgraphlib::CAnimInputDamping m_hipDampingSettings; // 0x18 | Schema_DeclaredClass | Size: 0x18
			int32_t m_nHipBoneIndex; // 0x30 | Schema_Builtin | Size: 0x4
			animgraphlib::IKSolverType m_ikSolverType; // 0x34 | Schema_DeclaredEnum | Size: 0x4
			bool m_bApplyTilt; // 0x38 | Schema_Builtin | Size: 0x1
			bool m_bApplyHipDrop; // 0x39 | Schema_Builtin | Size: 0x1
			bool m_bAlwaysUseFallbackHinge; // 0x3a | Schema_Builtin | Size: 0x1
			bool m_bApplyFootRotationLimits; // 0x3b | Schema_Builtin | Size: 0x1
			bool m_bApplyLegTwistLimits; // 0x3c | Schema_Builtin | Size: 0x1
			S2_PAD(0x3);
			float32 m_flMaxFootHeight; // 0x40 | Schema_Builtin | Size: 0x4
			float32 m_flExtensionScale; // 0x44 | Schema_Builtin | Size: 0x4
			float32 m_flMaxLegTwist; // 0x48 | Schema_Builtin | Size: 0x4
			bool m_bEnableLockBreaking; // 0x4c | Schema_Builtin | Size: 0x1
			S2_PAD(0x3);
			float32 m_flLockBreakTolerance; // 0x50 | Schema_Builtin | Size: 0x4
			float32 m_flLockBlendTime; // 0x54 | Schema_Builtin | Size: 0x4
			bool m_bEnableStretching; // 0x58 | Schema_Builtin | Size: 0x1
			S2_PAD(0x3);
			float32 m_flMaxStretchAmount; // 0x5c | Schema_Builtin | Size: 0x4
			float32 m_flStretchExtensionScale; // 0x60 | Schema_Builtin | Size: 0x4
			S2_PAD(0x4); // End padding
		};
		static_assert(offsetof(CS2::animgraphlib::FootLockPoseOpFixedSettings, m_footInfo) == 0x0, "m_footInfo in FootLockPoseOpFixedSettings should be at offset 0x0");
		static_assert(offsetof(CS2::animgraphlib::FootLockPoseOpFixedSettings, m_hipDampingSettings) == 0x18, "m_hipDampingSettings in FootLockPoseOpFixedSettings should be at offset 0x18");
		static_assert(offsetof(CS2::animgraphlib::FootLockPoseOpFixedSettings, m_nHipBoneIndex) == 0x30, "m_nHipBoneIndex in FootLockPoseOpFixedSettings should be at offset 0x30");
		static_assert(offsetof(CS2::animgraphlib::FootLockPoseOpFixedSettings, m_ikSolverType) == 0x34, "m_ikSolverType in FootLockPoseOpFixedSettings should be at offset 0x34");
		static_assert(offsetof(CS2::animgraphlib::FootLockPoseOpFixedSettings, m_bApplyTilt) == 0x38, "m_bApplyTilt in FootLockPoseOpFixedSettings should be at offset 0x38");
		static_assert(offsetof(CS2::animgraphlib::FootLockPoseOpFixedSettings, m_bApplyHipDrop) == 0x39, "m_bApplyHipDrop in FootLockPoseOpFixedSettings should be at offset 0x39");
		static_assert(offsetof(CS2::animgraphlib::FootLockPoseOpFixedSettings, m_bAlwaysUseFallbackHinge) == 0x3A, "m_bAlwaysUseFallbackHinge in FootLockPoseOpFixedSettings should be at offset 0x3A");
		static_assert(offsetof(CS2::animgraphlib::FootLockPoseOpFixedSettings, m_bApplyFootRotationLimits) == 0x3B, "m_bApplyFootRotationLimits in FootLockPoseOpFixedSettings should be at offset 0x3B");
		static_assert(offsetof(CS2::animgraphlib::FootLockPoseOpFixedSettings, m_bApplyLegTwistLimits) == 0x3C, "m_bApplyLegTwistLimits in FootLockPoseOpFixedSettings should be at offset 0x3C");
		static_assert(offsetof(CS2::animgraphlib::FootLockPoseOpFixedSettings, m_flMaxFootHeight) == 0x40, "m_flMaxFootHeight in FootLockPoseOpFixedSettings should be at offset 0x40");
		static_assert(offsetof(CS2::animgraphlib::FootLockPoseOpFixedSettings, m_flExtensionScale) == 0x44, "m_flExtensionScale in FootLockPoseOpFixedSettings should be at offset 0x44");
		static_assert(offsetof(CS2::animgraphlib::FootLockPoseOpFixedSettings, m_flMaxLegTwist) == 0x48, "m_flMaxLegTwist in FootLockPoseOpFixedSettings should be at offset 0x48");
		static_assert(offsetof(CS2::animgraphlib::FootLockPoseOpFixedSettings, m_bEnableLockBreaking) == 0x4C, "m_bEnableLockBreaking in FootLockPoseOpFixedSettings should be at offset 0x4C");
		static_assert(offsetof(CS2::animgraphlib::FootLockPoseOpFixedSettings, m_flLockBreakTolerance) == 0x50, "m_flLockBreakTolerance in FootLockPoseOpFixedSettings should be at offset 0x50");
		static_assert(offsetof(CS2::animgraphlib::FootLockPoseOpFixedSettings, m_flLockBlendTime) == 0x54, "m_flLockBlendTime in FootLockPoseOpFixedSettings should be at offset 0x54");
		static_assert(offsetof(CS2::animgraphlib::FootLockPoseOpFixedSettings, m_bEnableStretching) == 0x58, "m_bEnableStretching in FootLockPoseOpFixedSettings should be at offset 0x58");
		static_assert(offsetof(CS2::animgraphlib::FootLockPoseOpFixedSettings, m_flMaxStretchAmount) == 0x5C, "m_flMaxStretchAmount in FootLockPoseOpFixedSettings should be at offset 0x5C");
		static_assert(offsetof(CS2::animgraphlib::FootLockPoseOpFixedSettings, m_flStretchExtensionScale) == 0x60, "m_flStretchExtensionScale in FootLockPoseOpFixedSettings should be at offset 0x60");
		static_assert(sizeof(CS2::animgraphlib::FootLockPoseOpFixedSettings) == 0x68, "FootLockPoseOpFixedSettings size should be 0x68");
	}
}
