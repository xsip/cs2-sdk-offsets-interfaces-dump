// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/animgraphlib/CAnimUpdateNodeBase.hpp>
#include <SDK/animgraphlib/CAnimStateMachineUpdater.hpp>



namespace CS2 {
	namespace animgraphlib {
		class CStateNodeStateData;
		class CStateNodeTransitionData;
	}
}
namespace CS2 {
	namespace animgraphlib {
		class CStateMachineUpdateNode : public CS2::animgraphlib::CAnimUpdateNodeBase {
		public:
			S2_PAD(0x18);
			animgraphlib::CAnimStateMachineUpdater m_stateMachine; // 0x70 | Schema_DeclaredClass | Size: 0x58
			GlobalTypes::CUtlVector< animgraphlib::CStateNodeStateData > m_stateData; // 0xc8 | Schema_Atomic | Size: 0x18
			// char  m_stateData[0x18]; // 0xc8 | Schema_Atomic | Size: 0x18
			// GlobalTypes::CUtlVector< animgraphlib::CStateNodeStateData > m_stateData; // 0xc8 | Schema_Atomic | Size: 0x18
			GlobalTypes::CUtlVector< animgraphlib::CStateNodeTransitionData > m_transitionData; // 0xe0 | Schema_Atomic | Size: 0x18
			// char  m_transitionData[0x18]; // 0xe0 | Schema_Atomic | Size: 0x18
			// GlobalTypes::CUtlVector< animgraphlib::CStateNodeTransitionData > m_transitionData; // 0xe0 | Schema_Atomic | Size: 0x18
			S2_PAD(0x4);
			bool m_bBlockWaningTags; // 0xfc | Schema_Builtin | Size: 0x1
			bool m_bLockStateWhenWaning; // 0xfd | Schema_Builtin | Size: 0x1
			bool m_bResetWhenActivated; // 0xfe | Schema_Builtin | Size: 0x1
			S2_PAD(0x1); // End padding
		};
		static_assert(offsetof(CS2::animgraphlib::CStateMachineUpdateNode, m_stateMachine) == 0x70, "m_stateMachine in CStateMachineUpdateNode should be at offset 0x70");
		static_assert(offsetof(CS2::animgraphlib::CStateMachineUpdateNode, m_stateData) == 0xC8, "m_stateData in CStateMachineUpdateNode should be at offset 0xC8");
		static_assert(offsetof(CS2::animgraphlib::CStateMachineUpdateNode, m_transitionData) == 0xE0, "m_transitionData in CStateMachineUpdateNode should be at offset 0xE0");
		static_assert(offsetof(CS2::animgraphlib::CStateMachineUpdateNode, m_bBlockWaningTags) == 0xFC, "m_bBlockWaningTags in CStateMachineUpdateNode should be at offset 0xFC");
		static_assert(offsetof(CS2::animgraphlib::CStateMachineUpdateNode, m_bLockStateWhenWaning) == 0xFD, "m_bLockStateWhenWaning in CStateMachineUpdateNode should be at offset 0xFD");
		static_assert(offsetof(CS2::animgraphlib::CStateMachineUpdateNode, m_bResetWhenActivated) == 0xFE, "m_bResetWhenActivated in CStateMachineUpdateNode should be at offset 0xFE");
		static_assert(sizeof(CS2::animgraphlib::CStateMachineUpdateNode) == 0x100, "CStateMachineUpdateNode size should be 0x100");
	}
}
