// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/animgraphlib/CConcreteAnimParameter.hpp>





using namespace GlobalTypes;
namespace CS2 {
	namespace animgraphlib {
		class CEnumAnimParameter : public CS2::animgraphlib::CConcreteAnimParameter {
		public:
			S2_PAD(0x8);
			uint8_t m_defaultValue; // 0x88 | Schema_Builtin | Size: 0x1
			S2_PAD(0x7);
			GlobalTypes::CUtlVector< GlobalTypes::CUtlString > m_enumOptions; // 0x90 | Schema_Atomic | Size: 0x18
			// char  m_enumOptions[0x18]; // 0x90 | Schema_Atomic | Size: 0x18
			GlobalTypes::CUtlVector< uint64 > m_vecEnumReferenced; // 0xa8 | Schema_Atomic | Size: 0x18
			// char  m_vecEnumReferenced[0x18]; // 0xa8 | Schema_Atomic | Size: 0x18
			S2_PAD(0x18); // End padding
		};
		static_assert(offsetof(CS2::animgraphlib::CEnumAnimParameter, m_defaultValue) == 0x88, "m_defaultValue in CEnumAnimParameter should be at offset 0x88");
		static_assert(offsetof(CS2::animgraphlib::CEnumAnimParameter, m_enumOptions) == 0x90, "m_enumOptions in CEnumAnimParameter should be at offset 0x90");
		static_assert(offsetof(CS2::animgraphlib::CEnumAnimParameter, m_vecEnumReferenced) == 0xA8, "m_vecEnumReferenced in CEnumAnimParameter should be at offset 0xA8");
		static_assert(sizeof(CS2::animgraphlib::CEnumAnimParameter) == 0xD8, "CEnumAnimParameter size should be 0xD8");
	}
}
