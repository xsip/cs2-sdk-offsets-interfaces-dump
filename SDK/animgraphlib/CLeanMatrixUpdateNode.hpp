// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/animgraphlib/CLeafUpdateNode.hpp>
#include <SDK/animgraphlib/CPoseHandle.hpp>
#include <SDK/animgraphlib/CAnimInputDamping.hpp>
#include <SDK/animgraphlib/AnimVectorSource.hpp>
#include <SDK/animgraphlib/CAnimParamHandle.hpp>
#include <SDK/animationsystem/HSequence.hpp>





using namespace GlobalTypes;
namespace CS2 {
	namespace animgraphlib {
		class CLeanMatrixUpdateNode : public CS2::animgraphlib::CLeafUpdateNode {
		public:
			S2_PAD(0x4);
			int32_t m_frameCorners[3]; // 0x5c | Schema_FixedArray | Size: 0x0
			S2_PAD(0x24);
			animgraphlib::CPoseHandle m_poses[9]; // 0x80 | Schema_FixedArray | Size: 0x144
			animgraphlib::CAnimInputDamping m_damping; // 0xa8 | Schema_DeclaredClass | Size: 0x18
			animgraphlib::AnimVectorSource m_blendSource; // 0xc0 | Schema_DeclaredEnum | Size: 0x4
			animgraphlib::CAnimParamHandle m_paramIndex; // 0xc4 | Schema_DeclaredClass | Size: 0x2
			S2_PAD(0x2);
			GlobalTypes::Vector m_verticalAxis; // 0xc8 | Schema_Atomic | Size: 0xc
			GlobalTypes::Vector m_horizontalAxis; // 0xd4 | Schema_Atomic | Size: 0xc
			animationsystem::HSequence m_hSequence; // 0xe0 | Schema_DeclaredClass | Size: 0x4
			float32 m_flMaxValue; // 0xe4 | Schema_Builtin | Size: 0x4
			int32_t m_nSequenceMaxFrame; // 0xe8 | Schema_Builtin | Size: 0x4
			S2_PAD(0x4); // End padding
		};
		static_assert(offsetof(CS2::animgraphlib::CLeanMatrixUpdateNode, m_frameCorners) == 0x5C, "m_frameCorners in CLeanMatrixUpdateNode should be at offset 0x5C");
		static_assert(offsetof(CS2::animgraphlib::CLeanMatrixUpdateNode, m_poses) == 0x80, "m_poses in CLeanMatrixUpdateNode should be at offset 0x80");
		static_assert(offsetof(CS2::animgraphlib::CLeanMatrixUpdateNode, m_damping) == 0xA8, "m_damping in CLeanMatrixUpdateNode should be at offset 0xA8");
		static_assert(offsetof(CS2::animgraphlib::CLeanMatrixUpdateNode, m_blendSource) == 0xC0, "m_blendSource in CLeanMatrixUpdateNode should be at offset 0xC0");
		static_assert(offsetof(CS2::animgraphlib::CLeanMatrixUpdateNode, m_paramIndex) == 0xC4, "m_paramIndex in CLeanMatrixUpdateNode should be at offset 0xC4");
		static_assert(offsetof(CS2::animgraphlib::CLeanMatrixUpdateNode, m_verticalAxis) == 0xC8, "m_verticalAxis in CLeanMatrixUpdateNode should be at offset 0xC8");
		static_assert(offsetof(CS2::animgraphlib::CLeanMatrixUpdateNode, m_horizontalAxis) == 0xD4, "m_horizontalAxis in CLeanMatrixUpdateNode should be at offset 0xD4");
		static_assert(offsetof(CS2::animgraphlib::CLeanMatrixUpdateNode, m_hSequence) == 0xE0, "m_hSequence in CLeanMatrixUpdateNode should be at offset 0xE0");
		static_assert(offsetof(CS2::animgraphlib::CLeanMatrixUpdateNode, m_flMaxValue) == 0xE4, "m_flMaxValue in CLeanMatrixUpdateNode should be at offset 0xE4");
		static_assert(offsetof(CS2::animgraphlib::CLeanMatrixUpdateNode, m_nSequenceMaxFrame) == 0xE8, "m_nSequenceMaxFrame in CLeanMatrixUpdateNode should be at offset 0xE8");
		static_assert(sizeof(CS2::animgraphlib::CLeanMatrixUpdateNode) == 0xF0, "CLeanMatrixUpdateNode size should be 0xF0");
	}
}
