// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif





namespace CS2 {
	namespace mathlib_extended {
		class FuseVariableIndex_t;
	}
}


using namespace GlobalTypes;
namespace CS2 {
	namespace mathlib_extended {
		class CFuseProgram  {
		public:
			GlobalTypes::CUtlVector< uint8 > m_programBuffer; // 0x0 | Schema_Atomic | Size: 0x18
			// char  m_programBuffer[0x18]; // 0x0 | Schema_Atomic | Size: 0x18
			GlobalTypes::CUtlVector<mathlib_extended::FuseVariableIndex_t> m_variablesRead; // 0x18 | Schema_Atomic | Size: 0x18
			// char  m_variablesRead[0x18]; // 0x18 | Schema_Atomic | Size: 0x18
			GlobalTypes::CUtlVector<mathlib_extended::FuseVariableIndex_t> m_variablesWritten; // 0x30 | Schema_Atomic | Size: 0x18
			// char  m_variablesWritten[0x18]; // 0x30 | Schema_Atomic | Size: 0x18
			int32_t m_nMaxTempVarsUsed; // 0x48 | Schema_Builtin | Size: 0x4
			S2_PAD(0x4); // End padding
		};
		static_assert(offsetof(CS2::mathlib_extended::CFuseProgram, m_programBuffer) == 0x0, "m_programBuffer in CFuseProgram should be at offset 0x0");
		static_assert(offsetof(CS2::mathlib_extended::CFuseProgram, m_variablesRead) == 0x18, "m_variablesRead in CFuseProgram should be at offset 0x18");
		static_assert(offsetof(CS2::mathlib_extended::CFuseProgram, m_variablesWritten) == 0x30, "m_variablesWritten in CFuseProgram should be at offset 0x30");
		static_assert(offsetof(CS2::mathlib_extended::CFuseProgram, m_nMaxTempVarsUsed) == 0x48, "m_nMaxTempVarsUsed in CFuseProgram should be at offset 0x48");
		static_assert(sizeof(CS2::mathlib_extended::CFuseProgram) == 0x50, "CFuseProgram size should be 0x50");
	}
}
