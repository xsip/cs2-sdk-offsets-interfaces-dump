// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/server/CBaseTrigger.hpp>
#include <SDK/entity2/CEntityIOOutput.hpp>





using namespace GlobalTypes;
namespace CS2 {
	namespace server {
		class CBombTarget : public CS2::server::CBaseTrigger {
		public:
			entity2::CEntityIOOutput m_OnBombExplode; // 0x9a8 | Schema_DeclaredClass | Size: 0x28
			entity2::CEntityIOOutput m_OnBombPlanted; // 0x9d0 | Schema_DeclaredClass | Size: 0x28
			entity2::CEntityIOOutput m_OnBombDefused; // 0x9f8 | Schema_DeclaredClass | Size: 0x28
			bool m_bIsBombSiteB; // 0xa20 | Schema_Builtin | Size: 0x1
			bool m_bIsHeistBombTarget; // 0xa21 | Schema_Builtin | Size: 0x1
			bool m_bBombPlantedHere; // 0xa22 | Schema_Builtin | Size: 0x1
			S2_PAD(0x5);
			GlobalTypes::CUtlSymbolLarge m_szMountTarget; // 0xa28 | Schema_Atomic | Size: 0x8
			// server::CHandle< server::CBaseEntity > m_hInstructorHint; // 0xa30 | Schema_Atomic | Size: 0x4
			char  m_hInstructorHint[0x4]; // 0xa30 | Schema_Atomic | Size: 0x4
			int32_t m_nBombSiteDesignation; // 0xa34 | Schema_Builtin | Size: 0x4
		};
		static_assert(offsetof(CS2::server::CBombTarget, m_OnBombExplode) == 0x9A8, "m_OnBombExplode in CBombTarget should be at offset 0x9A8");
		static_assert(offsetof(CS2::server::CBombTarget, m_OnBombPlanted) == 0x9D0, "m_OnBombPlanted in CBombTarget should be at offset 0x9D0");
		static_assert(offsetof(CS2::server::CBombTarget, m_OnBombDefused) == 0x9F8, "m_OnBombDefused in CBombTarget should be at offset 0x9F8");
		static_assert(offsetof(CS2::server::CBombTarget, m_bIsBombSiteB) == 0xA20, "m_bIsBombSiteB in CBombTarget should be at offset 0xA20");
		static_assert(offsetof(CS2::server::CBombTarget, m_bIsHeistBombTarget) == 0xA21, "m_bIsHeistBombTarget in CBombTarget should be at offset 0xA21");
		static_assert(offsetof(CS2::server::CBombTarget, m_bBombPlantedHere) == 0xA22, "m_bBombPlantedHere in CBombTarget should be at offset 0xA22");
		static_assert(offsetof(CS2::server::CBombTarget, m_szMountTarget) == 0xA28, "m_szMountTarget in CBombTarget should be at offset 0xA28");
		static_assert(offsetof(CS2::server::CBombTarget, m_hInstructorHint) == 0xA30, "m_hInstructorHint in CBombTarget should be at offset 0xA30");
		static_assert(offsetof(CS2::server::CBombTarget, m_nBombSiteDesignation) == 0xA34, "m_nBombSiteDesignation in CBombTarget should be at offset 0xA34");
		static_assert(sizeof(CS2::server::CBombTarget) == 0xA38, "CBombTarget size should be 0xA38");
	}
}
