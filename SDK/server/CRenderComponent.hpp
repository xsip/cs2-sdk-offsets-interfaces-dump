// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/entity2/CEntityComponent.hpp>
#include <SDK/entity2/CNetworkVarChainer.hpp>



namespace CS2 {
	namespace server {
		class CRenderComponent : public CS2::entity2::CEntityComponent {
		public:
			S2_PAD(0x8);
			entity2::CNetworkVarChainer __m_pChainEntity; // 0x10 | Schema_DeclaredClass | Size: 0x28
			S2_PAD(0x18);
			bool m_bIsRenderingWithViewModels; // 0x50 | Schema_Builtin | Size: 0x1
			S2_PAD(0x3);
			uint32_t m_nSplitscreenFlags; // 0x54 | Schema_Builtin | Size: 0x4
			bool m_bEnableRendering; // 0x58 | Schema_Builtin | Size: 0x1
			S2_PAD(0x4f);
			bool m_bInterpolationReadyToDraw; // 0xa8 | Schema_Builtin | Size: 0x1
			S2_PAD(0x7); // End padding
		};
		static_assert(offsetof(CS2::server::CRenderComponent, __m_pChainEntity) == 0x10, "__m_pChainEntity in CRenderComponent should be at offset 0x10");
		static_assert(offsetof(CS2::server::CRenderComponent, m_bIsRenderingWithViewModels) == 0x50, "m_bIsRenderingWithViewModels in CRenderComponent should be at offset 0x50");
		static_assert(offsetof(CS2::server::CRenderComponent, m_nSplitscreenFlags) == 0x54, "m_nSplitscreenFlags in CRenderComponent should be at offset 0x54");
		static_assert(offsetof(CS2::server::CRenderComponent, m_bEnableRendering) == 0x58, "m_bEnableRendering in CRenderComponent should be at offset 0x58");
		static_assert(offsetof(CS2::server::CRenderComponent, m_bInterpolationReadyToDraw) == 0xA8, "m_bInterpolationReadyToDraw in CRenderComponent should be at offset 0xA8");
		static_assert(sizeof(CS2::server::CRenderComponent) == 0xB0, "CRenderComponent size should be 0xB0");
	}
}
