// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif







using namespace GlobalTypes;
namespace CS2 {
	namespace server {
		class CHintMessage  {
		public:
			char* m_hintString; // 0x0 | Schema_Ptr | Size: 0x8
			GlobalTypes::CUtlVector< �p��::char* > m_args; // 0x8 | Schema_Atomic | Size: 0x18
			// char  m_args[0x18]; // 0x8 | Schema_Atomic | Size: 0x18
			float32 m_duration; // 0x20 | Schema_Builtin | Size: 0x4
			S2_PAD(0x4); // End padding
		};
		static_assert(offsetof(CS2::server::CHintMessage, m_hintString) == 0x0, "m_hintString in CHintMessage should be at offset 0x0");
		static_assert(offsetof(CS2::server::CHintMessage, m_args) == 0x8, "m_args in CHintMessage should be at offset 0x8");
		static_assert(offsetof(CS2::server::CHintMessage, m_duration) == 0x20, "m_duration in CHintMessage should be at offset 0x20");
		static_assert(sizeof(CS2::server::CHintMessage) == 0x28, "CHintMessage size should be 0x28");
	}
}
