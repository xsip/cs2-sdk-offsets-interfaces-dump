// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/server/CLogicalEntity.hpp>
#include <SDK/entity2/CEntityIOOutput.hpp>



namespace CS2 {
	namespace server {
		class CLogicGameEventListener : public CS2::server::CLogicalEntity {
		public:
			S2_PAD(0x10);
			entity2::CEntityIOOutput m_OnEventFired; // 0x500 | Schema_DeclaredClass | Size: 0x28
			GlobalTypes::CUtlSymbolLarge m_iszGameEventName; // 0x528 | Schema_Atomic | Size: 0x8
			GlobalTypes::CUtlSymbolLarge m_iszGameEventItem; // 0x530 | Schema_Atomic | Size: 0x8
			bool m_bEnabled; // 0x538 | Schema_Builtin | Size: 0x1
			bool m_bStartDisabled; // 0x539 | Schema_Builtin | Size: 0x1
			S2_PAD(0x6); // End padding
		};
		static_assert(offsetof(CS2::server::CLogicGameEventListener, m_OnEventFired) == 0x500, "m_OnEventFired in CLogicGameEventListener should be at offset 0x500");
		static_assert(offsetof(CS2::server::CLogicGameEventListener, m_iszGameEventName) == 0x528, "m_iszGameEventName in CLogicGameEventListener should be at offset 0x528");
		static_assert(offsetof(CS2::server::CLogicGameEventListener, m_iszGameEventItem) == 0x530, "m_iszGameEventItem in CLogicGameEventListener should be at offset 0x530");
		static_assert(offsetof(CS2::server::CLogicGameEventListener, m_bEnabled) == 0x538, "m_bEnabled in CLogicGameEventListener should be at offset 0x538");
		static_assert(offsetof(CS2::server::CLogicGameEventListener, m_bStartDisabled) == 0x539, "m_bStartDisabled in CLogicGameEventListener should be at offset 0x539");
		static_assert(sizeof(CS2::server::CLogicGameEventListener) == 0x540, "CLogicGameEventListener size should be 0x540");
	}
}
