// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <SDK/GlobalTypes.hpp>

#include <SDK/server/CPhysConstraint.hpp>
#include <SDK/server/ConstraintSoundInfo.hpp>



namespace CS2 {
	namespace server {
		class CPhysSlideConstraint : public CS2::server::CPhysConstraint {
		public:
			S2_PAD(0x8);
			GlobalTypes::VectorWS m_axisEnd; // 0x568 | Schema_Atomic | Size: 0xc
			float32 m_slideFriction; // 0x574 | Schema_Builtin | Size: 0x4
			float32 m_systemLoadScale; // 0x578 | Schema_Builtin | Size: 0x4
			float32 m_initialOffset; // 0x57c | Schema_Builtin | Size: 0x4
			bool m_bEnableLinearConstraint; // 0x580 | Schema_Builtin | Size: 0x1
			bool m_bEnableAngularConstraint; // 0x581 | Schema_Builtin | Size: 0x1
			S2_PAD(0x2);
			float32 m_flMotorFrequency; // 0x584 | Schema_Builtin | Size: 0x4
			float32 m_flMotorDampingRatio; // 0x588 | Schema_Builtin | Size: 0x4
			bool m_bUseEntityPivot; // 0x58c | Schema_Builtin | Size: 0x1
			S2_PAD(0x3);
			server::ConstraintSoundInfo m_soundInfo; // 0x590 | Schema_DeclaredClass | Size: 0x98
		};
		static_assert(offsetof(CS2::server::CPhysSlideConstraint, m_axisEnd) == 0x568, "m_axisEnd in CPhysSlideConstraint should be at offset 0x568");
		static_assert(offsetof(CS2::server::CPhysSlideConstraint, m_slideFriction) == 0x574, "m_slideFriction in CPhysSlideConstraint should be at offset 0x574");
		static_assert(offsetof(CS2::server::CPhysSlideConstraint, m_systemLoadScale) == 0x578, "m_systemLoadScale in CPhysSlideConstraint should be at offset 0x578");
		static_assert(offsetof(CS2::server::CPhysSlideConstraint, m_initialOffset) == 0x57C, "m_initialOffset in CPhysSlideConstraint should be at offset 0x57C");
		static_assert(offsetof(CS2::server::CPhysSlideConstraint, m_bEnableLinearConstraint) == 0x580, "m_bEnableLinearConstraint in CPhysSlideConstraint should be at offset 0x580");
		static_assert(offsetof(CS2::server::CPhysSlideConstraint, m_bEnableAngularConstraint) == 0x581, "m_bEnableAngularConstraint in CPhysSlideConstraint should be at offset 0x581");
		static_assert(offsetof(CS2::server::CPhysSlideConstraint, m_flMotorFrequency) == 0x584, "m_flMotorFrequency in CPhysSlideConstraint should be at offset 0x584");
		static_assert(offsetof(CS2::server::CPhysSlideConstraint, m_flMotorDampingRatio) == 0x588, "m_flMotorDampingRatio in CPhysSlideConstraint should be at offset 0x588");
		static_assert(offsetof(CS2::server::CPhysSlideConstraint, m_bUseEntityPivot) == 0x58C, "m_bUseEntityPivot in CPhysSlideConstraint should be at offset 0x58C");
		static_assert(offsetof(CS2::server::CPhysSlideConstraint, m_soundInfo) == 0x590, "m_soundInfo in CPhysSlideConstraint should be at offset 0x590");
		static_assert(sizeof(CS2::server::CPhysSlideConstraint) == 0x628, "CPhysSlideConstraint size should be 0x628");
	}
}
