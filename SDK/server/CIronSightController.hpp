// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif





namespace CS2 {
	namespace server {
		class CIronSightController  {
		public:
			S2_PAD(0x8);
			bool m_bIronSightAvailable; // 0x8 | Schema_Builtin | Size: 0x1
			S2_PAD(0x3);
			float32 m_flIronSightAmount; // 0xc | Schema_Builtin | Size: 0x4
			float32 m_flIronSightAmountGained; // 0x10 | Schema_Builtin | Size: 0x4
			float32 m_flIronSightAmountBiased; // 0x14 | Schema_Builtin | Size: 0x4
		};
		static_assert(offsetof(CS2::server::CIronSightController, m_bIronSightAvailable) == 0x8, "m_bIronSightAvailable in CIronSightController should be at offset 0x8");
		static_assert(offsetof(CS2::server::CIronSightController, m_flIronSightAmount) == 0xC, "m_flIronSightAmount in CIronSightController should be at offset 0xC");
		static_assert(offsetof(CS2::server::CIronSightController, m_flIronSightAmountGained) == 0x10, "m_flIronSightAmountGained in CIronSightController should be at offset 0x10");
		static_assert(offsetof(CS2::server::CIronSightController, m_flIronSightAmountBiased) == 0x14, "m_flIronSightAmountBiased in CIronSightController should be at offset 0x14");
		static_assert(sizeof(CS2::server::CIronSightController) == 0x18, "CIronSightController size should be 0x18");
	}
}
