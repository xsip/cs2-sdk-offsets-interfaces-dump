// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <SDK/GlobalTypes.hpp>

#include <SDK/server/CBaseModelEntity.hpp>
#include <SDK/entity2/CEntityIOOutput.hpp>



namespace CS2 {
	namespace server {
		class CBaseClientUIEntity : public CS2::server::CBaseModelEntity {
		public:
			bool m_bEnabled; // 0x7f0 | Schema_Builtin | Size: 0x1
			S2_PAD(0x7);
			GlobalTypes::CUtlSymbolLarge m_DialogXMLName; // 0x7f8 | Schema_Atomic | Size: 0x8
			GlobalTypes::CUtlSymbolLarge m_PanelClassName; // 0x800 | Schema_Atomic | Size: 0x8
			GlobalTypes::CUtlSymbolLarge m_PanelID; // 0x808 | Schema_Atomic | Size: 0x8
			entity2::CEntityIOOutput m_CustomOutput0; // 0x810 | Schema_DeclaredClass | Size: 0x28
			entity2::CEntityIOOutput m_CustomOutput1; // 0x838 | Schema_DeclaredClass | Size: 0x28
			entity2::CEntityIOOutput m_CustomOutput2; // 0x860 | Schema_DeclaredClass | Size: 0x28
			entity2::CEntityIOOutput m_CustomOutput3; // 0x888 | Schema_DeclaredClass | Size: 0x28
			entity2::CEntityIOOutput m_CustomOutput4; // 0x8b0 | Schema_DeclaredClass | Size: 0x28
			entity2::CEntityIOOutput m_CustomOutput5; // 0x8d8 | Schema_DeclaredClass | Size: 0x28
			entity2::CEntityIOOutput m_CustomOutput6; // 0x900 | Schema_DeclaredClass | Size: 0x28
			entity2::CEntityIOOutput m_CustomOutput7; // 0x928 | Schema_DeclaredClass | Size: 0x28
			entity2::CEntityIOOutput m_CustomOutput8; // 0x950 | Schema_DeclaredClass | Size: 0x28
			entity2::CEntityIOOutput m_CustomOutput9; // 0x978 | Schema_DeclaredClass | Size: 0x28
		};
		static_assert(offsetof(CS2::server::CBaseClientUIEntity, m_bEnabled) == 0x7F0, "m_bEnabled in CBaseClientUIEntity should be at offset 0x7F0");
		static_assert(offsetof(CS2::server::CBaseClientUIEntity, m_DialogXMLName) == 0x7F8, "m_DialogXMLName in CBaseClientUIEntity should be at offset 0x7F8");
		static_assert(offsetof(CS2::server::CBaseClientUIEntity, m_PanelClassName) == 0x800, "m_PanelClassName in CBaseClientUIEntity should be at offset 0x800");
		static_assert(offsetof(CS2::server::CBaseClientUIEntity, m_PanelID) == 0x808, "m_PanelID in CBaseClientUIEntity should be at offset 0x808");
		static_assert(offsetof(CS2::server::CBaseClientUIEntity, m_CustomOutput0) == 0x810, "m_CustomOutput0 in CBaseClientUIEntity should be at offset 0x810");
		static_assert(offsetof(CS2::server::CBaseClientUIEntity, m_CustomOutput1) == 0x838, "m_CustomOutput1 in CBaseClientUIEntity should be at offset 0x838");
		static_assert(offsetof(CS2::server::CBaseClientUIEntity, m_CustomOutput2) == 0x860, "m_CustomOutput2 in CBaseClientUIEntity should be at offset 0x860");
		static_assert(offsetof(CS2::server::CBaseClientUIEntity, m_CustomOutput3) == 0x888, "m_CustomOutput3 in CBaseClientUIEntity should be at offset 0x888");
		static_assert(offsetof(CS2::server::CBaseClientUIEntity, m_CustomOutput4) == 0x8B0, "m_CustomOutput4 in CBaseClientUIEntity should be at offset 0x8B0");
		static_assert(offsetof(CS2::server::CBaseClientUIEntity, m_CustomOutput5) == 0x8D8, "m_CustomOutput5 in CBaseClientUIEntity should be at offset 0x8D8");
		static_assert(offsetof(CS2::server::CBaseClientUIEntity, m_CustomOutput6) == 0x900, "m_CustomOutput6 in CBaseClientUIEntity should be at offset 0x900");
		static_assert(offsetof(CS2::server::CBaseClientUIEntity, m_CustomOutput7) == 0x928, "m_CustomOutput7 in CBaseClientUIEntity should be at offset 0x928");
		static_assert(offsetof(CS2::server::CBaseClientUIEntity, m_CustomOutput8) == 0x950, "m_CustomOutput8 in CBaseClientUIEntity should be at offset 0x950");
		static_assert(offsetof(CS2::server::CBaseClientUIEntity, m_CustomOutput9) == 0x978, "m_CustomOutput9 in CBaseClientUIEntity should be at offset 0x978");
		static_assert(sizeof(CS2::server::CBaseClientUIEntity) == 0x9A0, "CBaseClientUIEntity size should be 0x9A0");
	}
}
