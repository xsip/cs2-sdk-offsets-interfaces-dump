// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/server/CPointEntity.hpp>
#include <SDK/entity2/CEntityIOOutput.hpp>



namespace CS2 {
	namespace server {
		class CEnvEntityMaker : public CS2::server::CPointEntity {
		public:
			GlobalTypes::Vector m_vecEntityMins; // 0x4f0 | Schema_Atomic | Size: 0xc
			GlobalTypes::Vector m_vecEntityMaxs; // 0x4fc | Schema_Atomic | Size: 0xc
			// server::CHandle< server::CBaseEntity > m_hCurrentInstance; // 0x508 | Schema_Atomic | Size: 0x4
			char  m_hCurrentInstance[0x4]; // 0x508 | Schema_Atomic | Size: 0x4
			// server::CHandle< server::CBaseEntity > m_hCurrentBlocker; // 0x50c | Schema_Atomic | Size: 0x4
			char  m_hCurrentBlocker[0x4]; // 0x50c | Schema_Atomic | Size: 0x4
			GlobalTypes::Vector m_vecBlockerOrigin; // 0x510 | Schema_Atomic | Size: 0xc
			GlobalTypes::QAngle m_angPostSpawnDirection; // 0x51c | Schema_Atomic | Size: 0xc
			float32 m_flPostSpawnDirectionVariance; // 0x528 | Schema_Builtin | Size: 0x4
			float32 m_flPostSpawnSpeed; // 0x52c | Schema_Builtin | Size: 0x4
			bool m_bPostSpawnUseAngles; // 0x530 | Schema_Builtin | Size: 0x1
			S2_PAD(0x7);
			GlobalTypes::CUtlSymbolLarge m_iszTemplate; // 0x538 | Schema_Atomic | Size: 0x8
			entity2::CEntityIOOutput m_pOutputOnSpawned; // 0x540 | Schema_DeclaredClass | Size: 0x28
			entity2::CEntityIOOutput m_pOutputOnFailedSpawn; // 0x568 | Schema_DeclaredClass | Size: 0x28
		};
		static_assert(offsetof(CS2::server::CEnvEntityMaker, m_vecEntityMins) == 0x4F0, "m_vecEntityMins in CEnvEntityMaker should be at offset 0x4F0");
		static_assert(offsetof(CS2::server::CEnvEntityMaker, m_vecEntityMaxs) == 0x4FC, "m_vecEntityMaxs in CEnvEntityMaker should be at offset 0x4FC");
		static_assert(offsetof(CS2::server::CEnvEntityMaker, m_hCurrentInstance) == 0x508, "m_hCurrentInstance in CEnvEntityMaker should be at offset 0x508");
		static_assert(offsetof(CS2::server::CEnvEntityMaker, m_hCurrentBlocker) == 0x50C, "m_hCurrentBlocker in CEnvEntityMaker should be at offset 0x50C");
		static_assert(offsetof(CS2::server::CEnvEntityMaker, m_vecBlockerOrigin) == 0x510, "m_vecBlockerOrigin in CEnvEntityMaker should be at offset 0x510");
		static_assert(offsetof(CS2::server::CEnvEntityMaker, m_angPostSpawnDirection) == 0x51C, "m_angPostSpawnDirection in CEnvEntityMaker should be at offset 0x51C");
		static_assert(offsetof(CS2::server::CEnvEntityMaker, m_flPostSpawnDirectionVariance) == 0x528, "m_flPostSpawnDirectionVariance in CEnvEntityMaker should be at offset 0x528");
		static_assert(offsetof(CS2::server::CEnvEntityMaker, m_flPostSpawnSpeed) == 0x52C, "m_flPostSpawnSpeed in CEnvEntityMaker should be at offset 0x52C");
		static_assert(offsetof(CS2::server::CEnvEntityMaker, m_bPostSpawnUseAngles) == 0x530, "m_bPostSpawnUseAngles in CEnvEntityMaker should be at offset 0x530");
		static_assert(offsetof(CS2::server::CEnvEntityMaker, m_iszTemplate) == 0x538, "m_iszTemplate in CEnvEntityMaker should be at offset 0x538");
		static_assert(offsetof(CS2::server::CEnvEntityMaker, m_pOutputOnSpawned) == 0x540, "m_pOutputOnSpawned in CEnvEntityMaker should be at offset 0x540");
		static_assert(offsetof(CS2::server::CEnvEntityMaker, m_pOutputOnFailedSpawn) == 0x568, "m_pOutputOnFailedSpawn in CEnvEntityMaker should be at offset 0x568");
		static_assert(sizeof(CS2::server::CEnvEntityMaker) == 0x590, "CEnvEntityMaker size should be 0x590");
	}
}
