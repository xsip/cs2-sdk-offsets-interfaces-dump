// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif





namespace CS2 {
	namespace server {
		class CEconItemView;
	}
}
namespace CS2 {
	namespace server {
		class NetworkedLoadoutSlot_t  {
		public:
			server::CEconItemView* pItem; // 0x0 | Schema_Ptr | Size: 0x8
			uint16_t team; // 0x8 | Schema_Builtin | Size: 0x2
			uint16_t slot; // 0xa | Schema_Builtin | Size: 0x2
			S2_PAD(0x4); // End padding
		};
		static_assert(offsetof(CS2::server::NetworkedLoadoutSlot_t, pItem) == 0x0, "pItem in CCSPlayerController_InventoryServices::NetworkedLoadoutSlot_t should be at offset 0x0");
		static_assert(offsetof(CS2::server::NetworkedLoadoutSlot_t, team) == 0x8, "team in CCSPlayerController_InventoryServices::NetworkedLoadoutSlot_t should be at offset 0x8");
		static_assert(offsetof(CS2::server::NetworkedLoadoutSlot_t, slot) == 0xA, "slot in CCSPlayerController_InventoryServices::NetworkedLoadoutSlot_t should be at offset 0xA");
		static_assert(sizeof(CS2::server::NetworkedLoadoutSlot_t) == 0x10, "CCSPlayerController_InventoryServices::NetworkedLoadoutSlot_t size should be 0x10");
	}
}
