// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <SDK/GlobalTypes.hpp>

#include <SDK/server/CBaseModelEntity.hpp>
#include <SDK/entity2/GameTick_t.hpp>



namespace CS2 {
	namespace server {
		class CFuncConveyor : public CS2::server::CBaseModelEntity {
		public:
			GlobalTypes::CUtlSymbolLarge m_szConveyorModels; // 0x7f0 | Schema_Atomic | Size: 0x8
			float32 m_flTransitionDurationSeconds; // 0x7f8 | Schema_Builtin | Size: 0x4
			GlobalTypes::QAngle m_angMoveEntitySpace; // 0x7fc | Schema_Atomic | Size: 0xc
			GlobalTypes::Vector m_vecMoveDirEntitySpace; // 0x808 | Schema_Atomic | Size: 0xc
			float32 m_flTargetSpeed; // 0x814 | Schema_Builtin | Size: 0x4
			entity2::GameTick_t m_nTransitionStartTick; // 0x818 | Schema_DeclaredClass | Size: 0x4
			int32_t m_nTransitionDurationTicks; // 0x81c | Schema_Builtin | Size: 0x4
			float32 m_flTransitionStartSpeed; // 0x820 | Schema_Builtin | Size: 0x4
			S2_PAD(0x4);
			// server::CNetworkUtlVectorBase< server.dll::CHandle< CBaseEntity > > m_hConveyorModels; // 0x828 | Schema_Atomic | Size: 0x18
			char  m_hConveyorModels[0x18]; // 0x828 | Schema_Atomic | Size: 0x18
		};
		static_assert(offsetof(CS2::server::CFuncConveyor, m_szConveyorModels) == 0x7F0, "m_szConveyorModels in CFuncConveyor should be at offset 0x7F0");
		static_assert(offsetof(CS2::server::CFuncConveyor, m_flTransitionDurationSeconds) == 0x7F8, "m_flTransitionDurationSeconds in CFuncConveyor should be at offset 0x7F8");
		static_assert(offsetof(CS2::server::CFuncConveyor, m_angMoveEntitySpace) == 0x7FC, "m_angMoveEntitySpace in CFuncConveyor should be at offset 0x7FC");
		static_assert(offsetof(CS2::server::CFuncConveyor, m_vecMoveDirEntitySpace) == 0x808, "m_vecMoveDirEntitySpace in CFuncConveyor should be at offset 0x808");
		static_assert(offsetof(CS2::server::CFuncConveyor, m_flTargetSpeed) == 0x814, "m_flTargetSpeed in CFuncConveyor should be at offset 0x814");
		static_assert(offsetof(CS2::server::CFuncConveyor, m_nTransitionStartTick) == 0x818, "m_nTransitionStartTick in CFuncConveyor should be at offset 0x818");
		static_assert(offsetof(CS2::server::CFuncConveyor, m_nTransitionDurationTicks) == 0x81C, "m_nTransitionDurationTicks in CFuncConveyor should be at offset 0x81C");
		static_assert(offsetof(CS2::server::CFuncConveyor, m_flTransitionStartSpeed) == 0x820, "m_flTransitionStartSpeed in CFuncConveyor should be at offset 0x820");
		static_assert(offsetof(CS2::server::CFuncConveyor, m_hConveyorModels) == 0x828, "m_hConveyorModels in CFuncConveyor should be at offset 0x828");
		static_assert(sizeof(CS2::server::CFuncConveyor) == 0x840, "CFuncConveyor size should be 0x840");
	}
}
