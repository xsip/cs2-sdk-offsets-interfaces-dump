// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <SDK/GlobalTypes.hpp>

#include <SDK/server/CBaseEntity.hpp>
#include <SDK/server/sky3dparams_t.hpp>



namespace CS2 {
	namespace server {
		class CSkyCamera : public CS2::server::CBaseEntity {
		public:
			server::sky3dparams_t m_skyboxData; // 0x4f0 | Schema_DeclaredClass | Size: 0x90
			GlobalTypes::CUtlStringToken m_skyboxSlotToken; // 0x580 | Schema_Atomic | Size: 0x4
			bool m_bUseAngles; // 0x584 | Schema_Builtin | Size: 0x1
			S2_PAD(0x3);
			server::CSkyCamera* m_pNext; // 0x588 | Schema_Ptr | Size: 0x8
		};
		static_assert(offsetof(CS2::server::CSkyCamera, m_skyboxData) == 0x4F0, "m_skyboxData in CSkyCamera should be at offset 0x4F0");
		static_assert(offsetof(CS2::server::CSkyCamera, m_skyboxSlotToken) == 0x580, "m_skyboxSlotToken in CSkyCamera should be at offset 0x580");
		static_assert(offsetof(CS2::server::CSkyCamera, m_bUseAngles) == 0x584, "m_bUseAngles in CSkyCamera should be at offset 0x584");
		static_assert(offsetof(CS2::server::CSkyCamera, m_pNext) == 0x588, "m_pNext in CSkyCamera should be at offset 0x588");
		static_assert(sizeof(CS2::server::CSkyCamera) == 0x590, "CSkyCamera size should be 0x590");
	}
}
