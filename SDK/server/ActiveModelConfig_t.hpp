// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/client/ModelConfigHandle_t.hpp>





using namespace GlobalTypes;
namespace CS2 {
	namespace server {
		class ActiveModelConfig_t  {
		public:
			S2_PAD(0x30);
			client::ModelConfigHandle_t m_Handle; // 0x30 | Schema_DeclaredClass | Size: 0x4
			S2_PAD(0x4);
			GlobalTypes::CUtlSymbolLarge m_Name; // 0x38 | Schema_Atomic | Size: 0x8
			// server::CNetworkUtlVectorBase<GlobalTypes::CHandle<server::CBaseModelEntity>> m_AssociatedEntities; // 0x40 | Schema_Atomic | Size: 0x18
			char  m_AssociatedEntities[0x18]; // 0x40 | Schema_Atomic | Size: 0x18
			// GlobalTypes::CNetworkUtlVectorBase<GlobalTypes::CUtlSymbolLarge> m_AssociatedEntityNames; // 0x58 | Schema_Atomic | Size: 0x18
			char  m_AssociatedEntityNames[0x18]; // 0x58 | Schema_Atomic | Size: 0x18
		};
		static_assert(offsetof(CS2::server::ActiveModelConfig_t, m_Handle) == 0x30, "m_Handle in ActiveModelConfig_t should be at offset 0x30");
		static_assert(offsetof(CS2::server::ActiveModelConfig_t, m_Name) == 0x38, "m_Name in ActiveModelConfig_t should be at offset 0x38");
		static_assert(offsetof(CS2::server::ActiveModelConfig_t, m_AssociatedEntities) == 0x40, "m_AssociatedEntities in ActiveModelConfig_t should be at offset 0x40");
		static_assert(offsetof(CS2::server::ActiveModelConfig_t, m_AssociatedEntityNames) == 0x58, "m_AssociatedEntityNames in ActiveModelConfig_t should be at offset 0x58");
		static_assert(sizeof(CS2::server::ActiveModelConfig_t) == 0x70, "ActiveModelConfig_t size should be 0x70");
	}
}
