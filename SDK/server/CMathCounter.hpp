// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <SDK/GlobalTypes.hpp>

#include <SDK/server/CLogicalEntity.hpp>
#include <SDK/entity2/CEntityIOOutput.hpp>



namespace CS2 {
	namespace server {
		class CMathCounter : public CS2::server::CLogicalEntity {
		public:
			float32 m_flMin; // 0x4f0 | Schema_Builtin | Size: 0x4
			float32 m_flMax; // 0x4f4 | Schema_Builtin | Size: 0x4
			bool m_bHitMin; // 0x4f8 | Schema_Builtin | Size: 0x1
			bool m_bHitMax; // 0x4f9 | Schema_Builtin | Size: 0x1
			bool m_bDisabled; // 0x4fa | Schema_Builtin | Size: 0x1
			S2_PAD(0x5);
			// GlobalTypes::CEntityOutputTemplate< float32 > m_OutValue; // 0x500 | Schema_Atomic | Size: 0x28
			char  m_OutValue[0x28]; // 0x500 | Schema_Atomic | Size: 0x28
			// GlobalTypes::CEntityOutputTemplate< float32 > m_OnGetValue; // 0x528 | Schema_Atomic | Size: 0x28
			char  m_OnGetValue[0x28]; // 0x528 | Schema_Atomic | Size: 0x28
			entity2::CEntityIOOutput m_OnHitMin; // 0x550 | Schema_DeclaredClass | Size: 0x28
			entity2::CEntityIOOutput m_OnHitMax; // 0x578 | Schema_DeclaredClass | Size: 0x28
			entity2::CEntityIOOutput m_OnChangedFromMin; // 0x5a0 | Schema_DeclaredClass | Size: 0x28
			entity2::CEntityIOOutput m_OnChangedFromMax; // 0x5c8 | Schema_DeclaredClass | Size: 0x28
		};
		static_assert(offsetof(CS2::server::CMathCounter, m_flMin) == 0x4F0, "m_flMin in CMathCounter should be at offset 0x4F0");
		static_assert(offsetof(CS2::server::CMathCounter, m_flMax) == 0x4F4, "m_flMax in CMathCounter should be at offset 0x4F4");
		static_assert(offsetof(CS2::server::CMathCounter, m_bHitMin) == 0x4F8, "m_bHitMin in CMathCounter should be at offset 0x4F8");
		static_assert(offsetof(CS2::server::CMathCounter, m_bHitMax) == 0x4F9, "m_bHitMax in CMathCounter should be at offset 0x4F9");
		static_assert(offsetof(CS2::server::CMathCounter, m_bDisabled) == 0x4FA, "m_bDisabled in CMathCounter should be at offset 0x4FA");
		static_assert(offsetof(CS2::server::CMathCounter, m_OutValue) == 0x500, "m_OutValue in CMathCounter should be at offset 0x500");
		static_assert(offsetof(CS2::server::CMathCounter, m_OnGetValue) == 0x528, "m_OnGetValue in CMathCounter should be at offset 0x528");
		static_assert(offsetof(CS2::server::CMathCounter, m_OnHitMin) == 0x550, "m_OnHitMin in CMathCounter should be at offset 0x550");
		static_assert(offsetof(CS2::server::CMathCounter, m_OnHitMax) == 0x578, "m_OnHitMax in CMathCounter should be at offset 0x578");
		static_assert(offsetof(CS2::server::CMathCounter, m_OnChangedFromMin) == 0x5A0, "m_OnChangedFromMin in CMathCounter should be at offset 0x5A0");
		static_assert(offsetof(CS2::server::CMathCounter, m_OnChangedFromMax) == 0x5C8, "m_OnChangedFromMax in CMathCounter should be at offset 0x5C8");
		static_assert(sizeof(CS2::server::CMathCounter) == 0x5F0, "CMathCounter size should be 0x5F0");
	}
}
