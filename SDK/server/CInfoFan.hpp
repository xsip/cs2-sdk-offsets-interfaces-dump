// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/server/CPointEntity.hpp>





using namespace GlobalTypes;
namespace CS2 {
	namespace server {
		class CInfoFan : public CS2::server::CPointEntity {
		public:
			S2_PAD(0x40);
			float32 m_fFanForceMaxRadius; // 0x530 | Schema_Builtin | Size: 0x4
			float32 m_fFanForceMinRadius; // 0x534 | Schema_Builtin | Size: 0x4
			float32 m_flCurveDistRange; // 0x538 | Schema_Builtin | Size: 0x4
			S2_PAD(0x4);
			GlobalTypes::CUtlSymbolLarge m_FanForceCurveString; // 0x540 | Schema_Atomic | Size: 0x8
		};
		static_assert(offsetof(CS2::server::CInfoFan, m_fFanForceMaxRadius) == 0x530, "m_fFanForceMaxRadius in CInfoFan should be at offset 0x530");
		static_assert(offsetof(CS2::server::CInfoFan, m_fFanForceMinRadius) == 0x534, "m_fFanForceMinRadius in CInfoFan should be at offset 0x534");
		static_assert(offsetof(CS2::server::CInfoFan, m_flCurveDistRange) == 0x538, "m_flCurveDistRange in CInfoFan should be at offset 0x538");
		static_assert(offsetof(CS2::server::CInfoFan, m_FanForceCurveString) == 0x540, "m_FanForceCurveString in CInfoFan should be at offset 0x540");
		static_assert(sizeof(CS2::server::CInfoFan) == 0x548, "CInfoFan size should be 0x548");
	}
}
