// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/server/CPointEntity.hpp>
#include <SDK/client/BloodType.hpp>



namespace CS2 {
	namespace server {
		class CBlood : public CS2::server::CPointEntity {
		public:
			GlobalTypes::QAngle m_vecSprayAngles; // 0x4f0 | Schema_Atomic | Size: 0xc
			GlobalTypes::Vector m_vecSprayDir; // 0x4fc | Schema_Atomic | Size: 0xc
			float32 m_flAmount; // 0x508 | Schema_Builtin | Size: 0x4
			client::BloodType m_Color; // 0x50c | Schema_DeclaredEnum | Size: 0x4
		};
		static_assert(offsetof(CS2::server::CBlood, m_vecSprayAngles) == 0x4F0, "m_vecSprayAngles in CBlood should be at offset 0x4F0");
		static_assert(offsetof(CS2::server::CBlood, m_vecSprayDir) == 0x4FC, "m_vecSprayDir in CBlood should be at offset 0x4FC");
		static_assert(offsetof(CS2::server::CBlood, m_flAmount) == 0x508, "m_flAmount in CBlood should be at offset 0x508");
		static_assert(offsetof(CS2::server::CBlood, m_Color) == 0x50C, "m_Color in CBlood should be at offset 0x50C");
		static_assert(sizeof(CS2::server::CBlood) == 0x510, "CBlood size should be 0x510");
	}
}
