// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/server/CBaseEntity.hpp>



namespace CS2 {
	namespace server {
		class CTonemapController2 : public CS2::server::CBaseEntity {
		public:
			float32 m_flAutoExposureMin; // 0x4f0 | Schema_Builtin | Size: 0x4
			float32 m_flAutoExposureMax; // 0x4f4 | Schema_Builtin | Size: 0x4
			float32 m_flExposureAdaptationSpeedUp; // 0x4f8 | Schema_Builtin | Size: 0x4
			float32 m_flExposureAdaptationSpeedDown; // 0x4fc | Schema_Builtin | Size: 0x4
			float32 m_flTonemapEVSmoothingRange; // 0x500 | Schema_Builtin | Size: 0x4
			S2_PAD(0x4); // End padding
		};
		static_assert(offsetof(CS2::server::CTonemapController2, m_flAutoExposureMin) == 0x4F0, "m_flAutoExposureMin in CTonemapController2 should be at offset 0x4F0");
		static_assert(offsetof(CS2::server::CTonemapController2, m_flAutoExposureMax) == 0x4F4, "m_flAutoExposureMax in CTonemapController2 should be at offset 0x4F4");
		static_assert(offsetof(CS2::server::CTonemapController2, m_flExposureAdaptationSpeedUp) == 0x4F8, "m_flExposureAdaptationSpeedUp in CTonemapController2 should be at offset 0x4F8");
		static_assert(offsetof(CS2::server::CTonemapController2, m_flExposureAdaptationSpeedDown) == 0x4FC, "m_flExposureAdaptationSpeedDown in CTonemapController2 should be at offset 0x4FC");
		static_assert(offsetof(CS2::server::CTonemapController2, m_flTonemapEVSmoothingRange) == 0x500, "m_flTonemapEVSmoothingRange in CTonemapController2 should be at offset 0x500");
		static_assert(sizeof(CS2::server::CTonemapController2) == 0x508, "CTonemapController2 size should be 0x508");
	}
}
