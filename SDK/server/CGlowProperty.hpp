// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <SDK/GlobalTypes.hpp>




namespace CS2 {
	namespace server {
		class CGlowProperty  {
		public:
			S2_PAD(0x8);
			GlobalTypes::Vector m_fGlowColor; // 0x8 | Schema_Atomic | Size: 0xc
			S2_PAD(0x1c);
			int32_t m_iGlowType; // 0x30 | Schema_Builtin | Size: 0x4
			int32_t m_iGlowTeam; // 0x34 | Schema_Builtin | Size: 0x4
			int32_t m_nGlowRange; // 0x38 | Schema_Builtin | Size: 0x4
			int32_t m_nGlowRangeMin; // 0x3c | Schema_Builtin | Size: 0x4
			GlobalTypes::Color m_glowColorOverride; // 0x40 | Schema_Atomic | Size: 0x4
			bool m_bFlashing; // 0x44 | Schema_Builtin | Size: 0x1
			S2_PAD(0x3);
			float32 m_flGlowTime; // 0x48 | Schema_Builtin | Size: 0x4
			float32 m_flGlowStartTime; // 0x4c | Schema_Builtin | Size: 0x4
			bool m_bEligibleForScreenHighlight; // 0x50 | Schema_Builtin | Size: 0x1
			bool m_bGlowing; // 0x51 | Schema_Builtin | Size: 0x1
			S2_PAD(0x6); // End padding
		};
		static_assert(offsetof(CS2::server::CGlowProperty, m_fGlowColor) == 0x8, "m_fGlowColor in CGlowProperty should be at offset 0x8");
		static_assert(offsetof(CS2::server::CGlowProperty, m_iGlowType) == 0x30, "m_iGlowType in CGlowProperty should be at offset 0x30");
		static_assert(offsetof(CS2::server::CGlowProperty, m_iGlowTeam) == 0x34, "m_iGlowTeam in CGlowProperty should be at offset 0x34");
		static_assert(offsetof(CS2::server::CGlowProperty, m_nGlowRange) == 0x38, "m_nGlowRange in CGlowProperty should be at offset 0x38");
		static_assert(offsetof(CS2::server::CGlowProperty, m_nGlowRangeMin) == 0x3C, "m_nGlowRangeMin in CGlowProperty should be at offset 0x3C");
		static_assert(offsetof(CS2::server::CGlowProperty, m_glowColorOverride) == 0x40, "m_glowColorOverride in CGlowProperty should be at offset 0x40");
		static_assert(offsetof(CS2::server::CGlowProperty, m_bFlashing) == 0x44, "m_bFlashing in CGlowProperty should be at offset 0x44");
		static_assert(offsetof(CS2::server::CGlowProperty, m_flGlowTime) == 0x48, "m_flGlowTime in CGlowProperty should be at offset 0x48");
		static_assert(offsetof(CS2::server::CGlowProperty, m_flGlowStartTime) == 0x4C, "m_flGlowStartTime in CGlowProperty should be at offset 0x4C");
		static_assert(offsetof(CS2::server::CGlowProperty, m_bEligibleForScreenHighlight) == 0x50, "m_bEligibleForScreenHighlight in CGlowProperty should be at offset 0x50");
		static_assert(offsetof(CS2::server::CGlowProperty, m_bGlowing) == 0x51, "m_bGlowing in CGlowProperty should be at offset 0x51");
		static_assert(sizeof(CS2::server::CGlowProperty) == 0x58, "CGlowProperty size should be 0x58");
	}
}
