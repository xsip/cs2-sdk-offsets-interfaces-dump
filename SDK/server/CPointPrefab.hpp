// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/server/CServerOnlyPointEntity.hpp>





using namespace GlobalTypes;
namespace CS2 {
	namespace server {
		class CPointPrefab : public CS2::server::CServerOnlyPointEntity {
		public:
			GlobalTypes::CUtlSymbolLarge m_targetMapName; // 0x4f0 | Schema_Atomic | Size: 0x8
			GlobalTypes::CUtlSymbolLarge m_forceWorldGroupID; // 0x4f8 | Schema_Atomic | Size: 0x8
			GlobalTypes::CUtlSymbolLarge m_associatedRelayTargetName; // 0x500 | Schema_Atomic | Size: 0x8
			bool m_fixupNames; // 0x508 | Schema_Builtin | Size: 0x1
			bool m_bLoadDynamic; // 0x509 | Schema_Builtin | Size: 0x1
			S2_PAD(0x2);
			GlobalTypes::CHandle<server::CPointPrefab> m_associatedRelayEntity; // 0x50c | Schema_Atomic | Size: 0x4
			// char  m_associatedRelayEntity[0x4]; // 0x50c | Schema_Atomic | Size: 0x4
			S2_PAD(0x48); // End padding
		};
		static_assert(offsetof(CS2::server::CPointPrefab, m_targetMapName) == 0x4F0, "m_targetMapName in CPointPrefab should be at offset 0x4F0");
		static_assert(offsetof(CS2::server::CPointPrefab, m_forceWorldGroupID) == 0x4F8, "m_forceWorldGroupID in CPointPrefab should be at offset 0x4F8");
		static_assert(offsetof(CS2::server::CPointPrefab, m_associatedRelayTargetName) == 0x500, "m_associatedRelayTargetName in CPointPrefab should be at offset 0x500");
		static_assert(offsetof(CS2::server::CPointPrefab, m_fixupNames) == 0x508, "m_fixupNames in CPointPrefab should be at offset 0x508");
		static_assert(offsetof(CS2::server::CPointPrefab, m_bLoadDynamic) == 0x509, "m_bLoadDynamic in CPointPrefab should be at offset 0x509");
		static_assert(offsetof(CS2::server::CPointPrefab, m_associatedRelayEntity) == 0x50C, "m_associatedRelayEntity in CPointPrefab should be at offset 0x50C");
		static_assert(sizeof(CS2::server::CPointPrefab) == 0x558, "CPointPrefab size should be 0x558");
	}
}
