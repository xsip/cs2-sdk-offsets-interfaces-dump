// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/server/CLogicalEntity.hpp>
#include <SDK/entity2/CEntityIOOutput.hpp>



namespace CS2 {
	namespace server {
		class CTestPulseIO : public CS2::server::CLogicalEntity {
		public:
			entity2::CEntityIOOutput m_OnVariantVoid; // 0x4f0 | Schema_DeclaredClass | Size: 0x28
			entity2::CEntityIOOutput m_OnVariantBool; // 0x518 | Schema_DeclaredClass | Size: 0x28
			entity2::CEntityIOOutput m_OnVariantInt; // 0x540 | Schema_DeclaredClass | Size: 0x28
			entity2::CEntityIOOutput m_OnVariantFloat; // 0x568 | Schema_DeclaredClass | Size: 0x28
			entity2::CEntityIOOutput m_OnVariantString; // 0x590 | Schema_DeclaredClass | Size: 0x28
			entity2::CEntityIOOutput m_OnVariantColor; // 0x5b8 | Schema_DeclaredClass | Size: 0x28
			entity2::CEntityIOOutput m_OnVariantVector; // 0x5e0 | Schema_DeclaredClass | Size: 0x28
			bool m_bAllowEmptyInputs; // 0x608 | Schema_Builtin | Size: 0x1
			S2_PAD(0x7); // End padding
		};
		static_assert(offsetof(CS2::server::CTestPulseIO, m_OnVariantVoid) == 0x4F0, "m_OnVariantVoid in CTestPulseIO should be at offset 0x4F0");
		static_assert(offsetof(CS2::server::CTestPulseIO, m_OnVariantBool) == 0x518, "m_OnVariantBool in CTestPulseIO should be at offset 0x518");
		static_assert(offsetof(CS2::server::CTestPulseIO, m_OnVariantInt) == 0x540, "m_OnVariantInt in CTestPulseIO should be at offset 0x540");
		static_assert(offsetof(CS2::server::CTestPulseIO, m_OnVariantFloat) == 0x568, "m_OnVariantFloat in CTestPulseIO should be at offset 0x568");
		static_assert(offsetof(CS2::server::CTestPulseIO, m_OnVariantString) == 0x590, "m_OnVariantString in CTestPulseIO should be at offset 0x590");
		static_assert(offsetof(CS2::server::CTestPulseIO, m_OnVariantColor) == 0x5B8, "m_OnVariantColor in CTestPulseIO should be at offset 0x5B8");
		static_assert(offsetof(CS2::server::CTestPulseIO, m_OnVariantVector) == 0x5E0, "m_OnVariantVector in CTestPulseIO should be at offset 0x5E0");
		static_assert(offsetof(CS2::server::CTestPulseIO, m_bAllowEmptyInputs) == 0x608, "m_bAllowEmptyInputs in CTestPulseIO should be at offset 0x608");
		static_assert(sizeof(CS2::server::CTestPulseIO) == 0x610, "CTestPulseIO size should be 0x610");
	}
}
