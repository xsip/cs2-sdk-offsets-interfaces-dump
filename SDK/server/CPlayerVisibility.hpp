// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <SDK/GlobalTypes.hpp>

#include <SDK/server/CBaseEntity.hpp>



namespace CS2 {
	namespace server {
		class CPlayerVisibility : public CS2::server::CBaseEntity {
		public:
			float32 m_flVisibilityStrength; // 0x4f0 | Schema_Builtin | Size: 0x4
			float32 m_flFogDistanceMultiplier; // 0x4f4 | Schema_Builtin | Size: 0x4
			float32 m_flFogMaxDensityMultiplier; // 0x4f8 | Schema_Builtin | Size: 0x4
			float32 m_flFadeTime; // 0x4fc | Schema_Builtin | Size: 0x4
			bool m_bStartDisabled; // 0x500 | Schema_Builtin | Size: 0x1
			bool m_bIsEnabled; // 0x501 | Schema_Builtin | Size: 0x1
			S2_PAD(0x6); // End padding
		};
		static_assert(offsetof(CS2::server::CPlayerVisibility, m_flVisibilityStrength) == 0x4F0, "m_flVisibilityStrength in CPlayerVisibility should be at offset 0x4F0");
		static_assert(offsetof(CS2::server::CPlayerVisibility, m_flFogDistanceMultiplier) == 0x4F4, "m_flFogDistanceMultiplier in CPlayerVisibility should be at offset 0x4F4");
		static_assert(offsetof(CS2::server::CPlayerVisibility, m_flFogMaxDensityMultiplier) == 0x4F8, "m_flFogMaxDensityMultiplier in CPlayerVisibility should be at offset 0x4F8");
		static_assert(offsetof(CS2::server::CPlayerVisibility, m_flFadeTime) == 0x4FC, "m_flFadeTime in CPlayerVisibility should be at offset 0x4FC");
		static_assert(offsetof(CS2::server::CPlayerVisibility, m_bStartDisabled) == 0x500, "m_bStartDisabled in CPlayerVisibility should be at offset 0x500");
		static_assert(offsetof(CS2::server::CPlayerVisibility, m_bIsEnabled) == 0x501, "m_bIsEnabled in CPlayerVisibility should be at offset 0x501");
		static_assert(sizeof(CS2::server::CPlayerVisibility) == 0x508, "CPlayerVisibility size should be 0x508");
	}
}
