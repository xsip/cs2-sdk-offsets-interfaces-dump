// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/server/CLogicalEntity.hpp>
#include <SDK/entity2/CEntityIOOutput.hpp>



namespace CS2 {
	namespace server {
		class CLogicCase : public CS2::server::CLogicalEntity {
		public:
			GlobalTypes::CUtlSymbolLarge m_nCase[32]; // 0x4f0 | Schema_FixedArray | Size: 0x100
			int32_t m_nShuffleCases; // 0x5f0 | Schema_Builtin | Size: 0x4
			int32_t m_nLastShuffleCase; // 0x5f4 | Schema_Builtin | Size: 0x4
			uint8_t m_uchShuffleCaseMap[32]; // 0x5f8 | Schema_FixedArray | Size: 0x20
			entity2::CEntityIOOutput m_OnCase[32]; // 0x618 | Schema_FixedArray | Size: 0xa000
			// GlobalTypes::CEntityOutputTemplate< GlobalTypes::CVariantBase< CVariantDefaultAllocator > > m_OnDefault; // 0xb18 | Schema_Atomic | Size: 0x28
			char  m_OnDefault[0x28]; // 0xb18 | Schema_Atomic | Size: 0x28
		};
		static_assert(offsetof(CS2::server::CLogicCase, m_nCase) == 0x4F0, "m_nCase in CLogicCase should be at offset 0x4F0");
		static_assert(offsetof(CS2::server::CLogicCase, m_nShuffleCases) == 0x5F0, "m_nShuffleCases in CLogicCase should be at offset 0x5F0");
		static_assert(offsetof(CS2::server::CLogicCase, m_nLastShuffleCase) == 0x5F4, "m_nLastShuffleCase in CLogicCase should be at offset 0x5F4");
		static_assert(offsetof(CS2::server::CLogicCase, m_uchShuffleCaseMap) == 0x5F8, "m_uchShuffleCaseMap in CLogicCase should be at offset 0x5F8");
		static_assert(offsetof(CS2::server::CLogicCase, m_OnCase) == 0x618, "m_OnCase in CLogicCase should be at offset 0x618");
		static_assert(offsetof(CS2::server::CLogicCase, m_OnDefault) == 0xB18, "m_OnDefault in CLogicCase should be at offset 0xB18");
		static_assert(sizeof(CS2::server::CLogicCase) == 0xB40, "CLogicCase size should be 0xB40");
	}
}
