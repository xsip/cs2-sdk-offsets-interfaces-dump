// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <SDK/GlobalTypes.hpp>

#include <SDK/server/CParticleSystem.hpp>



namespace CS2 {
	namespace server {
		class CEnvParticleGlow : public CS2::server::CParticleSystem {
		public:
			float32 m_flAlphaScale; // 0xd50 | Schema_Builtin | Size: 0x4
			float32 m_flRadiusScale; // 0xd54 | Schema_Builtin | Size: 0x4
			float32 m_flSelfIllumScale; // 0xd58 | Schema_Builtin | Size: 0x4
			GlobalTypes::Color m_ColorTint; // 0xd5c | Schema_Atomic | Size: 0x4
			// GlobalTypes::CStrongHandle< resourcesystem::InfoForResourceTypeCTextureBase > m_hTextureOverride; // 0xd60 | Schema_Atomic | Size: 0x8
			char  m_hTextureOverride[0x8]; // 0xd60 | Schema_Atomic | Size: 0x8
		};
		static_assert(offsetof(CS2::server::CEnvParticleGlow, m_flAlphaScale) == 0xD50, "m_flAlphaScale in CEnvParticleGlow should be at offset 0xD50");
		static_assert(offsetof(CS2::server::CEnvParticleGlow, m_flRadiusScale) == 0xD54, "m_flRadiusScale in CEnvParticleGlow should be at offset 0xD54");
		static_assert(offsetof(CS2::server::CEnvParticleGlow, m_flSelfIllumScale) == 0xD58, "m_flSelfIllumScale in CEnvParticleGlow should be at offset 0xD58");
		static_assert(offsetof(CS2::server::CEnvParticleGlow, m_ColorTint) == 0xD5C, "m_ColorTint in CEnvParticleGlow should be at offset 0xD5C");
		static_assert(offsetof(CS2::server::CEnvParticleGlow, m_hTextureOverride) == 0xD60, "m_hTextureOverride in CEnvParticleGlow should be at offset 0xD60");
		static_assert(sizeof(CS2::server::CEnvParticleGlow) == 0xD68, "CEnvParticleGlow size should be 0xD68");
	}
}
