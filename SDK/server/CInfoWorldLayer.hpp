// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/server/CBaseEntity.hpp>
#include <SDK/entity2/CEntityIOOutput.hpp>





using namespace GlobalTypes;
namespace CS2 {
	namespace server {
		class CInfoWorldLayer : public CS2::server::CBaseEntity {
		public:
			entity2::CEntityIOOutput m_pOutputOnEntitiesSpawned; // 0x4f0 | Schema_DeclaredClass | Size: 0x28
			GlobalTypes::CUtlSymbolLarge m_worldName; // 0x518 | Schema_Atomic | Size: 0x8
			GlobalTypes::CUtlSymbolLarge m_layerName; // 0x520 | Schema_Atomic | Size: 0x8
			bool m_bWorldLayerVisible; // 0x528 | Schema_Builtin | Size: 0x1
			bool m_bEntitiesSpawned; // 0x529 | Schema_Builtin | Size: 0x1
			bool m_bCreateAsChildSpawnGroup; // 0x52a | Schema_Builtin | Size: 0x1
			S2_PAD(0x1);
			uint32_t m_hLayerSpawnGroup; // 0x52c | Schema_Builtin | Size: 0x4
		};
		static_assert(offsetof(CS2::server::CInfoWorldLayer, m_pOutputOnEntitiesSpawned) == 0x4F0, "m_pOutputOnEntitiesSpawned in CInfoWorldLayer should be at offset 0x4F0");
		static_assert(offsetof(CS2::server::CInfoWorldLayer, m_worldName) == 0x518, "m_worldName in CInfoWorldLayer should be at offset 0x518");
		static_assert(offsetof(CS2::server::CInfoWorldLayer, m_layerName) == 0x520, "m_layerName in CInfoWorldLayer should be at offset 0x520");
		static_assert(offsetof(CS2::server::CInfoWorldLayer, m_bWorldLayerVisible) == 0x528, "m_bWorldLayerVisible in CInfoWorldLayer should be at offset 0x528");
		static_assert(offsetof(CS2::server::CInfoWorldLayer, m_bEntitiesSpawned) == 0x529, "m_bEntitiesSpawned in CInfoWorldLayer should be at offset 0x529");
		static_assert(offsetof(CS2::server::CInfoWorldLayer, m_bCreateAsChildSpawnGroup) == 0x52A, "m_bCreateAsChildSpawnGroup in CInfoWorldLayer should be at offset 0x52A");
		static_assert(offsetof(CS2::server::CInfoWorldLayer, m_hLayerSpawnGroup) == 0x52C, "m_hLayerSpawnGroup in CInfoWorldLayer should be at offset 0x52C");
		static_assert(sizeof(CS2::server::CInfoWorldLayer) == 0x530, "CInfoWorldLayer size should be 0x530");
	}
}
