// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <SDK/GlobalTypes.hpp>

#include <SDK/pulse_runtime_lib/CPulseCell_BaseYieldingInflow.hpp>
#include <SDK/pulse_runtime_lib/PulseNodeDynamicOutflows_t.hpp>
#include <SDK/pulse_runtime_lib/CPulse_ResumePoint.hpp>



namespace CS2 {
	namespace server {
		class CPulseCell_PlaySequence : public CS2::pulse_runtime_lib::CPulseCell_BaseYieldingInflow {
		public:
			GlobalTypes::CUtlString m_SequenceName; // 0x48 | Schema_Atomic | Size: 0x8
			pulse_runtime_lib::PulseNodeDynamicOutflows_t m_PulseAnimEvents; // 0x50 | Schema_DeclaredClass | Size: 0x18
			pulse_runtime_lib::CPulse_ResumePoint m_OnFinished; // 0x68 | Schema_DeclaredClass | Size: 0x48
			pulse_runtime_lib::CPulse_ResumePoint m_OnCanceled; // 0xb0 | Schema_DeclaredClass | Size: 0x48
		};
		static_assert(offsetof(CS2::server::CPulseCell_PlaySequence, m_SequenceName) == 0x48, "m_SequenceName in CPulseCell_PlaySequence should be at offset 0x48");
		static_assert(offsetof(CS2::server::CPulseCell_PlaySequence, m_PulseAnimEvents) == 0x50, "m_PulseAnimEvents in CPulseCell_PlaySequence should be at offset 0x50");
		static_assert(offsetof(CS2::server::CPulseCell_PlaySequence, m_OnFinished) == 0x68, "m_OnFinished in CPulseCell_PlaySequence should be at offset 0x68");
		static_assert(offsetof(CS2::server::CPulseCell_PlaySequence, m_OnCanceled) == 0xB0, "m_OnCanceled in CPulseCell_PlaySequence should be at offset 0xB0");
		static_assert(sizeof(CS2::server::CPulseCell_PlaySequence) == 0xF8, "CPulseCell_PlaySequence size should be 0xF8");
	}
}
