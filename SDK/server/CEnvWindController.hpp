// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/server/CBaseEntity.hpp>
#include <SDK/server/CEnvWindShared.hpp>



namespace CS2 {
	namespace server {
		class CEnvWindController : public CS2::server::CBaseEntity {
		public:
			server::CEnvWindShared m_EnvWindShared; // 0x4f0 | Schema_DeclaredClass | Size: 0x150
			float32 m_fDirectionVariation; // 0x640 | Schema_Builtin | Size: 0x4
			float32 m_fSpeedVariation; // 0x644 | Schema_Builtin | Size: 0x4
			float32 m_fTurbulence; // 0x648 | Schema_Builtin | Size: 0x4
			float32 m_fVolumeHalfExtentXY; // 0x64c | Schema_Builtin | Size: 0x4
			float32 m_fVolumeHalfExtentZ; // 0x650 | Schema_Builtin | Size: 0x4
			int32_t m_nVolumeResolutionXY; // 0x654 | Schema_Builtin | Size: 0x4
			int32_t m_nVolumeResolutionZ; // 0x658 | Schema_Builtin | Size: 0x4
			int32_t m_nClipmapLevels; // 0x65c | Schema_Builtin | Size: 0x4
			bool m_bIsMaster; // 0x660 | Schema_Builtin | Size: 0x1
			bool m_bFirstTime; // 0x661 | Schema_Builtin | Size: 0x1
			S2_PAD(0x6); // End padding
		};
		static_assert(offsetof(CS2::server::CEnvWindController, m_EnvWindShared) == 0x4F0, "m_EnvWindShared in CEnvWindController should be at offset 0x4F0");
		static_assert(offsetof(CS2::server::CEnvWindController, m_fDirectionVariation) == 0x640, "m_fDirectionVariation in CEnvWindController should be at offset 0x640");
		static_assert(offsetof(CS2::server::CEnvWindController, m_fSpeedVariation) == 0x644, "m_fSpeedVariation in CEnvWindController should be at offset 0x644");
		static_assert(offsetof(CS2::server::CEnvWindController, m_fTurbulence) == 0x648, "m_fTurbulence in CEnvWindController should be at offset 0x648");
		static_assert(offsetof(CS2::server::CEnvWindController, m_fVolumeHalfExtentXY) == 0x64C, "m_fVolumeHalfExtentXY in CEnvWindController should be at offset 0x64C");
		static_assert(offsetof(CS2::server::CEnvWindController, m_fVolumeHalfExtentZ) == 0x650, "m_fVolumeHalfExtentZ in CEnvWindController should be at offset 0x650");
		static_assert(offsetof(CS2::server::CEnvWindController, m_nVolumeResolutionXY) == 0x654, "m_nVolumeResolutionXY in CEnvWindController should be at offset 0x654");
		static_assert(offsetof(CS2::server::CEnvWindController, m_nVolumeResolutionZ) == 0x658, "m_nVolumeResolutionZ in CEnvWindController should be at offset 0x658");
		static_assert(offsetof(CS2::server::CEnvWindController, m_nClipmapLevels) == 0x65C, "m_nClipmapLevels in CEnvWindController should be at offset 0x65C");
		static_assert(offsetof(CS2::server::CEnvWindController, m_bIsMaster) == 0x660, "m_bIsMaster in CEnvWindController should be at offset 0x660");
		static_assert(offsetof(CS2::server::CEnvWindController, m_bFirstTime) == 0x661, "m_bFirstTime in CEnvWindController should be at offset 0x661");
		static_assert(sizeof(CS2::server::CEnvWindController) == 0x668, "CEnvWindController size should be 0x668");
	}
}
