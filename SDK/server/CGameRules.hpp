// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <SDK/GlobalTypes.hpp>

#include <SDK/entity2/CNetworkVarChainer.hpp>



namespace CS2 {
	namespace server {
		class CGameRules  {
		public:
			S2_PAD(0x8);
			entity2::CNetworkVarChainer __m_pChainEntity; // 0x8 | Schema_DeclaredClass | Size: 0x28
			char m_szQuestName[128]; // 0x30 | Schema_FixedArray | Size: 0x80
			int32_t m_nQuestPhase; // 0xb0 | Schema_Builtin | Size: 0x4
			int32_t m_nTotalPausedTicks; // 0xb4 | Schema_Builtin | Size: 0x4
			int32_t m_nPauseStartTick; // 0xb8 | Schema_Builtin | Size: 0x4
			bool m_bGamePaused; // 0xbc | Schema_Builtin | Size: 0x1
			S2_PAD(0x3); // End padding
		};
		static_assert(offsetof(CS2::server::CGameRules, __m_pChainEntity) == 0x8, "__m_pChainEntity in CGameRules should be at offset 0x8");
		static_assert(offsetof(CS2::server::CGameRules, m_szQuestName) == 0x30, "m_szQuestName in CGameRules should be at offset 0x30");
		static_assert(offsetof(CS2::server::CGameRules, m_nQuestPhase) == 0xB0, "m_nQuestPhase in CGameRules should be at offset 0xB0");
		static_assert(offsetof(CS2::server::CGameRules, m_nTotalPausedTicks) == 0xB4, "m_nTotalPausedTicks in CGameRules should be at offset 0xB4");
		static_assert(offsetof(CS2::server::CGameRules, m_nPauseStartTick) == 0xB8, "m_nPauseStartTick in CGameRules should be at offset 0xB8");
		static_assert(offsetof(CS2::server::CGameRules, m_bGamePaused) == 0xBC, "m_bGamePaused in CGameRules should be at offset 0xBC");
		static_assert(sizeof(CS2::server::CGameRules) == 0xC0, "CGameRules size should be 0xC0");
	}
}
