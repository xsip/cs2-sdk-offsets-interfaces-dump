// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/server/CPointEntity.hpp>
#include <SDK/server/CConstantForceController.hpp>



namespace CS2 {
	namespace server {
		class CPhysForce : public CS2::server::CPointEntity {
		public:
			S2_PAD(0x8);
			GlobalTypes::CUtlSymbolLarge m_nameAttach; // 0x4f8 | Schema_Atomic | Size: 0x8
			float32 m_force; // 0x500 | Schema_Builtin | Size: 0x4
			float32 m_forceTime; // 0x504 | Schema_Builtin | Size: 0x4
			// server::CHandle< server::CBaseEntity > m_attachedObject; // 0x508 | Schema_Atomic | Size: 0x4
			char  m_attachedObject[0x4]; // 0x508 | Schema_Atomic | Size: 0x4
			bool m_wasRestored; // 0x50c | Schema_Builtin | Size: 0x1
			S2_PAD(0x3);
			server::CConstantForceController m_integrator; // 0x510 | Schema_DeclaredClass | Size: 0x40
		};
		static_assert(offsetof(CS2::server::CPhysForce, m_nameAttach) == 0x4F8, "m_nameAttach in CPhysForce should be at offset 0x4F8");
		static_assert(offsetof(CS2::server::CPhysForce, m_force) == 0x500, "m_force in CPhysForce should be at offset 0x500");
		static_assert(offsetof(CS2::server::CPhysForce, m_forceTime) == 0x504, "m_forceTime in CPhysForce should be at offset 0x504");
		static_assert(offsetof(CS2::server::CPhysForce, m_attachedObject) == 0x508, "m_attachedObject in CPhysForce should be at offset 0x508");
		static_assert(offsetof(CS2::server::CPhysForce, m_wasRestored) == 0x50C, "m_wasRestored in CPhysForce should be at offset 0x50C");
		static_assert(offsetof(CS2::server::CPhysForce, m_integrator) == 0x510, "m_integrator in CPhysForce should be at offset 0x510");
		static_assert(sizeof(CS2::server::CPhysForce) == 0x550, "CPhysForce size should be 0x550");
	}
}
