// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/server/CPointEntity.hpp>



namespace CS2 {
	namespace server {
		class CInstructorEventEntity : public CS2::server::CPointEntity {
		public:
			GlobalTypes::CUtlSymbolLarge m_iszName; // 0x4f0 | Schema_Atomic | Size: 0x8
			GlobalTypes::CUtlSymbolLarge m_iszHintTargetEntity; // 0x4f8 | Schema_Atomic | Size: 0x8
			// server::CHandle< server::CBasePlayerPawn > m_hTargetPlayer; // 0x500 | Schema_Atomic | Size: 0x4
			char  m_hTargetPlayer[0x4]; // 0x500 | Schema_Atomic | Size: 0x4
			S2_PAD(0x4); // End padding
		};
		static_assert(offsetof(CS2::server::CInstructorEventEntity, m_iszName) == 0x4F0, "m_iszName in CInstructorEventEntity should be at offset 0x4F0");
		static_assert(offsetof(CS2::server::CInstructorEventEntity, m_iszHintTargetEntity) == 0x4F8, "m_iszHintTargetEntity in CInstructorEventEntity should be at offset 0x4F8");
		static_assert(offsetof(CS2::server::CInstructorEventEntity, m_hTargetPlayer) == 0x500, "m_hTargetPlayer in CInstructorEventEntity should be at offset 0x500");
		static_assert(sizeof(CS2::server::CInstructorEventEntity) == 0x508, "CInstructorEventEntity size should be 0x508");
	}
}
