// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/server/CPointEntity.hpp>
#include <SDK/entity2/CEntityIOOutput.hpp>





using namespace GlobalTypes;
namespace CS2 {
	namespace server {
		class CPhysExplosion : public CS2::server::CPointEntity {
		public:
			bool m_bExplodeOnSpawn; // 0x4f0 | Schema_Builtin | Size: 0x1
			S2_PAD(0x3);
			float32 m_flMagnitude; // 0x4f4 | Schema_Builtin | Size: 0x4
			float32 m_flDamage; // 0x4f8 | Schema_Builtin | Size: 0x4
			float32 m_radius; // 0x4fc | Schema_Builtin | Size: 0x4
			GlobalTypes::CUtlSymbolLarge m_targetEntityName; // 0x500 | Schema_Atomic | Size: 0x8
			float32 m_flInnerRadius; // 0x508 | Schema_Builtin | Size: 0x4
			float32 m_flPushScale; // 0x50c | Schema_Builtin | Size: 0x4
			bool m_bConvertToDebrisWhenPossible; // 0x510 | Schema_Builtin | Size: 0x1
			bool m_bAffectInvulnerableEnts; // 0x511 | Schema_Builtin | Size: 0x1
			S2_PAD(0x6);
			entity2::CEntityIOOutput m_OnPushedPlayer; // 0x518 | Schema_DeclaredClass | Size: 0x28
		};
		static_assert(offsetof(CS2::server::CPhysExplosion, m_bExplodeOnSpawn) == 0x4F0, "m_bExplodeOnSpawn in CPhysExplosion should be at offset 0x4F0");
		static_assert(offsetof(CS2::server::CPhysExplosion, m_flMagnitude) == 0x4F4, "m_flMagnitude in CPhysExplosion should be at offset 0x4F4");
		static_assert(offsetof(CS2::server::CPhysExplosion, m_flDamage) == 0x4F8, "m_flDamage in CPhysExplosion should be at offset 0x4F8");
		static_assert(offsetof(CS2::server::CPhysExplosion, m_radius) == 0x4FC, "m_radius in CPhysExplosion should be at offset 0x4FC");
		static_assert(offsetof(CS2::server::CPhysExplosion, m_targetEntityName) == 0x500, "m_targetEntityName in CPhysExplosion should be at offset 0x500");
		static_assert(offsetof(CS2::server::CPhysExplosion, m_flInnerRadius) == 0x508, "m_flInnerRadius in CPhysExplosion should be at offset 0x508");
		static_assert(offsetof(CS2::server::CPhysExplosion, m_flPushScale) == 0x50C, "m_flPushScale in CPhysExplosion should be at offset 0x50C");
		static_assert(offsetof(CS2::server::CPhysExplosion, m_bConvertToDebrisWhenPossible) == 0x510, "m_bConvertToDebrisWhenPossible in CPhysExplosion should be at offset 0x510");
		static_assert(offsetof(CS2::server::CPhysExplosion, m_bAffectInvulnerableEnts) == 0x511, "m_bAffectInvulnerableEnts in CPhysExplosion should be at offset 0x511");
		static_assert(offsetof(CS2::server::CPhysExplosion, m_OnPushedPlayer) == 0x518, "m_OnPushedPlayer in CPhysExplosion should be at offset 0x518");
		static_assert(sizeof(CS2::server::CPhysExplosion) == 0x540, "CPhysExplosion size should be 0x540");
	}
}
