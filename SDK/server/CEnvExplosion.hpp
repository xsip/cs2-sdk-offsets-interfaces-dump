// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <SDK/GlobalTypes.hpp>

#include <SDK/server/CModelPointEntity.hpp>
#include <SDK/client/DamageTypes_t.hpp>
#include <SDK/client/Class_T.hpp>



namespace CS2 {
	namespace server {
		class CEnvExplosion : public CS2::server::CModelPointEntity {
		public:
			int32_t m_iMagnitude; // 0x7f0 | Schema_Builtin | Size: 0x4
			float32 m_flPlayerDamage; // 0x7f4 | Schema_Builtin | Size: 0x4
			int32_t m_iRadiusOverride; // 0x7f8 | Schema_Builtin | Size: 0x4
			float32 m_flInnerRadius; // 0x7fc | Schema_Builtin | Size: 0x4
			float32 m_flDamageForce; // 0x800 | Schema_Builtin | Size: 0x4
			// server::CHandle< server::CBaseEntity > m_hInflictor; // 0x804 | Schema_Atomic | Size: 0x4
			char  m_hInflictor[0x4]; // 0x804 | Schema_Atomic | Size: 0x4
			client::DamageTypes_t m_iCustomDamageType; // 0x808 | Schema_DeclaredEnum | Size: 0x4
			bool m_bCreateDebris; // 0x80c | Schema_Builtin | Size: 0x1
			S2_PAD(0xb);
			GlobalTypes::CUtlSymbolLarge m_iszCustomEffectName; // 0x818 | Schema_Atomic | Size: 0x8
			GlobalTypes::CUtlSymbolLarge m_iszCustomSoundName; // 0x820 | Schema_Atomic | Size: 0x8
			bool m_bSuppressParticleImpulse; // 0x828 | Schema_Builtin | Size: 0x1
			S2_PAD(0x3);
			client::Class_T m_iClassIgnore; // 0x82c | Schema_DeclaredEnum | Size: 0x4
			client::Class_T m_iClassIgnore2; // 0x830 | Schema_DeclaredEnum | Size: 0x4
			S2_PAD(0x4);
			GlobalTypes::CUtlSymbolLarge m_iszEntityIgnoreName; // 0x838 | Schema_Atomic | Size: 0x8
			// server::CHandle< server::CBaseEntity > m_hEntityIgnore; // 0x840 | Schema_Atomic | Size: 0x4
			char  m_hEntityIgnore[0x4]; // 0x840 | Schema_Atomic | Size: 0x4
			S2_PAD(0x4); // End padding
		};
		static_assert(offsetof(CS2::server::CEnvExplosion, m_iMagnitude) == 0x7F0, "m_iMagnitude in CEnvExplosion should be at offset 0x7F0");
		static_assert(offsetof(CS2::server::CEnvExplosion, m_flPlayerDamage) == 0x7F4, "m_flPlayerDamage in CEnvExplosion should be at offset 0x7F4");
		static_assert(offsetof(CS2::server::CEnvExplosion, m_iRadiusOverride) == 0x7F8, "m_iRadiusOverride in CEnvExplosion should be at offset 0x7F8");
		static_assert(offsetof(CS2::server::CEnvExplosion, m_flInnerRadius) == 0x7FC, "m_flInnerRadius in CEnvExplosion should be at offset 0x7FC");
		static_assert(offsetof(CS2::server::CEnvExplosion, m_flDamageForce) == 0x800, "m_flDamageForce in CEnvExplosion should be at offset 0x800");
		static_assert(offsetof(CS2::server::CEnvExplosion, m_hInflictor) == 0x804, "m_hInflictor in CEnvExplosion should be at offset 0x804");
		static_assert(offsetof(CS2::server::CEnvExplosion, m_iCustomDamageType) == 0x808, "m_iCustomDamageType in CEnvExplosion should be at offset 0x808");
		static_assert(offsetof(CS2::server::CEnvExplosion, m_bCreateDebris) == 0x80C, "m_bCreateDebris in CEnvExplosion should be at offset 0x80C");
		static_assert(offsetof(CS2::server::CEnvExplosion, m_iszCustomEffectName) == 0x818, "m_iszCustomEffectName in CEnvExplosion should be at offset 0x818");
		static_assert(offsetof(CS2::server::CEnvExplosion, m_iszCustomSoundName) == 0x820, "m_iszCustomSoundName in CEnvExplosion should be at offset 0x820");
		static_assert(offsetof(CS2::server::CEnvExplosion, m_bSuppressParticleImpulse) == 0x828, "m_bSuppressParticleImpulse in CEnvExplosion should be at offset 0x828");
		static_assert(offsetof(CS2::server::CEnvExplosion, m_iClassIgnore) == 0x82C, "m_iClassIgnore in CEnvExplosion should be at offset 0x82C");
		static_assert(offsetof(CS2::server::CEnvExplosion, m_iClassIgnore2) == 0x830, "m_iClassIgnore2 in CEnvExplosion should be at offset 0x830");
		static_assert(offsetof(CS2::server::CEnvExplosion, m_iszEntityIgnoreName) == 0x838, "m_iszEntityIgnoreName in CEnvExplosion should be at offset 0x838");
		static_assert(offsetof(CS2::server::CEnvExplosion, m_hEntityIgnore) == 0x840, "m_hEntityIgnore in CEnvExplosion should be at offset 0x840");
		static_assert(sizeof(CS2::server::CEnvExplosion) == 0x848, "CEnvExplosion size should be 0x848");
	}
}
