// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif





namespace CS2 {
	namespace server {
		class CCSPlayerPawn;
	}
}


using namespace GlobalTypes;
namespace CS2 {
	namespace server {
		class CRetakeGameRules  {
		public:
			S2_PAD(0x138);
			int32_t m_nMatchSeed; // 0x138 | Schema_Builtin | Size: 0x4
			bool m_bBlockersPresent; // 0x13c | Schema_Builtin | Size: 0x1
			bool m_bRoundInProgress; // 0x13d | Schema_Builtin | Size: 0x1
			S2_PAD(0x2);
			int32_t m_iFirstSecondHalfRound; // 0x140 | Schema_Builtin | Size: 0x4
			int32_t m_iBombSite; // 0x144 | Schema_Builtin | Size: 0x4
			GlobalTypes::CHandle<server::CCSPlayerPawn> m_hBombPlanter; // 0x148 | Schema_Atomic | Size: 0x4
			// char  m_hBombPlanter[0x4]; // 0x148 | Schema_Atomic | Size: 0x4
			S2_PAD(0xa4); // End padding
		};
		static_assert(offsetof(CS2::server::CRetakeGameRules, m_nMatchSeed) == 0x138, "m_nMatchSeed in CRetakeGameRules should be at offset 0x138");
		static_assert(offsetof(CS2::server::CRetakeGameRules, m_bBlockersPresent) == 0x13C, "m_bBlockersPresent in CRetakeGameRules should be at offset 0x13C");
		static_assert(offsetof(CS2::server::CRetakeGameRules, m_bRoundInProgress) == 0x13D, "m_bRoundInProgress in CRetakeGameRules should be at offset 0x13D");
		static_assert(offsetof(CS2::server::CRetakeGameRules, m_iFirstSecondHalfRound) == 0x140, "m_iFirstSecondHalfRound in CRetakeGameRules should be at offset 0x140");
		static_assert(offsetof(CS2::server::CRetakeGameRules, m_iBombSite) == 0x144, "m_iBombSite in CRetakeGameRules should be at offset 0x144");
		static_assert(offsetof(CS2::server::CRetakeGameRules, m_hBombPlanter) == 0x148, "m_hBombPlanter in CRetakeGameRules should be at offset 0x148");
		static_assert(sizeof(CS2::server::CRetakeGameRules) == 0x1F0, "CRetakeGameRules size should be 0x1F0");
	}
}
