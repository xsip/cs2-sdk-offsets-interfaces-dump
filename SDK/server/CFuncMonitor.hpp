// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <SDK/GlobalTypes.hpp>

#include <SDK/server/CFuncBrush.hpp>



namespace CS2 {
	namespace server {
		class CFuncMonitor : public CS2::server::CFuncBrush {
		public:
			GlobalTypes::CUtlString m_targetCamera; // 0x810 | Schema_Atomic | Size: 0x8
			int32_t m_nResolutionEnum; // 0x818 | Schema_Builtin | Size: 0x4
			bool m_bRenderShadows; // 0x81c | Schema_Builtin | Size: 0x1
			bool m_bUseUniqueColorTarget; // 0x81d | Schema_Builtin | Size: 0x1
			S2_PAD(0x2);
			GlobalTypes::CUtlString m_brushModelName; // 0x820 | Schema_Atomic | Size: 0x8
			// server::CHandle< server::CBaseEntity > m_hTargetCamera; // 0x828 | Schema_Atomic | Size: 0x4
			char  m_hTargetCamera[0x4]; // 0x828 | Schema_Atomic | Size: 0x4
			bool m_bEnabled; // 0x82c | Schema_Builtin | Size: 0x1
			bool m_bDraw3DSkybox; // 0x82d | Schema_Builtin | Size: 0x1
			bool m_bStartEnabled; // 0x82e | Schema_Builtin | Size: 0x1
			S2_PAD(0x1); // End padding
		};
		static_assert(offsetof(CS2::server::CFuncMonitor, m_targetCamera) == 0x810, "m_targetCamera in CFuncMonitor should be at offset 0x810");
		static_assert(offsetof(CS2::server::CFuncMonitor, m_nResolutionEnum) == 0x818, "m_nResolutionEnum in CFuncMonitor should be at offset 0x818");
		static_assert(offsetof(CS2::server::CFuncMonitor, m_bRenderShadows) == 0x81C, "m_bRenderShadows in CFuncMonitor should be at offset 0x81C");
		static_assert(offsetof(CS2::server::CFuncMonitor, m_bUseUniqueColorTarget) == 0x81D, "m_bUseUniqueColorTarget in CFuncMonitor should be at offset 0x81D");
		static_assert(offsetof(CS2::server::CFuncMonitor, m_brushModelName) == 0x820, "m_brushModelName in CFuncMonitor should be at offset 0x820");
		static_assert(offsetof(CS2::server::CFuncMonitor, m_hTargetCamera) == 0x828, "m_hTargetCamera in CFuncMonitor should be at offset 0x828");
		static_assert(offsetof(CS2::server::CFuncMonitor, m_bEnabled) == 0x82C, "m_bEnabled in CFuncMonitor should be at offset 0x82C");
		static_assert(offsetof(CS2::server::CFuncMonitor, m_bDraw3DSkybox) == 0x82D, "m_bDraw3DSkybox in CFuncMonitor should be at offset 0x82D");
		static_assert(offsetof(CS2::server::CFuncMonitor, m_bStartEnabled) == 0x82E, "m_bStartEnabled in CFuncMonitor should be at offset 0x82E");
		static_assert(sizeof(CS2::server::CFuncMonitor) == 0x830, "CFuncMonitor size should be 0x830");
	}
}
