// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/server/CFuncBrush.hpp>



namespace CS2 {
	namespace server {
		class CFuncMonitor : public CS2::server::CFuncBrush {
		public:
			GlobalTypes::CUtlString m_targetCamera; // 0x7f8 | Schema_Atomic | Size: 0x8
			int32_t m_nResolutionEnum; // 0x800 | Schema_Builtin | Size: 0x4
			bool m_bRenderShadows; // 0x804 | Schema_Builtin | Size: 0x1
			bool m_bUseUniqueColorTarget; // 0x805 | Schema_Builtin | Size: 0x1
			S2_PAD(0x2);
			GlobalTypes::CUtlString m_brushModelName; // 0x808 | Schema_Atomic | Size: 0x8
			// server::CHandle< server::CBaseEntity > m_hTargetCamera; // 0x810 | Schema_Atomic | Size: 0x4
			char  m_hTargetCamera[0x4]; // 0x810 | Schema_Atomic | Size: 0x4
			bool m_bEnabled; // 0x814 | Schema_Builtin | Size: 0x1
			bool m_bDraw3DSkybox; // 0x815 | Schema_Builtin | Size: 0x1
			bool m_bStartEnabled; // 0x816 | Schema_Builtin | Size: 0x1
			S2_PAD(0x1); // End padding
		};
		static_assert(offsetof(CS2::server::CFuncMonitor, m_targetCamera) == 0x7F8, "m_targetCamera in CFuncMonitor should be at offset 0x7F8");
		static_assert(offsetof(CS2::server::CFuncMonitor, m_nResolutionEnum) == 0x800, "m_nResolutionEnum in CFuncMonitor should be at offset 0x800");
		static_assert(offsetof(CS2::server::CFuncMonitor, m_bRenderShadows) == 0x804, "m_bRenderShadows in CFuncMonitor should be at offset 0x804");
		static_assert(offsetof(CS2::server::CFuncMonitor, m_bUseUniqueColorTarget) == 0x805, "m_bUseUniqueColorTarget in CFuncMonitor should be at offset 0x805");
		static_assert(offsetof(CS2::server::CFuncMonitor, m_brushModelName) == 0x808, "m_brushModelName in CFuncMonitor should be at offset 0x808");
		static_assert(offsetof(CS2::server::CFuncMonitor, m_hTargetCamera) == 0x810, "m_hTargetCamera in CFuncMonitor should be at offset 0x810");
		static_assert(offsetof(CS2::server::CFuncMonitor, m_bEnabled) == 0x814, "m_bEnabled in CFuncMonitor should be at offset 0x814");
		static_assert(offsetof(CS2::server::CFuncMonitor, m_bDraw3DSkybox) == 0x815, "m_bDraw3DSkybox in CFuncMonitor should be at offset 0x815");
		static_assert(offsetof(CS2::server::CFuncMonitor, m_bStartEnabled) == 0x816, "m_bStartEnabled in CFuncMonitor should be at offset 0x816");
		static_assert(sizeof(CS2::server::CFuncMonitor) == 0x818, "CFuncMonitor size should be 0x818");
	}
}
