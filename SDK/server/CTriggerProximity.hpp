// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <SDK/GlobalTypes.hpp>

#include <SDK/server/CBaseTrigger.hpp>



namespace CS2 {
	namespace server {
		class CTriggerProximity : public CS2::server::CBaseTrigger {
		public:
			// server::CHandle< server::CBaseEntity > m_hMeasureTarget; // 0x9a8 | Schema_Atomic | Size: 0x4
			char  m_hMeasureTarget[0x4]; // 0x9a8 | Schema_Atomic | Size: 0x4
			S2_PAD(0x4);
			GlobalTypes::CUtlSymbolLarge m_iszMeasureTarget; // 0x9b0 | Schema_Atomic | Size: 0x8
			float32 m_fRadius; // 0x9b8 | Schema_Builtin | Size: 0x4
			int32_t m_nTouchers; // 0x9bc | Schema_Builtin | Size: 0x4
			// GlobalTypes::CEntityOutputTemplate< float32 > m_NearestEntityDistance; // 0x9c0 | Schema_Atomic | Size: 0x28
			char  m_NearestEntityDistance[0x28]; // 0x9c0 | Schema_Atomic | Size: 0x28
		};
		static_assert(offsetof(CS2::server::CTriggerProximity, m_hMeasureTarget) == 0x9A8, "m_hMeasureTarget in CTriggerProximity should be at offset 0x9A8");
		static_assert(offsetof(CS2::server::CTriggerProximity, m_iszMeasureTarget) == 0x9B0, "m_iszMeasureTarget in CTriggerProximity should be at offset 0x9B0");
		static_assert(offsetof(CS2::server::CTriggerProximity, m_fRadius) == 0x9B8, "m_fRadius in CTriggerProximity should be at offset 0x9B8");
		static_assert(offsetof(CS2::server::CTriggerProximity, m_nTouchers) == 0x9BC, "m_nTouchers in CTriggerProximity should be at offset 0x9BC");
		static_assert(offsetof(CS2::server::CTriggerProximity, m_NearestEntityDistance) == 0x9C0, "m_NearestEntityDistance in CTriggerProximity should be at offset 0x9C0");
		static_assert(sizeof(CS2::server::CTriggerProximity) == 0x9E8, "CTriggerProximity size should be 0x9E8");
	}
}
