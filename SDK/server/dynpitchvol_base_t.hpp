// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif







using namespace GlobalTypes;
namespace CS2 {
	namespace server {
		class dynpitchvol_base_t  {
		public:
			int32_t preset; // 0x0 | Schema_Builtin | Size: 0x4
			int32_t pitchrun; // 0x4 | Schema_Builtin | Size: 0x4
			int32_t pitchstart; // 0x8 | Schema_Builtin | Size: 0x4
			int32_t spinup; // 0xc | Schema_Builtin | Size: 0x4
			int32_t spindown; // 0x10 | Schema_Builtin | Size: 0x4
			int32_t volrun; // 0x14 | Schema_Builtin | Size: 0x4
			int32_t volstart; // 0x18 | Schema_Builtin | Size: 0x4
			int32_t fadein; // 0x1c | Schema_Builtin | Size: 0x4
			int32_t fadeout; // 0x20 | Schema_Builtin | Size: 0x4
			int32_t lfotype; // 0x24 | Schema_Builtin | Size: 0x4
			int32_t lforate; // 0x28 | Schema_Builtin | Size: 0x4
			int32_t lfomodpitch; // 0x2c | Schema_Builtin | Size: 0x4
			int32_t lfomodvol; // 0x30 | Schema_Builtin | Size: 0x4
			int32_t cspinup; // 0x34 | Schema_Builtin | Size: 0x4
			int32_t cspincount; // 0x38 | Schema_Builtin | Size: 0x4
			int32_t pitch; // 0x3c | Schema_Builtin | Size: 0x4
			int32_t spinupsav; // 0x40 | Schema_Builtin | Size: 0x4
			int32_t spindownsav; // 0x44 | Schema_Builtin | Size: 0x4
			int32_t pitchfrac; // 0x48 | Schema_Builtin | Size: 0x4
			int32_t vol; // 0x4c | Schema_Builtin | Size: 0x4
			int32_t fadeinsav; // 0x50 | Schema_Builtin | Size: 0x4
			int32_t fadeoutsav; // 0x54 | Schema_Builtin | Size: 0x4
			int32_t volfrac; // 0x58 | Schema_Builtin | Size: 0x4
			int32_t lfofrac; // 0x5c | Schema_Builtin | Size: 0x4
			int32_t lfomult; // 0x60 | Schema_Builtin | Size: 0x4
		};
		static_assert(offsetof(CS2::server::dynpitchvol_base_t, preset) == 0x0, "preset in dynpitchvol_base_t should be at offset 0x0");
		static_assert(offsetof(CS2::server::dynpitchvol_base_t, pitchrun) == 0x4, "pitchrun in dynpitchvol_base_t should be at offset 0x4");
		static_assert(offsetof(CS2::server::dynpitchvol_base_t, pitchstart) == 0x8, "pitchstart in dynpitchvol_base_t should be at offset 0x8");
		static_assert(offsetof(CS2::server::dynpitchvol_base_t, spinup) == 0xC, "spinup in dynpitchvol_base_t should be at offset 0xC");
		static_assert(offsetof(CS2::server::dynpitchvol_base_t, spindown) == 0x10, "spindown in dynpitchvol_base_t should be at offset 0x10");
		static_assert(offsetof(CS2::server::dynpitchvol_base_t, volrun) == 0x14, "volrun in dynpitchvol_base_t should be at offset 0x14");
		static_assert(offsetof(CS2::server::dynpitchvol_base_t, volstart) == 0x18, "volstart in dynpitchvol_base_t should be at offset 0x18");
		static_assert(offsetof(CS2::server::dynpitchvol_base_t, fadein) == 0x1C, "fadein in dynpitchvol_base_t should be at offset 0x1C");
		static_assert(offsetof(CS2::server::dynpitchvol_base_t, fadeout) == 0x20, "fadeout in dynpitchvol_base_t should be at offset 0x20");
		static_assert(offsetof(CS2::server::dynpitchvol_base_t, lfotype) == 0x24, "lfotype in dynpitchvol_base_t should be at offset 0x24");
		static_assert(offsetof(CS2::server::dynpitchvol_base_t, lforate) == 0x28, "lforate in dynpitchvol_base_t should be at offset 0x28");
		static_assert(offsetof(CS2::server::dynpitchvol_base_t, lfomodpitch) == 0x2C, "lfomodpitch in dynpitchvol_base_t should be at offset 0x2C");
		static_assert(offsetof(CS2::server::dynpitchvol_base_t, lfomodvol) == 0x30, "lfomodvol in dynpitchvol_base_t should be at offset 0x30");
		static_assert(offsetof(CS2::server::dynpitchvol_base_t, cspinup) == 0x34, "cspinup in dynpitchvol_base_t should be at offset 0x34");
		static_assert(offsetof(CS2::server::dynpitchvol_base_t, cspincount) == 0x38, "cspincount in dynpitchvol_base_t should be at offset 0x38");
		static_assert(offsetof(CS2::server::dynpitchvol_base_t, pitch) == 0x3C, "pitch in dynpitchvol_base_t should be at offset 0x3C");
		static_assert(offsetof(CS2::server::dynpitchvol_base_t, spinupsav) == 0x40, "spinupsav in dynpitchvol_base_t should be at offset 0x40");
		static_assert(offsetof(CS2::server::dynpitchvol_base_t, spindownsav) == 0x44, "spindownsav in dynpitchvol_base_t should be at offset 0x44");
		static_assert(offsetof(CS2::server::dynpitchvol_base_t, pitchfrac) == 0x48, "pitchfrac in dynpitchvol_base_t should be at offset 0x48");
		static_assert(offsetof(CS2::server::dynpitchvol_base_t, vol) == 0x4C, "vol in dynpitchvol_base_t should be at offset 0x4C");
		static_assert(offsetof(CS2::server::dynpitchvol_base_t, fadeinsav) == 0x50, "fadeinsav in dynpitchvol_base_t should be at offset 0x50");
		static_assert(offsetof(CS2::server::dynpitchvol_base_t, fadeoutsav) == 0x54, "fadeoutsav in dynpitchvol_base_t should be at offset 0x54");
		static_assert(offsetof(CS2::server::dynpitchvol_base_t, volfrac) == 0x58, "volfrac in dynpitchvol_base_t should be at offset 0x58");
		static_assert(offsetof(CS2::server::dynpitchvol_base_t, lfofrac) == 0x5C, "lfofrac in dynpitchvol_base_t should be at offset 0x5C");
		static_assert(offsetof(CS2::server::dynpitchvol_base_t, lfomult) == 0x60, "lfomult in dynpitchvol_base_t should be at offset 0x60");
		static_assert(sizeof(CS2::server::dynpitchvol_base_t) == 0x64, "dynpitchvol_base_t size should be 0x64");
	}
}
