// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/server/CPointEntity.hpp>





using namespace GlobalTypes;
namespace CS2 {
	namespace server {
		class CTankTargetChange : public CS2::server::CPointEntity {
		public:
			// GlobalTypes::CVariantBase< entity2::CVariantDefaultAllocator > m_newTarget; // 0x4f0 | Schema_Atomic | Size: 0x10
			char  m_newTarget[0x10]; // 0x4f0 | Schema_Atomic | Size: 0x10
			GlobalTypes::CUtlSymbolLarge m_newTargetName; // 0x500 | Schema_Atomic | Size: 0x8
		};
		static_assert(offsetof(CS2::server::CTankTargetChange, m_newTarget) == 0x4F0, "m_newTarget in CTankTargetChange should be at offset 0x4F0");
		static_assert(offsetof(CS2::server::CTankTargetChange, m_newTargetName) == 0x500, "m_newTargetName in CTankTargetChange should be at offset 0x500");
		static_assert(sizeof(CS2::server::CTankTargetChange) == 0x508, "CTankTargetChange size should be 0x508");
	}
}
