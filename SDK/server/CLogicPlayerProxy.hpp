// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <SDK/GlobalTypes.hpp>

#include <SDK/server/CLogicalEntity.hpp>
#include <SDK/entity2/CEntityIOOutput.hpp>



namespace CS2 {
	namespace server {
		class CLogicPlayerProxy : public CS2::server::CLogicalEntity {
		public:
			// server::CHandle< server::CBaseEntity > m_hPlayer; // 0x4f0 | Schema_Atomic | Size: 0x4
			char  m_hPlayer[0x4]; // 0x4f0 | Schema_Atomic | Size: 0x4
			S2_PAD(0x4);
			entity2::CEntityIOOutput m_PlayerHasAmmo; // 0x4f8 | Schema_DeclaredClass | Size: 0x28
			entity2::CEntityIOOutput m_PlayerHasNoAmmo; // 0x520 | Schema_DeclaredClass | Size: 0x28
			entity2::CEntityIOOutput m_PlayerDied; // 0x548 | Schema_DeclaredClass | Size: 0x28
			// GlobalTypes::CEntityOutputTemplate< int32 > m_RequestedPlayerHealth; // 0x570 | Schema_Atomic | Size: 0x28
			char  m_RequestedPlayerHealth[0x28]; // 0x570 | Schema_Atomic | Size: 0x28
		};
		static_assert(offsetof(CS2::server::CLogicPlayerProxy, m_hPlayer) == 0x4F0, "m_hPlayer in CLogicPlayerProxy should be at offset 0x4F0");
		static_assert(offsetof(CS2::server::CLogicPlayerProxy, m_PlayerHasAmmo) == 0x4F8, "m_PlayerHasAmmo in CLogicPlayerProxy should be at offset 0x4F8");
		static_assert(offsetof(CS2::server::CLogicPlayerProxy, m_PlayerHasNoAmmo) == 0x520, "m_PlayerHasNoAmmo in CLogicPlayerProxy should be at offset 0x520");
		static_assert(offsetof(CS2::server::CLogicPlayerProxy, m_PlayerDied) == 0x548, "m_PlayerDied in CLogicPlayerProxy should be at offset 0x548");
		static_assert(offsetof(CS2::server::CLogicPlayerProxy, m_RequestedPlayerHealth) == 0x570, "m_RequestedPlayerHealth in CLogicPlayerProxy should be at offset 0x570");
		static_assert(sizeof(CS2::server::CLogicPlayerProxy) == 0x598, "CLogicPlayerProxy size should be 0x598");
	}
}
