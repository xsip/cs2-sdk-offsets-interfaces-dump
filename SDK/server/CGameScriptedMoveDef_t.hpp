// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/client/ForcedCrouchState_t.hpp>





using namespace GlobalTypes;
namespace CS2 {
	namespace server {
		class CGameScriptedMoveDef_t  {
		public:
			GlobalTypes::Vector m_vDestOffset; // 0x0 | Schema_Atomic | Size: 0xc
			// server::CHandle< server::CBaseEntity > m_hDestEntity; // 0xc | Schema_Atomic | Size: 0x4
			char  m_hDestEntity[0x4]; // 0xc | Schema_Atomic | Size: 0x4
			GlobalTypes::QAngle m_angDest; // 0x10 | Schema_Atomic | Size: 0xc
			float32 m_flDuration; // 0x1c | Schema_Builtin | Size: 0x4
			float32 m_flAngRate; // 0x20 | Schema_Builtin | Size: 0x4
			float32 m_flMoveSpeed; // 0x24 | Schema_Builtin | Size: 0x4
			bool m_bAimDisabled; // 0x28 | Schema_Builtin | Size: 0x1
			bool m_bIgnoreRotation; // 0x29 | Schema_Builtin | Size: 0x1
			S2_PAD(0x2);
			client::ForcedCrouchState_t m_nForcedCrouchState; // 0x2c | Schema_DeclaredEnum | Size: 0x4
		};
		static_assert(offsetof(CS2::server::CGameScriptedMoveDef_t, m_vDestOffset) == 0x0, "m_vDestOffset in CGameScriptedMoveDef_t should be at offset 0x0");
		static_assert(offsetof(CS2::server::CGameScriptedMoveDef_t, m_hDestEntity) == 0xC, "m_hDestEntity in CGameScriptedMoveDef_t should be at offset 0xC");
		static_assert(offsetof(CS2::server::CGameScriptedMoveDef_t, m_angDest) == 0x10, "m_angDest in CGameScriptedMoveDef_t should be at offset 0x10");
		static_assert(offsetof(CS2::server::CGameScriptedMoveDef_t, m_flDuration) == 0x1C, "m_flDuration in CGameScriptedMoveDef_t should be at offset 0x1C");
		static_assert(offsetof(CS2::server::CGameScriptedMoveDef_t, m_flAngRate) == 0x20, "m_flAngRate in CGameScriptedMoveDef_t should be at offset 0x20");
		static_assert(offsetof(CS2::server::CGameScriptedMoveDef_t, m_flMoveSpeed) == 0x24, "m_flMoveSpeed in CGameScriptedMoveDef_t should be at offset 0x24");
		static_assert(offsetof(CS2::server::CGameScriptedMoveDef_t, m_bAimDisabled) == 0x28, "m_bAimDisabled in CGameScriptedMoveDef_t should be at offset 0x28");
		static_assert(offsetof(CS2::server::CGameScriptedMoveDef_t, m_bIgnoreRotation) == 0x29, "m_bIgnoreRotation in CGameScriptedMoveDef_t should be at offset 0x29");
		static_assert(offsetof(CS2::server::CGameScriptedMoveDef_t, m_nForcedCrouchState) == 0x2C, "m_nForcedCrouchState in CGameScriptedMoveDef_t should be at offset 0x2C");
		static_assert(sizeof(CS2::server::CGameScriptedMoveDef_t) == 0x30, "CGameScriptedMoveDef_t size should be 0x30");
	}
}
