// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <SDK/GlobalTypes.hpp>




namespace CS2 {
	namespace server {
		class CModelState  {
		public:
			S2_PAD(0xd0);
			// GlobalTypes::CStrongHandle< resourcesystem::InfoForResourceTypeCModel > m_hModel; // 0xd0 | Schema_Atomic | Size: 0x8
			char  m_hModel[0x8]; // 0xd0 | Schema_Atomic | Size: 0x8
			GlobalTypes::CUtlSymbolLarge m_ModelName; // 0xd8 | Schema_Atomic | Size: 0x8
			S2_PAD(0x45);
			bool m_bClientClothCreationSuppressed; // 0x125 | Schema_Builtin | Size: 0x1
			S2_PAD(0xaa);
			uint64_t m_MeshGroupMask; // 0x1d0 | Schema_Builtin | Size: 0x8
			S2_PAD(0x48);
			// GlobalTypes::CNetworkUtlVectorBase< int32 > m_nBodyGroupChoices; // 0x220 | Schema_Atomic | Size: 0x18
			char  m_nBodyGroupChoices[0x18]; // 0x220 | Schema_Atomic | Size: 0x18
			S2_PAD(0x32);
			int8_t m_nIdealMotionType; // 0x26a | Schema_Builtin | Size: 0x1
			int8_t m_nForceLOD; // 0x26b | Schema_Builtin | Size: 0x1
			int8_t m_nClothUpdateFlags; // 0x26c | Schema_Builtin | Size: 0x1
			S2_PAD(0x13); // End padding
		};
		static_assert(offsetof(CS2::server::CModelState, m_hModel) == 0xD0, "m_hModel in CModelState should be at offset 0xD0");
		static_assert(offsetof(CS2::server::CModelState, m_ModelName) == 0xD8, "m_ModelName in CModelState should be at offset 0xD8");
		static_assert(offsetof(CS2::server::CModelState, m_bClientClothCreationSuppressed) == 0x125, "m_bClientClothCreationSuppressed in CModelState should be at offset 0x125");
		static_assert(offsetof(CS2::server::CModelState, m_MeshGroupMask) == 0x1D0, "m_MeshGroupMask in CModelState should be at offset 0x1D0");
		static_assert(offsetof(CS2::server::CModelState, m_nBodyGroupChoices) == 0x220, "m_nBodyGroupChoices in CModelState should be at offset 0x220");
		static_assert(offsetof(CS2::server::CModelState, m_nIdealMotionType) == 0x26A, "m_nIdealMotionType in CModelState should be at offset 0x26A");
		static_assert(offsetof(CS2::server::CModelState, m_nForceLOD) == 0x26B, "m_nForceLOD in CModelState should be at offset 0x26B");
		static_assert(offsetof(CS2::server::CModelState, m_nClothUpdateFlags) == 0x26C, "m_nClothUpdateFlags in CModelState should be at offset 0x26C");
		static_assert(sizeof(CS2::server::CModelState) == 0x280, "CModelState size should be 0x280");
	}
}
