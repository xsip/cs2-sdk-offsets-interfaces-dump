// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/server/CBaseModelEntity.hpp>



namespace CS2 {
	namespace server {
		class CBaseFilter;
	}
}


using namespace GlobalTypes;
namespace CS2 {
	namespace server {
		class CTriggerVolume : public CS2::server::CBaseModelEntity {
		public:
			GlobalTypes::CUtlSymbolLarge m_iFilterName; // 0x7d8 | Schema_Atomic | Size: 0x8
			GlobalTypes::CHandle<server::CBaseFilter> m_hFilter; // 0x7e0 | Schema_Atomic | Size: 0x4
			// char  m_hFilter[0x4]; // 0x7e0 | Schema_Atomic | Size: 0x4
			S2_PAD(0x4); // End padding
		};
		static_assert(offsetof(CS2::server::CTriggerVolume, m_iFilterName) == 0x7D8, "m_iFilterName in CTriggerVolume should be at offset 0x7D8");
		static_assert(offsetof(CS2::server::CTriggerVolume, m_hFilter) == 0x7E0, "m_hFilter in CTriggerVolume should be at offset 0x7E0");
		static_assert(sizeof(CS2::server::CTriggerVolume) == 0x7E8, "CTriggerVolume size should be 0x7E8");
	}
}
