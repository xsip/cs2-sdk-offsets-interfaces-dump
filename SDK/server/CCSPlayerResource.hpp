// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/server/CBaseEntity.hpp>





using namespace GlobalTypes;
namespace CS2 {
	namespace server {
		class CCSPlayerResource : public CS2::server::CBaseEntity {
		public:
			bool m_bHostageAlive[12]; // 0x4f0 | Schema_FixedArray | Size: 0xc
			bool m_isHostageFollowingSomeone[12]; // 0x4fc | Schema_FixedArray | Size: 0xc
			GlobalTypes::CEntityIndex m_iHostageEntityIDs[12]; // 0x508 | Schema_FixedArray | Size: 0x30
			GlobalTypes::Vector m_bombsiteCenterA; // 0x538 | Schema_Atomic | Size: 0xc
			GlobalTypes::Vector m_bombsiteCenterB; // 0x544 | Schema_Atomic | Size: 0xc
			int32_t m_hostageRescueX[4]; // 0x550 | Schema_FixedArray | Size: 0x10
			int32_t m_hostageRescueY[4]; // 0x560 | Schema_FixedArray | Size: 0x10
			int32_t m_hostageRescueZ[4]; // 0x570 | Schema_FixedArray | Size: 0x10
			bool m_bEndMatchNextMapAllVoted; // 0x580 | Schema_Builtin | Size: 0x1
			bool m_foundGoalPositions; // 0x581 | Schema_Builtin | Size: 0x1
			S2_PAD(0x6); // End padding
		};
		static_assert(offsetof(CS2::server::CCSPlayerResource, m_bHostageAlive) == 0x4F0, "m_bHostageAlive in CCSPlayerResource should be at offset 0x4F0");
		static_assert(offsetof(CS2::server::CCSPlayerResource, m_isHostageFollowingSomeone) == 0x4FC, "m_isHostageFollowingSomeone in CCSPlayerResource should be at offset 0x4FC");
		static_assert(offsetof(CS2::server::CCSPlayerResource, m_iHostageEntityIDs) == 0x508, "m_iHostageEntityIDs in CCSPlayerResource should be at offset 0x508");
		static_assert(offsetof(CS2::server::CCSPlayerResource, m_bombsiteCenterA) == 0x538, "m_bombsiteCenterA in CCSPlayerResource should be at offset 0x538");
		static_assert(offsetof(CS2::server::CCSPlayerResource, m_bombsiteCenterB) == 0x544, "m_bombsiteCenterB in CCSPlayerResource should be at offset 0x544");
		static_assert(offsetof(CS2::server::CCSPlayerResource, m_hostageRescueX) == 0x550, "m_hostageRescueX in CCSPlayerResource should be at offset 0x550");
		static_assert(offsetof(CS2::server::CCSPlayerResource, m_hostageRescueY) == 0x560, "m_hostageRescueY in CCSPlayerResource should be at offset 0x560");
		static_assert(offsetof(CS2::server::CCSPlayerResource, m_hostageRescueZ) == 0x570, "m_hostageRescueZ in CCSPlayerResource should be at offset 0x570");
		static_assert(offsetof(CS2::server::CCSPlayerResource, m_bEndMatchNextMapAllVoted) == 0x580, "m_bEndMatchNextMapAllVoted in CCSPlayerResource should be at offset 0x580");
		static_assert(offsetof(CS2::server::CCSPlayerResource, m_foundGoalPositions) == 0x581, "m_foundGoalPositions in CCSPlayerResource should be at offset 0x581");
		static_assert(sizeof(CS2::server::CCSPlayerResource) == 0x588, "CCSPlayerResource size should be 0x588");
	}
}
