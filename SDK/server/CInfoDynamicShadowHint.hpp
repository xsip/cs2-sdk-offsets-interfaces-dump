// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <SDK/GlobalTypes.hpp>

#include <SDK/server/CPointEntity.hpp>



namespace CS2 {
	namespace server {
		class CInfoDynamicShadowHint : public CS2::server::CPointEntity {
		public:
			bool m_bDisabled; // 0x4f0 | Schema_Builtin | Size: 0x1
			S2_PAD(0x3);
			float32 m_flRange; // 0x4f4 | Schema_Builtin | Size: 0x4
			int32_t m_nImportance; // 0x4f8 | Schema_Builtin | Size: 0x4
			int32_t m_nLightChoice; // 0x4fc | Schema_Builtin | Size: 0x4
			// server::CHandle< server::CBaseEntity > m_hLight; // 0x500 | Schema_Atomic | Size: 0x4
			char  m_hLight[0x4]; // 0x500 | Schema_Atomic | Size: 0x4
			S2_PAD(0x4); // End padding
		};
		static_assert(offsetof(CS2::server::CInfoDynamicShadowHint, m_bDisabled) == 0x4F0, "m_bDisabled in CInfoDynamicShadowHint should be at offset 0x4F0");
		static_assert(offsetof(CS2::server::CInfoDynamicShadowHint, m_flRange) == 0x4F4, "m_flRange in CInfoDynamicShadowHint should be at offset 0x4F4");
		static_assert(offsetof(CS2::server::CInfoDynamicShadowHint, m_nImportance) == 0x4F8, "m_nImportance in CInfoDynamicShadowHint should be at offset 0x4F8");
		static_assert(offsetof(CS2::server::CInfoDynamicShadowHint, m_nLightChoice) == 0x4FC, "m_nLightChoice in CInfoDynamicShadowHint should be at offset 0x4FC");
		static_assert(offsetof(CS2::server::CInfoDynamicShadowHint, m_hLight) == 0x500, "m_hLight in CInfoDynamicShadowHint should be at offset 0x500");
		static_assert(sizeof(CS2::server::CInfoDynamicShadowHint) == 0x508, "CInfoDynamicShadowHint size should be 0x508");
	}
}
