// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/client/IChoreoServices.hpp>
#include <SDK/client/ScriptState_t.hpp>
#include <SDK/client/ChoreoState_t.hpp>
#include <SDK/entity2/GameTime_t.hpp>





using namespace GlobalTypes;
namespace CS2 {
	namespace server {
		class CGameChoreoServices : public CS2::client::IChoreoServices {
		public:
			// server::CHandle< server::CBaseAnimGraph > m_hOwner; // 0x8 | Schema_Atomic | Size: 0x4
			char  m_hOwner[0x4]; // 0x8 | Schema_Atomic | Size: 0x4
			// server::CHandle< server::CScriptedSequence > m_hScriptedSequence; // 0xc | Schema_Atomic | Size: 0x4
			char  m_hScriptedSequence[0x4]; // 0xc | Schema_Atomic | Size: 0x4
			client::ScriptState_t m_scriptState; // 0x10 | Schema_DeclaredEnum | Size: 0x4
			client::ChoreoState_t m_choreoState; // 0x14 | Schema_DeclaredEnum | Size: 0x4
			entity2::GameTime_t m_flTimeStartedState; // 0x18 | Schema_DeclaredClass | Size: 0x4
			S2_PAD(0x4); // End padding
		};
		static_assert(offsetof(CS2::server::CGameChoreoServices, m_hOwner) == 0x8, "m_hOwner in CGameChoreoServices should be at offset 0x8");
		static_assert(offsetof(CS2::server::CGameChoreoServices, m_hScriptedSequence) == 0xC, "m_hScriptedSequence in CGameChoreoServices should be at offset 0xC");
		static_assert(offsetof(CS2::server::CGameChoreoServices, m_scriptState) == 0x10, "m_scriptState in CGameChoreoServices should be at offset 0x10");
		static_assert(offsetof(CS2::server::CGameChoreoServices, m_choreoState) == 0x14, "m_choreoState in CGameChoreoServices should be at offset 0x14");
		static_assert(offsetof(CS2::server::CGameChoreoServices, m_flTimeStartedState) == 0x18, "m_flTimeStartedState in CGameChoreoServices should be at offset 0x18");
		static_assert(sizeof(CS2::server::CGameChoreoServices) == 0x20, "CGameChoreoServices size should be 0x20");
	}
}
