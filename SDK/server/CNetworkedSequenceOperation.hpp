// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/animationsystem/HSequence.hpp>





using namespace GlobalTypes;
namespace CS2 {
	namespace server {
		class CNetworkedSequenceOperation  {
		public:
			S2_PAD(0x8);
			animationsystem::HSequence m_hSequence; // 0x8 | Schema_DeclaredClass | Size: 0x4
			float32 m_flPrevCycle; // 0xc | Schema_Builtin | Size: 0x4
			float32 m_flCycle; // 0x10 | Schema_Builtin | Size: 0x4
			GlobalTypes::CNetworkedQuantizedFloat m_flWeight; // 0x14 | Schema_Atomic | Size: 0x8
			bool m_bSequenceChangeNetworked; // 0x1c | Schema_Builtin | Size: 0x1
			bool m_bDiscontinuity; // 0x1d | Schema_Builtin | Size: 0x1
			S2_PAD(0x2);
			float32 m_flPrevCycleFromDiscontinuity; // 0x20 | Schema_Builtin | Size: 0x4
			float32 m_flPrevCycleForAnimEventDetection; // 0x24 | Schema_Builtin | Size: 0x4
		};
		static_assert(offsetof(CS2::server::CNetworkedSequenceOperation, m_hSequence) == 0x8, "m_hSequence in CNetworkedSequenceOperation should be at offset 0x8");
		static_assert(offsetof(CS2::server::CNetworkedSequenceOperation, m_flPrevCycle) == 0xC, "m_flPrevCycle in CNetworkedSequenceOperation should be at offset 0xC");
		static_assert(offsetof(CS2::server::CNetworkedSequenceOperation, m_flCycle) == 0x10, "m_flCycle in CNetworkedSequenceOperation should be at offset 0x10");
		static_assert(offsetof(CS2::server::CNetworkedSequenceOperation, m_flWeight) == 0x14, "m_flWeight in CNetworkedSequenceOperation should be at offset 0x14");
		static_assert(offsetof(CS2::server::CNetworkedSequenceOperation, m_bSequenceChangeNetworked) == 0x1C, "m_bSequenceChangeNetworked in CNetworkedSequenceOperation should be at offset 0x1C");
		static_assert(offsetof(CS2::server::CNetworkedSequenceOperation, m_bDiscontinuity) == 0x1D, "m_bDiscontinuity in CNetworkedSequenceOperation should be at offset 0x1D");
		static_assert(offsetof(CS2::server::CNetworkedSequenceOperation, m_flPrevCycleFromDiscontinuity) == 0x20, "m_flPrevCycleFromDiscontinuity in CNetworkedSequenceOperation should be at offset 0x20");
		static_assert(offsetof(CS2::server::CNetworkedSequenceOperation, m_flPrevCycleForAnimEventDetection) == 0x24, "m_flPrevCycleForAnimEventDetection in CNetworkedSequenceOperation should be at offset 0x24");
		static_assert(sizeof(CS2::server::CNetworkedSequenceOperation) == 0x28, "CNetworkedSequenceOperation size should be 0x28");
	}
}
