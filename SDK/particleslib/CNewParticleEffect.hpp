// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/particleslib/IParticleEffect.hpp>



namespace CS2 {
	namespace particles {
		class IParticleCollection;
	}
	namespace particleslib {
		class PARTICLE_EHANDLE__;
		class CParticleProperty;
	}
}


using namespace GlobalTypes;
namespace CS2 {
	namespace particleslib {
		class CNewParticleEffect : public CS2::particleslib::IParticleEffect {
		public:
			S2_PAD(0x8);
			particleslib::CNewParticleEffect* m_pNext; // 0x10 | Schema_Ptr | Size: 0x8
			particleslib::CNewParticleEffect* m_pPrev; // 0x18 | Schema_Ptr | Size: 0x8
			particles::IParticleCollection* m_pParticles; // 0x20 | Schema_Ptr | Size: 0x8
			char* m_pDebugName; // 0x28 | Schema_Ptr | Size: 0x8
			S2_PAD(0x10);
			GlobalTypes::Vector m_vSortOrigin; // 0x40 | Schema_Atomic | Size: 0xc
			float32 m_flScale; // 0x4c | Schema_Builtin | Size: 0x4
			particleslib::PARTICLE_EHANDLE__* m_hOwner; // 0x50 | Schema_Ptr | Size: 0x8
			particleslib::CParticleProperty* m_pOwningParticleProperty; // 0x58 | Schema_Ptr | Size: 0x8
			S2_PAD(0x10);
			float32 m_flFreezeTransitionStart; // 0x70 | Schema_Builtin | Size: 0x4
			float32 m_flFreezeTransitionDuration; // 0x74 | Schema_Builtin | Size: 0x4
			float32 m_flFreezeTransitionOverride; // 0x78 | Schema_Builtin | Size: 0x4
			GlobalTypes::Vector m_LastMin; // 0x7c | Schema_Atomic | Size: 0xc
			GlobalTypes::Vector m_LastMax; // 0x88 | Schema_Atomic | Size: 0xc
			GlobalTypes::CSplitScreenSlot m_nSplitScreenUser; // 0x94 | Schema_Atomic | Size: 0x4
			GlobalTypes::Vector m_vecAggregationCenter; // 0x98 | Schema_Atomic | Size: 0xc
			S2_PAD(0x2c);
			int32_t m_RefCount; // 0xd0 | Schema_Builtin | Size: 0x4
			S2_PAD(0x4); // End padding
		};
		static_assert(offsetof(CS2::particleslib::CNewParticleEffect, m_pNext) == 0x10, "m_pNext in CNewParticleEffect should be at offset 0x10");
		static_assert(offsetof(CS2::particleslib::CNewParticleEffect, m_pPrev) == 0x18, "m_pPrev in CNewParticleEffect should be at offset 0x18");
		static_assert(offsetof(CS2::particleslib::CNewParticleEffect, m_pParticles) == 0x20, "m_pParticles in CNewParticleEffect should be at offset 0x20");
		static_assert(offsetof(CS2::particleslib::CNewParticleEffect, m_pDebugName) == 0x28, "m_pDebugName in CNewParticleEffect should be at offset 0x28");
		static_assert(offsetof(CS2::particleslib::CNewParticleEffect, m_vSortOrigin) == 0x40, "m_vSortOrigin in CNewParticleEffect should be at offset 0x40");
		static_assert(offsetof(CS2::particleslib::CNewParticleEffect, m_flScale) == 0x4C, "m_flScale in CNewParticleEffect should be at offset 0x4C");
		static_assert(offsetof(CS2::particleslib::CNewParticleEffect, m_hOwner) == 0x50, "m_hOwner in CNewParticleEffect should be at offset 0x50");
		static_assert(offsetof(CS2::particleslib::CNewParticleEffect, m_pOwningParticleProperty) == 0x58, "m_pOwningParticleProperty in CNewParticleEffect should be at offset 0x58");
		static_assert(offsetof(CS2::particleslib::CNewParticleEffect, m_flFreezeTransitionStart) == 0x70, "m_flFreezeTransitionStart in CNewParticleEffect should be at offset 0x70");
		static_assert(offsetof(CS2::particleslib::CNewParticleEffect, m_flFreezeTransitionDuration) == 0x74, "m_flFreezeTransitionDuration in CNewParticleEffect should be at offset 0x74");
		static_assert(offsetof(CS2::particleslib::CNewParticleEffect, m_flFreezeTransitionOverride) == 0x78, "m_flFreezeTransitionOverride in CNewParticleEffect should be at offset 0x78");
		static_assert(offsetof(CS2::particleslib::CNewParticleEffect, m_LastMin) == 0x7C, "m_LastMin in CNewParticleEffect should be at offset 0x7C");
		static_assert(offsetof(CS2::particleslib::CNewParticleEffect, m_LastMax) == 0x88, "m_LastMax in CNewParticleEffect should be at offset 0x88");
		static_assert(offsetof(CS2::particleslib::CNewParticleEffect, m_nSplitScreenUser) == 0x94, "m_nSplitScreenUser in CNewParticleEffect should be at offset 0x94");
		static_assert(offsetof(CS2::particleslib::CNewParticleEffect, m_vecAggregationCenter) == 0x98, "m_vecAggregationCenter in CNewParticleEffect should be at offset 0x98");
		static_assert(offsetof(CS2::particleslib::CNewParticleEffect, m_RefCount) == 0xD0, "m_RefCount in CNewParticleEffect should be at offset 0xD0");
		static_assert(sizeof(CS2::particleslib::CNewParticleEffect) == 0xD8, "CNewParticleEffect size should be 0xD8");
	}
}
