// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/particleslib/CParticleInput.hpp>
#include <SDK/particleslib/ParticleModelType_t.hpp>



namespace CS2 {
	namespace particleslib {
		class CParticleModelInput : public CS2::particleslib::CParticleInput {
		public:
			particleslib::ParticleModelType_t m_nType; // 0x10 | Schema_DeclaredEnum | Size: 0x4
			S2_PAD(0x4);
			GlobalTypes::CParticleNamedValueRef m_NamedValue; // 0x18 | Schema_Atomic | Size: 0x40
			int32_t m_nControlPoint; // 0x58 | Schema_Builtin | Size: 0x4
			S2_PAD(0x4); // End padding
		};
		static_assert(offsetof(CS2::particleslib::CParticleModelInput, m_nType) == 0x10, "m_nType in CParticleModelInput should be at offset 0x10");
		static_assert(offsetof(CS2::particleslib::CParticleModelInput, m_NamedValue) == 0x18, "m_NamedValue in CParticleModelInput should be at offset 0x18");
		static_assert(offsetof(CS2::particleslib::CParticleModelInput, m_nControlPoint) == 0x58, "m_nControlPoint in CParticleModelInput should be at offset 0x58");
		static_assert(sizeof(CS2::particleslib::CParticleModelInput) == 0x60, "CParticleModelInput size should be 0x60");
	}
}
