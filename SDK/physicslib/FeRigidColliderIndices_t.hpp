// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif







using namespace GlobalTypes;
namespace CS2 {
	namespace physicslib {
		class FeRigidColliderIndices_t  {
		public:
			uint16_t m_nTaperedCapsuleRigidIndex; // 0x0 | Schema_Builtin | Size: 0x2
			uint16_t m_nSphereRigidIndex; // 0x2 | Schema_Builtin | Size: 0x2
			uint16_t m_nBoxRigidIndex; // 0x4 | Schema_Builtin | Size: 0x2
			uint16_t m_nSDFRigidIndex; // 0x6 | Schema_Builtin | Size: 0x2
			uint16_t m_nCollisionPlaneIndex; // 0x8 | Schema_Builtin | Size: 0x2
		};
		static_assert(offsetof(CS2::physicslib::FeRigidColliderIndices_t, m_nTaperedCapsuleRigidIndex) == 0x0, "m_nTaperedCapsuleRigidIndex in FeRigidColliderIndices_t should be at offset 0x0");
		static_assert(offsetof(CS2::physicslib::FeRigidColliderIndices_t, m_nSphereRigidIndex) == 0x2, "m_nSphereRigidIndex in FeRigidColliderIndices_t should be at offset 0x2");
		static_assert(offsetof(CS2::physicslib::FeRigidColliderIndices_t, m_nBoxRigidIndex) == 0x4, "m_nBoxRigidIndex in FeRigidColliderIndices_t should be at offset 0x4");
		static_assert(offsetof(CS2::physicslib::FeRigidColliderIndices_t, m_nSDFRigidIndex) == 0x6, "m_nSDFRigidIndex in FeRigidColliderIndices_t should be at offset 0x6");
		static_assert(offsetof(CS2::physicslib::FeRigidColliderIndices_t, m_nCollisionPlaneIndex) == 0x8, "m_nCollisionPlaneIndex in FeRigidColliderIndices_t should be at offset 0x8");
		static_assert(sizeof(CS2::physicslib::FeRigidColliderIndices_t) == 0xA, "FeRigidColliderIndices_t size should be 0xA");
	}
}
