// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <SDK/GlobalTypes.hpp>




namespace CS2 {
	namespace physicslib {
		class CFeJiggleBone  {
		public:
			uint32_t m_nFlags; // 0x0 | Schema_Builtin | Size: 0x4
			float32 m_flLength; // 0x4 | Schema_Builtin | Size: 0x4
			float32 m_flTipMass; // 0x8 | Schema_Builtin | Size: 0x4
			float32 m_flYawStiffness; // 0xc | Schema_Builtin | Size: 0x4
			float32 m_flYawDamping; // 0x10 | Schema_Builtin | Size: 0x4
			float32 m_flPitchStiffness; // 0x14 | Schema_Builtin | Size: 0x4
			float32 m_flPitchDamping; // 0x18 | Schema_Builtin | Size: 0x4
			float32 m_flAlongStiffness; // 0x1c | Schema_Builtin | Size: 0x4
			float32 m_flAlongDamping; // 0x20 | Schema_Builtin | Size: 0x4
			float32 m_flAngleLimit; // 0x24 | Schema_Builtin | Size: 0x4
			float32 m_flMinYaw; // 0x28 | Schema_Builtin | Size: 0x4
			float32 m_flMaxYaw; // 0x2c | Schema_Builtin | Size: 0x4
			float32 m_flYawFriction; // 0x30 | Schema_Builtin | Size: 0x4
			float32 m_flYawBounce; // 0x34 | Schema_Builtin | Size: 0x4
			float32 m_flMinPitch; // 0x38 | Schema_Builtin | Size: 0x4
			float32 m_flMaxPitch; // 0x3c | Schema_Builtin | Size: 0x4
			float32 m_flPitchFriction; // 0x40 | Schema_Builtin | Size: 0x4
			float32 m_flPitchBounce; // 0x44 | Schema_Builtin | Size: 0x4
			float32 m_flBaseMass; // 0x48 | Schema_Builtin | Size: 0x4
			float32 m_flBaseStiffness; // 0x4c | Schema_Builtin | Size: 0x4
			float32 m_flBaseDamping; // 0x50 | Schema_Builtin | Size: 0x4
			float32 m_flBaseMinLeft; // 0x54 | Schema_Builtin | Size: 0x4
			float32 m_flBaseMaxLeft; // 0x58 | Schema_Builtin | Size: 0x4
			float32 m_flBaseLeftFriction; // 0x5c | Schema_Builtin | Size: 0x4
			float32 m_flBaseMinUp; // 0x60 | Schema_Builtin | Size: 0x4
			float32 m_flBaseMaxUp; // 0x64 | Schema_Builtin | Size: 0x4
			float32 m_flBaseUpFriction; // 0x68 | Schema_Builtin | Size: 0x4
			float32 m_flBaseMinForward; // 0x6c | Schema_Builtin | Size: 0x4
			float32 m_flBaseMaxForward; // 0x70 | Schema_Builtin | Size: 0x4
			float32 m_flBaseForwardFriction; // 0x74 | Schema_Builtin | Size: 0x4
			float32 m_flRadius0; // 0x78 | Schema_Builtin | Size: 0x4
			float32 m_flRadius1; // 0x7c | Schema_Builtin | Size: 0x4
			GlobalTypes::Vector m_vPoint0; // 0x80 | Schema_Atomic | Size: 0xc
			GlobalTypes::Vector m_vPoint1; // 0x8c | Schema_Atomic | Size: 0xc
			uint16_t m_nCollisionMask; // 0x98 | Schema_Builtin | Size: 0x2
			S2_PAD(0x2); // End padding
		};
		static_assert(offsetof(CS2::physicslib::CFeJiggleBone, m_nFlags) == 0x0, "m_nFlags in CFeJiggleBone should be at offset 0x0");
		static_assert(offsetof(CS2::physicslib::CFeJiggleBone, m_flLength) == 0x4, "m_flLength in CFeJiggleBone should be at offset 0x4");
		static_assert(offsetof(CS2::physicslib::CFeJiggleBone, m_flTipMass) == 0x8, "m_flTipMass in CFeJiggleBone should be at offset 0x8");
		static_assert(offsetof(CS2::physicslib::CFeJiggleBone, m_flYawStiffness) == 0xC, "m_flYawStiffness in CFeJiggleBone should be at offset 0xC");
		static_assert(offsetof(CS2::physicslib::CFeJiggleBone, m_flYawDamping) == 0x10, "m_flYawDamping in CFeJiggleBone should be at offset 0x10");
		static_assert(offsetof(CS2::physicslib::CFeJiggleBone, m_flPitchStiffness) == 0x14, "m_flPitchStiffness in CFeJiggleBone should be at offset 0x14");
		static_assert(offsetof(CS2::physicslib::CFeJiggleBone, m_flPitchDamping) == 0x18, "m_flPitchDamping in CFeJiggleBone should be at offset 0x18");
		static_assert(offsetof(CS2::physicslib::CFeJiggleBone, m_flAlongStiffness) == 0x1C, "m_flAlongStiffness in CFeJiggleBone should be at offset 0x1C");
		static_assert(offsetof(CS2::physicslib::CFeJiggleBone, m_flAlongDamping) == 0x20, "m_flAlongDamping in CFeJiggleBone should be at offset 0x20");
		static_assert(offsetof(CS2::physicslib::CFeJiggleBone, m_flAngleLimit) == 0x24, "m_flAngleLimit in CFeJiggleBone should be at offset 0x24");
		static_assert(offsetof(CS2::physicslib::CFeJiggleBone, m_flMinYaw) == 0x28, "m_flMinYaw in CFeJiggleBone should be at offset 0x28");
		static_assert(offsetof(CS2::physicslib::CFeJiggleBone, m_flMaxYaw) == 0x2C, "m_flMaxYaw in CFeJiggleBone should be at offset 0x2C");
		static_assert(offsetof(CS2::physicslib::CFeJiggleBone, m_flYawFriction) == 0x30, "m_flYawFriction in CFeJiggleBone should be at offset 0x30");
		static_assert(offsetof(CS2::physicslib::CFeJiggleBone, m_flYawBounce) == 0x34, "m_flYawBounce in CFeJiggleBone should be at offset 0x34");
		static_assert(offsetof(CS2::physicslib::CFeJiggleBone, m_flMinPitch) == 0x38, "m_flMinPitch in CFeJiggleBone should be at offset 0x38");
		static_assert(offsetof(CS2::physicslib::CFeJiggleBone, m_flMaxPitch) == 0x3C, "m_flMaxPitch in CFeJiggleBone should be at offset 0x3C");
		static_assert(offsetof(CS2::physicslib::CFeJiggleBone, m_flPitchFriction) == 0x40, "m_flPitchFriction in CFeJiggleBone should be at offset 0x40");
		static_assert(offsetof(CS2::physicslib::CFeJiggleBone, m_flPitchBounce) == 0x44, "m_flPitchBounce in CFeJiggleBone should be at offset 0x44");
		static_assert(offsetof(CS2::physicslib::CFeJiggleBone, m_flBaseMass) == 0x48, "m_flBaseMass in CFeJiggleBone should be at offset 0x48");
		static_assert(offsetof(CS2::physicslib::CFeJiggleBone, m_flBaseStiffness) == 0x4C, "m_flBaseStiffness in CFeJiggleBone should be at offset 0x4C");
		static_assert(offsetof(CS2::physicslib::CFeJiggleBone, m_flBaseDamping) == 0x50, "m_flBaseDamping in CFeJiggleBone should be at offset 0x50");
		static_assert(offsetof(CS2::physicslib::CFeJiggleBone, m_flBaseMinLeft) == 0x54, "m_flBaseMinLeft in CFeJiggleBone should be at offset 0x54");
		static_assert(offsetof(CS2::physicslib::CFeJiggleBone, m_flBaseMaxLeft) == 0x58, "m_flBaseMaxLeft in CFeJiggleBone should be at offset 0x58");
		static_assert(offsetof(CS2::physicslib::CFeJiggleBone, m_flBaseLeftFriction) == 0x5C, "m_flBaseLeftFriction in CFeJiggleBone should be at offset 0x5C");
		static_assert(offsetof(CS2::physicslib::CFeJiggleBone, m_flBaseMinUp) == 0x60, "m_flBaseMinUp in CFeJiggleBone should be at offset 0x60");
		static_assert(offsetof(CS2::physicslib::CFeJiggleBone, m_flBaseMaxUp) == 0x64, "m_flBaseMaxUp in CFeJiggleBone should be at offset 0x64");
		static_assert(offsetof(CS2::physicslib::CFeJiggleBone, m_flBaseUpFriction) == 0x68, "m_flBaseUpFriction in CFeJiggleBone should be at offset 0x68");
		static_assert(offsetof(CS2::physicslib::CFeJiggleBone, m_flBaseMinForward) == 0x6C, "m_flBaseMinForward in CFeJiggleBone should be at offset 0x6C");
		static_assert(offsetof(CS2::physicslib::CFeJiggleBone, m_flBaseMaxForward) == 0x70, "m_flBaseMaxForward in CFeJiggleBone should be at offset 0x70");
		static_assert(offsetof(CS2::physicslib::CFeJiggleBone, m_flBaseForwardFriction) == 0x74, "m_flBaseForwardFriction in CFeJiggleBone should be at offset 0x74");
		static_assert(offsetof(CS2::physicslib::CFeJiggleBone, m_flRadius0) == 0x78, "m_flRadius0 in CFeJiggleBone should be at offset 0x78");
		static_assert(offsetof(CS2::physicslib::CFeJiggleBone, m_flRadius1) == 0x7C, "m_flRadius1 in CFeJiggleBone should be at offset 0x7C");
		static_assert(offsetof(CS2::physicslib::CFeJiggleBone, m_vPoint0) == 0x80, "m_vPoint0 in CFeJiggleBone should be at offset 0x80");
		static_assert(offsetof(CS2::physicslib::CFeJiggleBone, m_vPoint1) == 0x8C, "m_vPoint1 in CFeJiggleBone should be at offset 0x8C");
		static_assert(offsetof(CS2::physicslib::CFeJiggleBone, m_nCollisionMask) == 0x98, "m_nCollisionMask in CFeJiggleBone should be at offset 0x98");
		static_assert(sizeof(CS2::physicslib::CFeJiggleBone) == 0x9C, "CFeJiggleBone size should be 0x9C");
	}
}
