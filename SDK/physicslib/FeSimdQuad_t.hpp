// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif







using namespace GlobalTypes;
namespace CS2 {
	namespace physicslib {
		class FeSimdQuad_t  {
		public:
			uint16_t nNode[4]; // 0x0 | Schema_FixedArray | Size: 0x0
			S2_PAD(0x20);
			GlobalTypes::fltx4 f4Slack; // 0x20 | Schema_Atomic | Size: 0x10
			GlobalTypes::FourVectors vShape[4]; // 0x30 | Schema_FixedArray | Size: 0xc0
			GlobalTypes::fltx4 f4Weights[4]; // 0xf0 | Schema_FixedArray | Size: 0x40
		};
		static_assert(offsetof(CS2::physicslib::FeSimdQuad_t, nNode) == 0x0, "nNode in FeSimdQuad_t should be at offset 0x0");
		static_assert(offsetof(CS2::physicslib::FeSimdQuad_t, f4Slack) == 0x20, "f4Slack in FeSimdQuad_t should be at offset 0x20");
		static_assert(offsetof(CS2::physicslib::FeSimdQuad_t, vShape) == 0x30, "vShape in FeSimdQuad_t should be at offset 0x30");
		static_assert(offsetof(CS2::physicslib::FeSimdQuad_t, f4Weights) == 0xF0, "f4Weights in FeSimdQuad_t should be at offset 0xF0");
		static_assert(sizeof(CS2::physicslib::FeSimdQuad_t) == 0x130, "FeSimdQuad_t size should be 0x130");
	}
}
