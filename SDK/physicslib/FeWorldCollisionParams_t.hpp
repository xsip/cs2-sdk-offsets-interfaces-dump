// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif







using namespace GlobalTypes;
namespace CS2 {
	namespace physicslib {
		class FeWorldCollisionParams_t  {
		public:
			float32 flWorldFriction; // 0x0 | Schema_Builtin | Size: 0x4
			float32 flGroundFriction; // 0x4 | Schema_Builtin | Size: 0x4
			uint16_t nListBegin; // 0x8 | Schema_Builtin | Size: 0x2
			uint16_t nListEnd; // 0xa | Schema_Builtin | Size: 0x2
		};
		static_assert(offsetof(CS2::physicslib::FeWorldCollisionParams_t, flWorldFriction) == 0x0, "flWorldFriction in FeWorldCollisionParams_t should be at offset 0x0");
		static_assert(offsetof(CS2::physicslib::FeWorldCollisionParams_t, flGroundFriction) == 0x4, "flGroundFriction in FeWorldCollisionParams_t should be at offset 0x4");
		static_assert(offsetof(CS2::physicslib::FeWorldCollisionParams_t, nListBegin) == 0x8, "nListBegin in FeWorldCollisionParams_t should be at offset 0x8");
		static_assert(offsetof(CS2::physicslib::FeWorldCollisionParams_t, nListEnd) == 0xA, "nListEnd in FeWorldCollisionParams_t should be at offset 0xA");
		static_assert(sizeof(CS2::physicslib::FeWorldCollisionParams_t) == 0xC, "FeWorldCollisionParams_t size should be 0xC");
	}
}
