// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif





namespace CS2 {
	namespace physicslib {
		class RnPlane_t;
	}
}
namespace CS2 {
	namespace physicslib {
		class CRegionSVM  {
		public:
			GlobalTypes::CUtlVector< physicslib::RnPlane_t > m_Planes; // 0x0 | Schema_Atomic | Size: 0x18
			// char  m_Planes[0x18]; // 0x0 | Schema_Atomic | Size: 0x18
			// GlobalTypes::CUtlVector< physicslib::RnPlane_t > m_Planes; // 0x0 | Schema_Atomic | Size: 0x18
			// GlobalTypes::CUtlVector< uint32 > m_Nodes; // 0x18 | Schema_Atomic | Size: 0x18
			char  m_Nodes[0x18]; // 0x18 | Schema_Atomic | Size: 0x18
		};
		static_assert(offsetof(CS2::physicslib::CRegionSVM, m_Planes) == 0x0, "m_Planes in CRegionSVM should be at offset 0x0");
		static_assert(offsetof(CS2::physicslib::CRegionSVM, m_Nodes) == 0x18, "m_Nodes in CRegionSVM should be at offset 0x18");
		static_assert(sizeof(CS2::physicslib::CRegionSVM) == 0x30, "CRegionSVM size should be 0x30");
	}
}
