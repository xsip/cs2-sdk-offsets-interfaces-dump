// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif





namespace CS2 {
	namespace physicslib {
		class RnBlendVertex_t  {
		public:
			uint16_t m_nWeight0; // 0x0 | Schema_Builtin | Size: 0x2
			uint16_t m_nIndex0; // 0x2 | Schema_Builtin | Size: 0x2
			uint16_t m_nWeight1; // 0x4 | Schema_Builtin | Size: 0x2
			uint16_t m_nIndex1; // 0x6 | Schema_Builtin | Size: 0x2
			uint16_t m_nWeight2; // 0x8 | Schema_Builtin | Size: 0x2
			uint16_t m_nIndex2; // 0xa | Schema_Builtin | Size: 0x2
			uint16_t m_nFlags; // 0xc | Schema_Builtin | Size: 0x2
			uint16_t m_nTargetIndex; // 0xe | Schema_Builtin | Size: 0x2
		};
		static_assert(offsetof(CS2::physicslib::RnBlendVertex_t, m_nWeight0) == 0x0, "m_nWeight0 in RnBlendVertex_t should be at offset 0x0");
		static_assert(offsetof(CS2::physicslib::RnBlendVertex_t, m_nIndex0) == 0x2, "m_nIndex0 in RnBlendVertex_t should be at offset 0x2");
		static_assert(offsetof(CS2::physicslib::RnBlendVertex_t, m_nWeight1) == 0x4, "m_nWeight1 in RnBlendVertex_t should be at offset 0x4");
		static_assert(offsetof(CS2::physicslib::RnBlendVertex_t, m_nIndex1) == 0x6, "m_nIndex1 in RnBlendVertex_t should be at offset 0x6");
		static_assert(offsetof(CS2::physicslib::RnBlendVertex_t, m_nWeight2) == 0x8, "m_nWeight2 in RnBlendVertex_t should be at offset 0x8");
		static_assert(offsetof(CS2::physicslib::RnBlendVertex_t, m_nIndex2) == 0xA, "m_nIndex2 in RnBlendVertex_t should be at offset 0xA");
		static_assert(offsetof(CS2::physicslib::RnBlendVertex_t, m_nFlags) == 0xC, "m_nFlags in RnBlendVertex_t should be at offset 0xC");
		static_assert(offsetof(CS2::physicslib::RnBlendVertex_t, m_nTargetIndex) == 0xE, "m_nTargetIndex in RnBlendVertex_t should be at offset 0xE");
		static_assert(sizeof(CS2::physicslib::RnBlendVertex_t) == 0x10, "RnBlendVertex_t size should be 0x10");
	}
}
