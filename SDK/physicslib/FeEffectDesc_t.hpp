// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif







using namespace GlobalTypes;
namespace CS2 {
	namespace physicslib {
		class FeEffectDesc_t  {
		public:
			GlobalTypes::CUtlString sName; // 0x0 | Schema_Atomic | Size: 0x8
			uint32_t nNameHash; // 0x8 | Schema_Builtin | Size: 0x4
			int32_t nType; // 0xc | Schema_Builtin | Size: 0x4
			GlobalTypes::KeyValues3 m_Params; // 0x10 | Schema_Atomic | Size: 0x10
		};
		static_assert(offsetof(CS2::physicslib::FeEffectDesc_t, sName) == 0x0, "sName in FeEffectDesc_t should be at offset 0x0");
		static_assert(offsetof(CS2::physicslib::FeEffectDesc_t, nNameHash) == 0x8, "nNameHash in FeEffectDesc_t should be at offset 0x8");
		static_assert(offsetof(CS2::physicslib::FeEffectDesc_t, nType) == 0xC, "nType in FeEffectDesc_t should be at offset 0xC");
		static_assert(offsetof(CS2::physicslib::FeEffectDesc_t, m_Params) == 0x10, "m_Params in FeEffectDesc_t should be at offset 0x10");
		static_assert(sizeof(CS2::physicslib::FeEffectDesc_t) == 0x20, "FeEffectDesc_t size should be 0x20");
	}
}
