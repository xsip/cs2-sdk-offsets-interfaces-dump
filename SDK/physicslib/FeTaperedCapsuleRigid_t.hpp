// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif







using namespace GlobalTypes;
namespace CS2 {
	namespace physicslib {
		class FeTaperedCapsuleRigid_t  {
		public:
			GlobalTypes::fltx4 vSphere[2]; // 0x0 | Schema_FixedArray | Size: 0x20
			uint16_t nNode; // 0x20 | Schema_Builtin | Size: 0x2
			uint16_t nCollisionMask; // 0x22 | Schema_Builtin | Size: 0x2
			uint16_t nVertexMapIndex; // 0x24 | Schema_Builtin | Size: 0x2
			uint16_t nFlags; // 0x26 | Schema_Builtin | Size: 0x2
			S2_PAD(0x8); // End padding
		};
		static_assert(offsetof(CS2::physicslib::FeTaperedCapsuleRigid_t, vSphere) == 0x0, "vSphere in FeTaperedCapsuleRigid_t should be at offset 0x0");
		static_assert(offsetof(CS2::physicslib::FeTaperedCapsuleRigid_t, nNode) == 0x20, "nNode in FeTaperedCapsuleRigid_t should be at offset 0x20");
		static_assert(offsetof(CS2::physicslib::FeTaperedCapsuleRigid_t, nCollisionMask) == 0x22, "nCollisionMask in FeTaperedCapsuleRigid_t should be at offset 0x22");
		static_assert(offsetof(CS2::physicslib::FeTaperedCapsuleRigid_t, nVertexMapIndex) == 0x24, "nVertexMapIndex in FeTaperedCapsuleRigid_t should be at offset 0x24");
		static_assert(offsetof(CS2::physicslib::FeTaperedCapsuleRigid_t, nFlags) == 0x26, "nFlags in FeTaperedCapsuleRigid_t should be at offset 0x26");
		static_assert(sizeof(CS2::physicslib::FeTaperedCapsuleRigid_t) == 0x30, "FeTaperedCapsuleRigid_t size should be 0x30");
	}
}
