// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif





namespace CS2 {
	namespace physicslib {
		class FeCtrlSoftOffset_t  {
		public:
			uint16_t nCtrlParent; // 0x0 | Schema_Builtin | Size: 0x2
			uint16_t nCtrlChild; // 0x2 | Schema_Builtin | Size: 0x2
			GlobalTypes::Vector vOffset; // 0x4 | Schema_Atomic | Size: 0xc
			float32 flAlpha; // 0x10 | Schema_Builtin | Size: 0x4
		};
		static_assert(offsetof(CS2::physicslib::FeCtrlSoftOffset_t, nCtrlParent) == 0x0, "nCtrlParent in FeCtrlSoftOffset_t should be at offset 0x0");
		static_assert(offsetof(CS2::physicslib::FeCtrlSoftOffset_t, nCtrlChild) == 0x2, "nCtrlChild in FeCtrlSoftOffset_t should be at offset 0x2");
		static_assert(offsetof(CS2::physicslib::FeCtrlSoftOffset_t, vOffset) == 0x4, "vOffset in FeCtrlSoftOffset_t should be at offset 0x4");
		static_assert(offsetof(CS2::physicslib::FeCtrlSoftOffset_t, flAlpha) == 0x10, "flAlpha in FeCtrlSoftOffset_t should be at offset 0x10");
		static_assert(sizeof(CS2::physicslib::FeCtrlSoftOffset_t) == 0x14, "FeCtrlSoftOffset_t size should be 0x14");
	}
}
