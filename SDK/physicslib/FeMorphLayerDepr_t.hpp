// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif







using namespace GlobalTypes;
namespace CS2 {
	namespace physicslib {
		class FeMorphLayerDepr_t  {
		public:
			GlobalTypes::CUtlString m_Name; // 0x0 | Schema_Atomic | Size: 0x8
			uint32_t m_nNameHash; // 0x8 | Schema_Builtin | Size: 0x4
			S2_PAD(0x4);
			GlobalTypes::CUtlVector< uint16 > m_Nodes; // 0x10 | Schema_Atomic | Size: 0x18
			// char  m_Nodes[0x18]; // 0x10 | Schema_Atomic | Size: 0x18
			GlobalTypes::CUtlVector<GlobalTypes::Vector> m_InitPos; // 0x28 | Schema_Atomic | Size: 0x18
			// char  m_InitPos[0x18]; // 0x28 | Schema_Atomic | Size: 0x18
			GlobalTypes::CUtlVector< float32 > m_Gravity; // 0x40 | Schema_Atomic | Size: 0x18
			// char  m_Gravity[0x18]; // 0x40 | Schema_Atomic | Size: 0x18
			GlobalTypes::CUtlVector< float32 > m_GoalStrength; // 0x58 | Schema_Atomic | Size: 0x18
			// char  m_GoalStrength[0x18]; // 0x58 | Schema_Atomic | Size: 0x18
			GlobalTypes::CUtlVector< float32 > m_GoalDamping; // 0x70 | Schema_Atomic | Size: 0x18
			// char  m_GoalDamping[0x18]; // 0x70 | Schema_Atomic | Size: 0x18
			uint32_t m_nFlags; // 0x88 | Schema_Builtin | Size: 0x4
			S2_PAD(0x4); // End padding
		};
		static_assert(offsetof(CS2::physicslib::FeMorphLayerDepr_t, m_Name) == 0x0, "m_Name in FeMorphLayerDepr_t should be at offset 0x0");
		static_assert(offsetof(CS2::physicslib::FeMorphLayerDepr_t, m_nNameHash) == 0x8, "m_nNameHash in FeMorphLayerDepr_t should be at offset 0x8");
		static_assert(offsetof(CS2::physicslib::FeMorphLayerDepr_t, m_Nodes) == 0x10, "m_Nodes in FeMorphLayerDepr_t should be at offset 0x10");
		static_assert(offsetof(CS2::physicslib::FeMorphLayerDepr_t, m_InitPos) == 0x28, "m_InitPos in FeMorphLayerDepr_t should be at offset 0x28");
		static_assert(offsetof(CS2::physicslib::FeMorphLayerDepr_t, m_Gravity) == 0x40, "m_Gravity in FeMorphLayerDepr_t should be at offset 0x40");
		static_assert(offsetof(CS2::physicslib::FeMorphLayerDepr_t, m_GoalStrength) == 0x58, "m_GoalStrength in FeMorphLayerDepr_t should be at offset 0x58");
		static_assert(offsetof(CS2::physicslib::FeMorphLayerDepr_t, m_GoalDamping) == 0x70, "m_GoalDamping in FeMorphLayerDepr_t should be at offset 0x70");
		static_assert(offsetof(CS2::physicslib::FeMorphLayerDepr_t, m_nFlags) == 0x88, "m_nFlags in FeMorphLayerDepr_t should be at offset 0x88");
		static_assert(sizeof(CS2::physicslib::FeMorphLayerDepr_t) == 0x90, "FeMorphLayerDepr_t size should be 0x90");
	}
}
