// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif





namespace CS2 {
	namespace physicslib {
		class FeBoxRigid_t  {
		public:
			GlobalTypes::CTransform tmFrame2; // 0x0 | Schema_Atomic | Size: 0x20
			uint16_t nNode; // 0x20 | Schema_Builtin | Size: 0x2
			uint16_t nCollisionMask; // 0x22 | Schema_Builtin | Size: 0x2
			GlobalTypes::Vector vSize; // 0x24 | Schema_Atomic | Size: 0xc
			uint16_t nVertexMapIndex; // 0x30 | Schema_Builtin | Size: 0x2
			uint16_t nFlags; // 0x32 | Schema_Builtin | Size: 0x2
			S2_PAD(0xc); // End padding
		};
		static_assert(offsetof(CS2::physicslib::FeBoxRigid_t, tmFrame2) == 0x0, "tmFrame2 in FeBoxRigid_t should be at offset 0x0");
		static_assert(offsetof(CS2::physicslib::FeBoxRigid_t, nNode) == 0x20, "nNode in FeBoxRigid_t should be at offset 0x20");
		static_assert(offsetof(CS2::physicslib::FeBoxRigid_t, nCollisionMask) == 0x22, "nCollisionMask in FeBoxRigid_t should be at offset 0x22");
		static_assert(offsetof(CS2::physicslib::FeBoxRigid_t, vSize) == 0x24, "vSize in FeBoxRigid_t should be at offset 0x24");
		static_assert(offsetof(CS2::physicslib::FeBoxRigid_t, nVertexMapIndex) == 0x30, "nVertexMapIndex in FeBoxRigid_t should be at offset 0x30");
		static_assert(offsetof(CS2::physicslib::FeBoxRigid_t, nFlags) == 0x32, "nFlags in FeBoxRigid_t should be at offset 0x32");
		static_assert(sizeof(CS2::physicslib::FeBoxRigid_t) == 0x40, "FeBoxRigid_t size should be 0x40");
	}
}
