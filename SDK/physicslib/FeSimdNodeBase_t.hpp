// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <SDK/GlobalTypes.hpp>

#include <SDK/mathlib_extended/FourQuaternions.hpp>



namespace CS2 {
	namespace physicslib {
		class FeSimdNodeBase_t  {
		public:
			uint16_t nNode[4]; // 0x0 | Schema_FixedArray | Size: 0x8
			uint16_t nNodeX0[4]; // 0x8 | Schema_FixedArray | Size: 0x8
			uint16_t nNodeX1[4]; // 0x10 | Schema_FixedArray | Size: 0x8
			uint16_t nNodeY0[4]; // 0x18 | Schema_FixedArray | Size: 0x8
			uint16_t nNodeY1[4]; // 0x20 | Schema_FixedArray | Size: 0x8
			uint16_t nDummy[4]; // 0x28 | Schema_FixedArray | Size: 0x8
			mathlib_extended::FourQuaternions qAdjust; // 0x30 | Schema_DeclaredClass | Size: 0x40
		};
		static_assert(offsetof(CS2::physicslib::FeSimdNodeBase_t, nNode) == 0x0, "nNode in FeSimdNodeBase_t should be at offset 0x0");
		static_assert(offsetof(CS2::physicslib::FeSimdNodeBase_t, nNodeX0) == 0x8, "nNodeX0 in FeSimdNodeBase_t should be at offset 0x8");
		static_assert(offsetof(CS2::physicslib::FeSimdNodeBase_t, nNodeX1) == 0x10, "nNodeX1 in FeSimdNodeBase_t should be at offset 0x10");
		static_assert(offsetof(CS2::physicslib::FeSimdNodeBase_t, nNodeY0) == 0x18, "nNodeY0 in FeSimdNodeBase_t should be at offset 0x18");
		static_assert(offsetof(CS2::physicslib::FeSimdNodeBase_t, nNodeY1) == 0x20, "nNodeY1 in FeSimdNodeBase_t should be at offset 0x20");
		static_assert(offsetof(CS2::physicslib::FeSimdNodeBase_t, nDummy) == 0x28, "nDummy in FeSimdNodeBase_t should be at offset 0x28");
		static_assert(offsetof(CS2::physicslib::FeSimdNodeBase_t, qAdjust) == 0x30, "qAdjust in FeSimdNodeBase_t should be at offset 0x30");
		static_assert(sizeof(CS2::physicslib::FeSimdNodeBase_t) == 0x70, "FeSimdNodeBase_t size should be 0x70");
	}
}
