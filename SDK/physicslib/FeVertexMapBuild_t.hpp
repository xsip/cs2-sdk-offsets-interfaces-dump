// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <SDK/GlobalTypes.hpp>




namespace CS2 {
	namespace physicslib {
		class FeVertexMapBuild_t  {
		public:
			GlobalTypes::CUtlString m_VertexMapName; // 0x0 | Schema_Atomic | Size: 0x8
			uint32_t m_nNameHash; // 0x8 | Schema_Builtin | Size: 0x4
			GlobalTypes::Color m_Color; // 0xc | Schema_Atomic | Size: 0x4
			float32 m_flVolumetricSolveStrength; // 0x10 | Schema_Builtin | Size: 0x4
			int32_t m_nScaleSourceNode; // 0x14 | Schema_Builtin | Size: 0x4
			// GlobalTypes::CUtlVector< float32 > m_Weights; // 0x18 | Schema_Atomic | Size: 0x18
			char  m_Weights[0x18]; // 0x18 | Schema_Atomic | Size: 0x18
		};
		static_assert(offsetof(CS2::physicslib::FeVertexMapBuild_t, m_VertexMapName) == 0x0, "m_VertexMapName in FeVertexMapBuild_t should be at offset 0x0");
		static_assert(offsetof(CS2::physicslib::FeVertexMapBuild_t, m_nNameHash) == 0x8, "m_nNameHash in FeVertexMapBuild_t should be at offset 0x8");
		static_assert(offsetof(CS2::physicslib::FeVertexMapBuild_t, m_Color) == 0xC, "m_Color in FeVertexMapBuild_t should be at offset 0xC");
		static_assert(offsetof(CS2::physicslib::FeVertexMapBuild_t, m_flVolumetricSolveStrength) == 0x10, "m_flVolumetricSolveStrength in FeVertexMapBuild_t should be at offset 0x10");
		static_assert(offsetof(CS2::physicslib::FeVertexMapBuild_t, m_nScaleSourceNode) == 0x14, "m_nScaleSourceNode in FeVertexMapBuild_t should be at offset 0x14");
		static_assert(offsetof(CS2::physicslib::FeVertexMapBuild_t, m_Weights) == 0x18, "m_Weights in FeVertexMapBuild_t should be at offset 0x18");
		static_assert(sizeof(CS2::physicslib::FeVertexMapBuild_t) == 0x30, "FeVertexMapBuild_t size should be 0x30");
	}
}
