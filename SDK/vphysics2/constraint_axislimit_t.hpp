// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif







using namespace GlobalTypes;
namespace CS2 {
	namespace vphysics2 {
		class constraint_axislimit_t  {
		public:
			float32 flMinRotation; // 0x0 | Schema_Builtin | Size: 0x4
			float32 flMaxRotation; // 0x4 | Schema_Builtin | Size: 0x4
			float32 flMotorTargetAngSpeed; // 0x8 | Schema_Builtin | Size: 0x4
			float32 flMotorMaxTorque; // 0xc | Schema_Builtin | Size: 0x4
		};
		static_assert(offsetof(CS2::vphysics2::constraint_axislimit_t, flMinRotation) == 0x0, "flMinRotation in constraint_axislimit_t should be at offset 0x0");
		static_assert(offsetof(CS2::vphysics2::constraint_axislimit_t, flMaxRotation) == 0x4, "flMaxRotation in constraint_axislimit_t should be at offset 0x4");
		static_assert(offsetof(CS2::vphysics2::constraint_axislimit_t, flMotorTargetAngSpeed) == 0x8, "flMotorTargetAngSpeed in constraint_axislimit_t should be at offset 0x8");
		static_assert(offsetof(CS2::vphysics2::constraint_axislimit_t, flMotorMaxTorque) == 0xC, "flMotorMaxTorque in constraint_axislimit_t should be at offset 0xC");
		static_assert(sizeof(CS2::vphysics2::constraint_axislimit_t) == 0x10, "constraint_axislimit_t size should be 0x10");
	}
}
