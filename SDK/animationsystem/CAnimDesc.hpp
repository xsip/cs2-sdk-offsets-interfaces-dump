// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/animationsystem/CAnimDesc_Flag.hpp>
#include <SDK/animationsystem/CAnimEncodedFrames.hpp>
#include <SDK/animationsystem/CAnimSequenceParams.hpp>



namespace CS2 {
	namespace animationsystem {
		class CAnimDesc  {
		public:
			GlobalTypes::CBufferString m_name; // 0x0 | Schema_Atomic | Size: 0x10
			animationsystem::CAnimDesc_Flag m_flags; // 0x10 | Schema_DeclaredClass | Size: 0x8
			float32 fps; // 0x18 | Schema_Builtin | Size: 0x4
			S2_PAD(0x4);
			animationsystem::CAnimEncodedFrames m_Data; // 0x20 | Schema_DeclaredClass | Size: 0xd8
			// GlobalTypes::CUtlVector< animationsystem::CAnimMovement > m_movementArray; // 0xf8 | Schema_Atomic | Size: 0x18
			char  m_movementArray[0x18]; // 0xf8 | Schema_Atomic | Size: 0x18
			GlobalTypes::CTransform m_xInitialOffset; // 0x110 | Schema_Atomic | Size: 0x20
			// GlobalTypes::CUtlVector< animationsystem::CAnimEventDefinition > m_eventArray; // 0x130 | Schema_Atomic | Size: 0x18
			char  m_eventArray[0x18]; // 0x130 | Schema_Atomic | Size: 0x18
			// GlobalTypes::CUtlVector< animationsystem::CAnimActivity > m_activityArray; // 0x148 | Schema_Atomic | Size: 0x18
			char  m_activityArray[0x18]; // 0x148 | Schema_Atomic | Size: 0x18
			// GlobalTypes::CUtlVector< animationsystem::CAnimLocalHierarchy > m_hierarchyArray; // 0x160 | Schema_Atomic | Size: 0x18
			char  m_hierarchyArray[0x18]; // 0x160 | Schema_Atomic | Size: 0x18
			float32 framestalltime; // 0x178 | Schema_Builtin | Size: 0x4
			GlobalTypes::Vector m_vecRootMin; // 0x17c | Schema_Atomic | Size: 0xc
			GlobalTypes::Vector m_vecRootMax; // 0x188 | Schema_Atomic | Size: 0xc
			S2_PAD(0x4);
			// GlobalTypes::CUtlGlobalTypes::Vector< Vector > m_vecBoneWorldMin; // 0x198 | Schema_Atomic | Size: 0x18
			char  m_vecBoneWorldMin[0x18]; // 0x198 | Schema_Atomic | Size: 0x18
			// GlobalTypes::CUtlGlobalTypes::Vector< Vector > m_vecBoneWorldMax; // 0x1b0 | Schema_Atomic | Size: 0x18
			char  m_vecBoneWorldMax[0x18]; // 0x1b0 | Schema_Atomic | Size: 0x18
			animationsystem::CAnimSequenceParams m_sequenceParams; // 0x1c8 | Schema_DeclaredClass | Size: 0x8
		};
		static_assert(offsetof(CS2::animationsystem::CAnimDesc, m_name) == 0x0, "m_name in CAnimDesc should be at offset 0x0");
		static_assert(offsetof(CS2::animationsystem::CAnimDesc, m_flags) == 0x10, "m_flags in CAnimDesc should be at offset 0x10");
		static_assert(offsetof(CS2::animationsystem::CAnimDesc, fps) == 0x18, "fps in CAnimDesc should be at offset 0x18");
		static_assert(offsetof(CS2::animationsystem::CAnimDesc, m_Data) == 0x20, "m_Data in CAnimDesc should be at offset 0x20");
		static_assert(offsetof(CS2::animationsystem::CAnimDesc, m_movementArray) == 0xF8, "m_movementArray in CAnimDesc should be at offset 0xF8");
		static_assert(offsetof(CS2::animationsystem::CAnimDesc, m_xInitialOffset) == 0x110, "m_xInitialOffset in CAnimDesc should be at offset 0x110");
		static_assert(offsetof(CS2::animationsystem::CAnimDesc, m_eventArray) == 0x130, "m_eventArray in CAnimDesc should be at offset 0x130");
		static_assert(offsetof(CS2::animationsystem::CAnimDesc, m_activityArray) == 0x148, "m_activityArray in CAnimDesc should be at offset 0x148");
		static_assert(offsetof(CS2::animationsystem::CAnimDesc, m_hierarchyArray) == 0x160, "m_hierarchyArray in CAnimDesc should be at offset 0x160");
		static_assert(offsetof(CS2::animationsystem::CAnimDesc, framestalltime) == 0x178, "framestalltime in CAnimDesc should be at offset 0x178");
		static_assert(offsetof(CS2::animationsystem::CAnimDesc, m_vecRootMin) == 0x17C, "m_vecRootMin in CAnimDesc should be at offset 0x17C");
		static_assert(offsetof(CS2::animationsystem::CAnimDesc, m_vecRootMax) == 0x188, "m_vecRootMax in CAnimDesc should be at offset 0x188");
		static_assert(offsetof(CS2::animationsystem::CAnimDesc, m_vecBoneWorldMin) == 0x198, "m_vecBoneWorldMin in CAnimDesc should be at offset 0x198");
		static_assert(offsetof(CS2::animationsystem::CAnimDesc, m_vecBoneWorldMax) == 0x1B0, "m_vecBoneWorldMax in CAnimDesc should be at offset 0x1B0");
		static_assert(offsetof(CS2::animationsystem::CAnimDesc, m_sequenceParams) == 0x1C8, "m_sequenceParams in CAnimDesc should be at offset 0x1C8");
		static_assert(sizeof(CS2::animationsystem::CAnimDesc) == 0x1D0, "CAnimDesc size should be 0x1D0");
	}
}
