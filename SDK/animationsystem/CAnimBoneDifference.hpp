// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif







using namespace GlobalTypes;
namespace CS2 {
	namespace animationsystem {
		class CAnimBoneDifference  {
		public:
			GlobalTypes::CBufferString m_name; // 0x0 | Schema_Atomic | Size: 0x10
			GlobalTypes::CBufferString m_parent; // 0x10 | Schema_Atomic | Size: 0x10
			GlobalTypes::Vector m_posError; // 0x20 | Schema_Atomic | Size: 0xc
			bool m_bHasRotation; // 0x2c | Schema_Builtin | Size: 0x1
			bool m_bHasMovement; // 0x2d | Schema_Builtin | Size: 0x1
			S2_PAD(0x2); // End padding
		};
		static_assert(offsetof(CS2::animationsystem::CAnimBoneDifference, m_name) == 0x0, "m_name in CAnimBoneDifference should be at offset 0x0");
		static_assert(offsetof(CS2::animationsystem::CAnimBoneDifference, m_parent) == 0x10, "m_parent in CAnimBoneDifference should be at offset 0x10");
		static_assert(offsetof(CS2::animationsystem::CAnimBoneDifference, m_posError) == 0x20, "m_posError in CAnimBoneDifference should be at offset 0x20");
		static_assert(offsetof(CS2::animationsystem::CAnimBoneDifference, m_bHasRotation) == 0x2C, "m_bHasRotation in CAnimBoneDifference should be at offset 0x2C");
		static_assert(offsetof(CS2::animationsystem::CAnimBoneDifference, m_bHasMovement) == 0x2D, "m_bHasMovement in CAnimBoneDifference should be at offset 0x2D");
		static_assert(sizeof(CS2::animationsystem::CAnimBoneDifference) == 0x30, "CAnimBoneDifference size should be 0x30");
	}
}
