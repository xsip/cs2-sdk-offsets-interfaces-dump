// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif





namespace CS2 {
	namespace animationsystem {
		class CAnimDesc;
		class CAnimDecoder;
		class CAnimFrameSegment;
	}
}
namespace CS2 {
	namespace animationsystem {
		class CAnimData  {
		public:
			S2_PAD(0x10);
			GlobalTypes::CBufferString m_name; // 0x10 | Schema_Atomic | Size: 0x10
			GlobalTypes::CUtlVector< animationsystem::CAnimDesc > m_animArray; // 0x20 | Schema_Atomic | Size: 0x18
			// char  m_animArray[0x18]; // 0x20 | Schema_Atomic | Size: 0x18
			// GlobalTypes::CUtlVector< animationsystem::CAnimDesc > m_animArray; // 0x20 | Schema_Atomic | Size: 0x18
			GlobalTypes::CUtlVector< animationsystem::CAnimDecoder > m_decoderArray; // 0x38 | Schema_Atomic | Size: 0x18
			// char  m_decoderArray[0x18]; // 0x38 | Schema_Atomic | Size: 0x18
			// GlobalTypes::CUtlVector< animationsystem::CAnimDecoder > m_decoderArray; // 0x38 | Schema_Atomic | Size: 0x18
			int32_t m_nMaxUniqueFrameIndex; // 0x50 | Schema_Builtin | Size: 0x4
			S2_PAD(0x4);
			GlobalTypes::CUtlVector< animationsystem::CAnimFrameSegment > m_segmentArray; // 0x58 | Schema_Atomic | Size: 0x18
			// char  m_segmentArray[0x18]; // 0x58 | Schema_Atomic | Size: 0x18
			// GlobalTypes::CUtlVector< animationsystem::CAnimFrameSegment > m_segmentArray; // 0x58 | Schema_Atomic | Size: 0x18
		};
		static_assert(offsetof(CS2::animationsystem::CAnimData, m_name) == 0x10, "m_name in CAnimData should be at offset 0x10");
		static_assert(offsetof(CS2::animationsystem::CAnimData, m_animArray) == 0x20, "m_animArray in CAnimData should be at offset 0x20");
		static_assert(offsetof(CS2::animationsystem::CAnimData, m_decoderArray) == 0x38, "m_decoderArray in CAnimData should be at offset 0x38");
		static_assert(offsetof(CS2::animationsystem::CAnimData, m_nMaxUniqueFrameIndex) == 0x50, "m_nMaxUniqueFrameIndex in CAnimData should be at offset 0x50");
		static_assert(offsetof(CS2::animationsystem::CAnimData, m_segmentArray) == 0x58, "m_segmentArray in CAnimData should be at offset 0x58");
		static_assert(sizeof(CS2::animationsystem::CAnimData) == 0x70, "CAnimData size should be 0x70");
	}
}
