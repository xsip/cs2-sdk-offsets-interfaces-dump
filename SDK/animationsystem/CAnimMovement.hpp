// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif







using namespace GlobalTypes;
namespace CS2 {
	namespace animationsystem {
		class CAnimMovement  {
		public:
			int32_t endframe; // 0x0 | Schema_Builtin | Size: 0x4
			int32_t motionflags; // 0x4 | Schema_Builtin | Size: 0x4
			float32 v0; // 0x8 | Schema_Builtin | Size: 0x4
			float32 v1; // 0xc | Schema_Builtin | Size: 0x4
			float32 angle; // 0x10 | Schema_Builtin | Size: 0x4
			GlobalTypes::Vector vector; // 0x14 | Schema_Atomic | Size: 0xc
			GlobalTypes::Vector position; // 0x20 | Schema_Atomic | Size: 0xc
		};
		static_assert(offsetof(CS2::animationsystem::CAnimMovement, endframe) == 0x0, "endframe in CAnimMovement should be at offset 0x0");
		static_assert(offsetof(CS2::animationsystem::CAnimMovement, motionflags) == 0x4, "motionflags in CAnimMovement should be at offset 0x4");
		static_assert(offsetof(CS2::animationsystem::CAnimMovement, v0) == 0x8, "v0 in CAnimMovement should be at offset 0x8");
		static_assert(offsetof(CS2::animationsystem::CAnimMovement, v1) == 0xC, "v1 in CAnimMovement should be at offset 0xC");
		static_assert(offsetof(CS2::animationsystem::CAnimMovement, angle) == 0x10, "angle in CAnimMovement should be at offset 0x10");
		static_assert(offsetof(CS2::animationsystem::CAnimMovement, vector) == 0x14, "vector in CAnimMovement should be at offset 0x14");
		static_assert(offsetof(CS2::animationsystem::CAnimMovement, position) == 0x20, "position in CAnimMovement should be at offset 0x20");
		static_assert(sizeof(CS2::animationsystem::CAnimMovement) == 0x2C, "CAnimMovement size should be 0x2C");
	}
}
