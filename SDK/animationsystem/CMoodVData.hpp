// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/animationsystem/MoodType_t.hpp>



namespace CS2 {
	namespace animationsystem {
		class MoodAnimationLayer_t;
	}
}


using namespace GlobalTypes;
namespace CS2 {
	namespace animationsystem {
		class CMoodVData  {
		public:
			// GlobalTypes::CResourceNameTyped< GlobalTypes::CWeakHandle< InfoForResourceTypeCModel > > m_sModelName; // 0x0 | Schema_Atomic | Size: 0xe0
			char  m_sModelName[0xe0]; // 0x0 | Schema_Atomic | Size: 0xe0
			animationsystem::MoodType_t m_nMoodType; // 0xe0 | Schema_DeclaredEnum | Size: 0x4
			S2_PAD(0x4);
			GlobalTypes::CUtlVector< animationsystem::MoodAnimationLayer_t > m_animationLayers; // 0xe8 | Schema_Atomic | Size: 0x18
			// char  m_animationLayers[0x18]; // 0xe8 | Schema_Atomic | Size: 0x18
		};
		static_assert(offsetof(CS2::animationsystem::CMoodVData, m_sModelName) == 0x0, "m_sModelName in CMoodVData should be at offset 0x0");
		static_assert(offsetof(CS2::animationsystem::CMoodVData, m_nMoodType) == 0xE0, "m_nMoodType in CMoodVData should be at offset 0xE0");
		static_assert(offsetof(CS2::animationsystem::CMoodVData, m_animationLayers) == 0xE8, "m_animationLayers in CMoodVData should be at offset 0xE8");
		static_assert(sizeof(CS2::animationsystem::CMoodVData) == 0x100, "CMoodVData size should be 0x100");
	}
}
