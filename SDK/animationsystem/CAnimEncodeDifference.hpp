// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif





namespace CS2 {
	namespace animationsystem {
		class CAnimBoneDifference;
		class CAnimMorphDifference;
		class CAnimUserDifference;
	}
}
namespace CS2 {
	namespace animationsystem {
		class CAnimEncodeDifference  {
		public:
			GlobalTypes::CUtlVector< animationsystem::CAnimBoneDifference > m_boneArray; // 0x0 | Schema_Atomic | Size: 0x18
			// char  m_boneArray[0x18]; // 0x0 | Schema_Atomic | Size: 0x18
			// GlobalTypes::CUtlVector< animationsystem::CAnimBoneDifference > m_boneArray; // 0x0 | Schema_Atomic | Size: 0x18
			GlobalTypes::CUtlVector< animationsystem::CAnimMorphDifference > m_morphArray; // 0x18 | Schema_Atomic | Size: 0x18
			// char  m_morphArray[0x18]; // 0x18 | Schema_Atomic | Size: 0x18
			// GlobalTypes::CUtlVector< animationsystem::CAnimMorphDifference > m_morphArray; // 0x18 | Schema_Atomic | Size: 0x18
			GlobalTypes::CUtlVector< animationsystem::CAnimUserDifference > m_userArray; // 0x30 | Schema_Atomic | Size: 0x18
			// char  m_userArray[0x18]; // 0x30 | Schema_Atomic | Size: 0x18
			// GlobalTypes::CUtlVector< animationsystem::CAnimUserDifference > m_userArray; // 0x30 | Schema_Atomic | Size: 0x18
			// GlobalTypes::CUtlVector< uint8 > m_bHasRotationBitArray; // 0x48 | Schema_Atomic | Size: 0x18
			char  m_bHasRotationBitArray[0x18]; // 0x48 | Schema_Atomic | Size: 0x18
			// GlobalTypes::CUtlVector< uint8 > m_bHasMovementBitArray; // 0x60 | Schema_Atomic | Size: 0x18
			char  m_bHasMovementBitArray[0x18]; // 0x60 | Schema_Atomic | Size: 0x18
			// GlobalTypes::CUtlVector< uint8 > m_bHasMorphBitArray; // 0x78 | Schema_Atomic | Size: 0x18
			char  m_bHasMorphBitArray[0x18]; // 0x78 | Schema_Atomic | Size: 0x18
			// GlobalTypes::CUtlVector< uint8 > m_bHasUserBitArray; // 0x90 | Schema_Atomic | Size: 0x18
			char  m_bHasUserBitArray[0x18]; // 0x90 | Schema_Atomic | Size: 0x18
		};
		static_assert(offsetof(CS2::animationsystem::CAnimEncodeDifference, m_boneArray) == 0x0, "m_boneArray in CAnimEncodeDifference should be at offset 0x0");
		static_assert(offsetof(CS2::animationsystem::CAnimEncodeDifference, m_morphArray) == 0x18, "m_morphArray in CAnimEncodeDifference should be at offset 0x18");
		static_assert(offsetof(CS2::animationsystem::CAnimEncodeDifference, m_userArray) == 0x30, "m_userArray in CAnimEncodeDifference should be at offset 0x30");
		static_assert(offsetof(CS2::animationsystem::CAnimEncodeDifference, m_bHasRotationBitArray) == 0x48, "m_bHasRotationBitArray in CAnimEncodeDifference should be at offset 0x48");
		static_assert(offsetof(CS2::animationsystem::CAnimEncodeDifference, m_bHasMovementBitArray) == 0x60, "m_bHasMovementBitArray in CAnimEncodeDifference should be at offset 0x60");
		static_assert(offsetof(CS2::animationsystem::CAnimEncodeDifference, m_bHasMorphBitArray) == 0x78, "m_bHasMorphBitArray in CAnimEncodeDifference should be at offset 0x78");
		static_assert(offsetof(CS2::animationsystem::CAnimEncodeDifference, m_bHasUserBitArray) == 0x90, "m_bHasUserBitArray in CAnimEncodeDifference should be at offset 0x90");
		static_assert(sizeof(CS2::animationsystem::CAnimEncodeDifference) == 0xA8, "CAnimEncodeDifference size should be 0xA8");
	}
}
