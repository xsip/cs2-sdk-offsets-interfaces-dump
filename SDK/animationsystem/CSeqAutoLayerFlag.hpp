// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif







using namespace GlobalTypes;
namespace CS2 {
	namespace animationsystem {
		class CSeqAutoLayerFlag  {
		public:
			bool m_bPost; // 0x0 | Schema_Builtin | Size: 0x1
			bool m_bSpline; // 0x1 | Schema_Builtin | Size: 0x1
			bool m_bXFade; // 0x2 | Schema_Builtin | Size: 0x1
			bool m_bNoBlend; // 0x3 | Schema_Builtin | Size: 0x1
			bool m_bLocal; // 0x4 | Schema_Builtin | Size: 0x1
			bool m_bPose; // 0x5 | Schema_Builtin | Size: 0x1
			bool m_bFetchFrame; // 0x6 | Schema_Builtin | Size: 0x1
			bool m_bSubtract; // 0x7 | Schema_Builtin | Size: 0x1
		};
		static_assert(offsetof(CS2::animationsystem::CSeqAutoLayerFlag, m_bPost) == 0x0, "m_bPost in CSeqAutoLayerFlag should be at offset 0x0");
		static_assert(offsetof(CS2::animationsystem::CSeqAutoLayerFlag, m_bSpline) == 0x1, "m_bSpline in CSeqAutoLayerFlag should be at offset 0x1");
		static_assert(offsetof(CS2::animationsystem::CSeqAutoLayerFlag, m_bXFade) == 0x2, "m_bXFade in CSeqAutoLayerFlag should be at offset 0x2");
		static_assert(offsetof(CS2::animationsystem::CSeqAutoLayerFlag, m_bNoBlend) == 0x3, "m_bNoBlend in CSeqAutoLayerFlag should be at offset 0x3");
		static_assert(offsetof(CS2::animationsystem::CSeqAutoLayerFlag, m_bLocal) == 0x4, "m_bLocal in CSeqAutoLayerFlag should be at offset 0x4");
		static_assert(offsetof(CS2::animationsystem::CSeqAutoLayerFlag, m_bPose) == 0x5, "m_bPose in CSeqAutoLayerFlag should be at offset 0x5");
		static_assert(offsetof(CS2::animationsystem::CSeqAutoLayerFlag, m_bFetchFrame) == 0x6, "m_bFetchFrame in CSeqAutoLayerFlag should be at offset 0x6");
		static_assert(offsetof(CS2::animationsystem::CSeqAutoLayerFlag, m_bSubtract) == 0x7, "m_bSubtract in CSeqAutoLayerFlag should be at offset 0x7");
		static_assert(sizeof(CS2::animationsystem::CSeqAutoLayerFlag) == 0x8, "CSeqAutoLayerFlag size should be 0x8");
	}
}
