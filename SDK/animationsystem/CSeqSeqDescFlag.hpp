// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif





namespace CS2 {
	namespace animationsystem {
		class CSeqSeqDescFlag  {
		public:
			bool m_bLooping; // 0x0 | Schema_Builtin | Size: 0x1
			bool m_bSnap; // 0x1 | Schema_Builtin | Size: 0x1
			bool m_bAutoplay; // 0x2 | Schema_Builtin | Size: 0x1
			bool m_bPost; // 0x3 | Schema_Builtin | Size: 0x1
			bool m_bHidden; // 0x4 | Schema_Builtin | Size: 0x1
			bool m_bMulti; // 0x5 | Schema_Builtin | Size: 0x1
			bool m_bLegacyDelta; // 0x6 | Schema_Builtin | Size: 0x1
			bool m_bLegacyWorldspace; // 0x7 | Schema_Builtin | Size: 0x1
			bool m_bLegacyCyclepose; // 0x8 | Schema_Builtin | Size: 0x1
			bool m_bLegacyRealtime; // 0x9 | Schema_Builtin | Size: 0x1
			bool m_bModelDoc; // 0xa | Schema_Builtin | Size: 0x1
		};
		static_assert(offsetof(CS2::animationsystem::CSeqSeqDescFlag, m_bLooping) == 0x0, "m_bLooping in CSeqSeqDescFlag should be at offset 0x0");
		static_assert(offsetof(CS2::animationsystem::CSeqSeqDescFlag, m_bSnap) == 0x1, "m_bSnap in CSeqSeqDescFlag should be at offset 0x1");
		static_assert(offsetof(CS2::animationsystem::CSeqSeqDescFlag, m_bAutoplay) == 0x2, "m_bAutoplay in CSeqSeqDescFlag should be at offset 0x2");
		static_assert(offsetof(CS2::animationsystem::CSeqSeqDescFlag, m_bPost) == 0x3, "m_bPost in CSeqSeqDescFlag should be at offset 0x3");
		static_assert(offsetof(CS2::animationsystem::CSeqSeqDescFlag, m_bHidden) == 0x4, "m_bHidden in CSeqSeqDescFlag should be at offset 0x4");
		static_assert(offsetof(CS2::animationsystem::CSeqSeqDescFlag, m_bMulti) == 0x5, "m_bMulti in CSeqSeqDescFlag should be at offset 0x5");
		static_assert(offsetof(CS2::animationsystem::CSeqSeqDescFlag, m_bLegacyDelta) == 0x6, "m_bLegacyDelta in CSeqSeqDescFlag should be at offset 0x6");
		static_assert(offsetof(CS2::animationsystem::CSeqSeqDescFlag, m_bLegacyWorldspace) == 0x7, "m_bLegacyWorldspace in CSeqSeqDescFlag should be at offset 0x7");
		static_assert(offsetof(CS2::animationsystem::CSeqSeqDescFlag, m_bLegacyCyclepose) == 0x8, "m_bLegacyCyclepose in CSeqSeqDescFlag should be at offset 0x8");
		static_assert(offsetof(CS2::animationsystem::CSeqSeqDescFlag, m_bLegacyRealtime) == 0x9, "m_bLegacyRealtime in CSeqSeqDescFlag should be at offset 0x9");
		static_assert(offsetof(CS2::animationsystem::CSeqSeqDescFlag, m_bModelDoc) == 0xA, "m_bModelDoc in CSeqSeqDescFlag should be at offset 0xA");
		static_assert(sizeof(CS2::animationsystem::CSeqSeqDescFlag) == 0xB, "CSeqSeqDescFlag size should be 0xB");
	}
}
