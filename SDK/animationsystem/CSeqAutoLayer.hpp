// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/animationsystem/CSeqAutoLayerFlag.hpp>





using namespace GlobalTypes;
namespace CS2 {
	namespace animationsystem {
		class CSeqAutoLayer  {
		public:
			int16_t m_nLocalReference; // 0x0 | Schema_Builtin | Size: 0x2
			int16_t m_nLocalPose; // 0x2 | Schema_Builtin | Size: 0x2
			animationsystem::CSeqAutoLayerFlag m_flags; // 0x4 | Schema_DeclaredClass | Size: 0x8
			float32 m_start; // 0xc | Schema_Builtin | Size: 0x4
			float32 m_peak; // 0x10 | Schema_Builtin | Size: 0x4
			float32 m_tail; // 0x14 | Schema_Builtin | Size: 0x4
			float32 m_end; // 0x18 | Schema_Builtin | Size: 0x4
		};
		static_assert(offsetof(CS2::animationsystem::CSeqAutoLayer, m_nLocalReference) == 0x0, "m_nLocalReference in CSeqAutoLayer should be at offset 0x0");
		static_assert(offsetof(CS2::animationsystem::CSeqAutoLayer, m_nLocalPose) == 0x2, "m_nLocalPose in CSeqAutoLayer should be at offset 0x2");
		static_assert(offsetof(CS2::animationsystem::CSeqAutoLayer, m_flags) == 0x4, "m_flags in CSeqAutoLayer should be at offset 0x4");
		static_assert(offsetof(CS2::animationsystem::CSeqAutoLayer, m_start) == 0xC, "m_start in CSeqAutoLayer should be at offset 0xC");
		static_assert(offsetof(CS2::animationsystem::CSeqAutoLayer, m_peak) == 0x10, "m_peak in CSeqAutoLayer should be at offset 0x10");
		static_assert(offsetof(CS2::animationsystem::CSeqAutoLayer, m_tail) == 0x14, "m_tail in CSeqAutoLayer should be at offset 0x14");
		static_assert(offsetof(CS2::animationsystem::CSeqAutoLayer, m_end) == 0x18, "m_end in CSeqAutoLayer should be at offset 0x18");
		static_assert(sizeof(CS2::animationsystem::CSeqAutoLayer) == 0x1C, "CSeqAutoLayer size should be 0x1C");
	}
}
