// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/animationsystem/CAnimEncodeDifference.hpp>



namespace CS2 {
	namespace animationsystem {
		class CAnimFrameBlockAnim;
	}
}


using namespace GlobalTypes;
namespace CS2 {
	namespace animationsystem {
		class CAnimEncodedFrames  {
		public:
			GlobalTypes::CBufferString m_fileName; // 0x0 | Schema_Atomic | Size: 0x10
			int32_t m_nFrames; // 0x10 | Schema_Builtin | Size: 0x4
			int32_t m_nFramesPerBlock; // 0x14 | Schema_Builtin | Size: 0x4
			GlobalTypes::CUtlVector<animationsystem::CAnimFrameBlockAnim> m_frameblockArray; // 0x18 | Schema_Atomic | Size: 0x18
			// char  m_frameblockArray[0x18]; // 0x18 | Schema_Atomic | Size: 0x18
			animationsystem::CAnimEncodeDifference m_usageDifferences; // 0x30 | Schema_DeclaredClass | Size: 0xa8
		};
		static_assert(offsetof(CS2::animationsystem::CAnimEncodedFrames, m_fileName) == 0x0, "m_fileName in CAnimEncodedFrames should be at offset 0x0");
		static_assert(offsetof(CS2::animationsystem::CAnimEncodedFrames, m_nFrames) == 0x10, "m_nFrames in CAnimEncodedFrames should be at offset 0x10");
		static_assert(offsetof(CS2::animationsystem::CAnimEncodedFrames, m_nFramesPerBlock) == 0x14, "m_nFramesPerBlock in CAnimEncodedFrames should be at offset 0x14");
		static_assert(offsetof(CS2::animationsystem::CAnimEncodedFrames, m_frameblockArray) == 0x18, "m_frameblockArray in CAnimEncodedFrames should be at offset 0x18");
		static_assert(offsetof(CS2::animationsystem::CAnimEncodedFrames, m_usageDifferences) == 0x30, "m_usageDifferences in CAnimEncodedFrames should be at offset 0x30");
		static_assert(sizeof(CS2::animationsystem::CAnimEncodedFrames) == 0xD8, "CAnimEncodedFrames size should be 0xD8");
	}
}
