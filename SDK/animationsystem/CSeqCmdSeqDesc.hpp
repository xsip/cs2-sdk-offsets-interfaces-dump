// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/animationsystem/CSeqSeqDescFlag.hpp>
#include <SDK/animationsystem/CSeqTransition.hpp>



namespace CS2 {
	namespace animationsystem {
		class CSeqCmdLayer;
		class CAnimEventDefinition;
		class CAnimActivity;
		class CSeqPoseSetting;
	}
}


using namespace GlobalTypes;
namespace CS2 {
	namespace animationsystem {
		class CSeqCmdSeqDesc  {
		public:
			GlobalTypes::CBufferString m_sName; // 0x0 | Schema_Atomic | Size: 0x10
			animationsystem::CSeqSeqDescFlag m_flags; // 0x10 | Schema_DeclaredClass | Size: 0xb
			S2_PAD(0x1);
			animationsystem::CSeqTransition m_transition; // 0x1c | Schema_DeclaredClass | Size: 0x8
			int16_t m_nFrameRangeSequence; // 0x24 | Schema_Builtin | Size: 0x2
			int16_t m_nFrameCount; // 0x26 | Schema_Builtin | Size: 0x2
			float32 m_flFPS; // 0x28 | Schema_Builtin | Size: 0x4
			int16_t m_nSubCycles; // 0x2c | Schema_Builtin | Size: 0x2
			int16_t m_numLocalResults; // 0x2e | Schema_Builtin | Size: 0x2
			GlobalTypes::CUtlVector< animationsystem::CSeqCmdLayer > m_cmdLayerArray; // 0x30 | Schema_Atomic | Size: 0x18
			// char  m_cmdLayerArray[0x18]; // 0x30 | Schema_Atomic | Size: 0x18
			GlobalTypes::CUtlVector< animationsystem::CAnimEventDefinition > m_eventArray; // 0x48 | Schema_Atomic | Size: 0x18
			// char  m_eventArray[0x18]; // 0x48 | Schema_Atomic | Size: 0x18
			GlobalTypes::CUtlVector< animationsystem::CAnimActivity > m_activityArray; // 0x60 | Schema_Atomic | Size: 0x18
			// char  m_activityArray[0x18]; // 0x60 | Schema_Atomic | Size: 0x18
			GlobalTypes::CUtlVector< animationsystem::CSeqPoseSetting > m_poseSettingArray; // 0x78 | Schema_Atomic | Size: 0x18
			// char  m_poseSettingArray[0x18]; // 0x78 | Schema_Atomic | Size: 0x18
		};
		static_assert(offsetof(CS2::animationsystem::CSeqCmdSeqDesc, m_sName) == 0x0, "m_sName in CSeqCmdSeqDesc should be at offset 0x0");
		static_assert(offsetof(CS2::animationsystem::CSeqCmdSeqDesc, m_flags) == 0x10, "m_flags in CSeqCmdSeqDesc should be at offset 0x10");
		static_assert(offsetof(CS2::animationsystem::CSeqCmdSeqDesc, m_transition) == 0x1C, "m_transition in CSeqCmdSeqDesc should be at offset 0x1C");
		static_assert(offsetof(CS2::animationsystem::CSeqCmdSeqDesc, m_nFrameRangeSequence) == 0x24, "m_nFrameRangeSequence in CSeqCmdSeqDesc should be at offset 0x24");
		static_assert(offsetof(CS2::animationsystem::CSeqCmdSeqDesc, m_nFrameCount) == 0x26, "m_nFrameCount in CSeqCmdSeqDesc should be at offset 0x26");
		static_assert(offsetof(CS2::animationsystem::CSeqCmdSeqDesc, m_flFPS) == 0x28, "m_flFPS in CSeqCmdSeqDesc should be at offset 0x28");
		static_assert(offsetof(CS2::animationsystem::CSeqCmdSeqDesc, m_nSubCycles) == 0x2C, "m_nSubCycles in CSeqCmdSeqDesc should be at offset 0x2C");
		static_assert(offsetof(CS2::animationsystem::CSeqCmdSeqDesc, m_numLocalResults) == 0x2E, "m_numLocalResults in CSeqCmdSeqDesc should be at offset 0x2E");
		static_assert(offsetof(CS2::animationsystem::CSeqCmdSeqDesc, m_cmdLayerArray) == 0x30, "m_cmdLayerArray in CSeqCmdSeqDesc should be at offset 0x30");
		static_assert(offsetof(CS2::animationsystem::CSeqCmdSeqDesc, m_eventArray) == 0x48, "m_eventArray in CSeqCmdSeqDesc should be at offset 0x48");
		static_assert(offsetof(CS2::animationsystem::CSeqCmdSeqDesc, m_activityArray) == 0x60, "m_activityArray in CSeqCmdSeqDesc should be at offset 0x60");
		static_assert(offsetof(CS2::animationsystem::CSeqCmdSeqDesc, m_poseSettingArray) == 0x78, "m_poseSettingArray in CSeqCmdSeqDesc should be at offset 0x78");
		static_assert(sizeof(CS2::animationsystem::CSeqCmdSeqDesc) == 0x90, "CSeqCmdSeqDesc size should be 0x90");
	}
}
