// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <SDK/GlobalTypes.hpp>

#include <SDK/pulse_runtime_lib/CPulseCell_BaseYieldingInflow.hpp>
#include <SDK/pulse_runtime_lib/CPulse_ResumePoint.hpp>



namespace CS2 {
	namespace pulse_system {
		class CPulseCell_TestWaitWithCursorState : public CS2::pulse_runtime_lib::CPulseCell_BaseYieldingInflow {
		public:
			pulse_runtime_lib::CPulse_ResumePoint m_WakeResume; // 0x48 | Schema_DeclaredClass | Size: 0x48
			pulse_runtime_lib::CPulse_ResumePoint m_WakeCancel; // 0x90 | Schema_DeclaredClass | Size: 0x48
			pulse_runtime_lib::CPulse_ResumePoint m_WakeFail; // 0xd8 | Schema_DeclaredClass | Size: 0x48
		};
		static_assert(offsetof(CS2::pulse_system::CPulseCell_TestWaitWithCursorState, m_WakeResume) == 0x48, "m_WakeResume in CPulseCell_TestWaitWithCursorState should be at offset 0x48");
		static_assert(offsetof(CS2::pulse_system::CPulseCell_TestWaitWithCursorState, m_WakeCancel) == 0x90, "m_WakeCancel in CPulseCell_TestWaitWithCursorState should be at offset 0x90");
		static_assert(offsetof(CS2::pulse_system::CPulseCell_TestWaitWithCursorState, m_WakeFail) == 0xD8, "m_WakeFail in CPulseCell_TestWaitWithCursorState should be at offset 0xD8");
		static_assert(sizeof(CS2::pulse_system::CPulseCell_TestWaitWithCursorState) == 0x120, "CPulseCell_TestWaitWithCursorState size should be 0x120");
	}
}
