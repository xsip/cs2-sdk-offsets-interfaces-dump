// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <SDK/GlobalTypes.hpp>

#include <SDK/pulse_runtime_lib/CBasePulseGraphInstance.hpp>



namespace CS2 {
	namespace pulse_system {
		class CPulseGraphInstance_TestDomain : public CS2::pulse_runtime_lib::CBasePulseGraphInstance {
		public:
			S2_PAD(0x8);
			bool m_bIsRunningUnitTests; // 0x118 | Schema_Builtin | Size: 0x1
			bool m_bExplicitTimeStepping; // 0x119 | Schema_Builtin | Size: 0x1
			bool m_bExpectingToDestroyWithYieldedCursors; // 0x11a | Schema_Builtin | Size: 0x1
			bool m_bQuietTracepoints; // 0x11b | Schema_Builtin | Size: 0x1
			bool m_bExpectingCursorTerminatedDueToMaxInstructions; // 0x11c | Schema_Builtin | Size: 0x1
			S2_PAD(0x3);
			int32_t m_nCursorsTerminatedDueToMaxInstructions; // 0x120 | Schema_Builtin | Size: 0x4
			int32_t m_nNextValidateIndex; // 0x124 | Schema_Builtin | Size: 0x4
			// GlobalTypes::CUtlVector< GlobalTypes::CUtlString > m_Tracepoints; // 0x128 | Schema_Atomic | Size: 0x18
			char  m_Tracepoints[0x18]; // 0x128 | Schema_Atomic | Size: 0x18
			bool m_bTestYesOrNoPath; // 0x140 | Schema_Builtin | Size: 0x1
			S2_PAD(0x7); // End padding
		};
		static_assert(offsetof(CS2::pulse_system::CPulseGraphInstance_TestDomain, m_bIsRunningUnitTests) == 0x118, "m_bIsRunningUnitTests in CPulseGraphInstance_TestDomain should be at offset 0x118");
		static_assert(offsetof(CS2::pulse_system::CPulseGraphInstance_TestDomain, m_bExplicitTimeStepping) == 0x119, "m_bExplicitTimeStepping in CPulseGraphInstance_TestDomain should be at offset 0x119");
		static_assert(offsetof(CS2::pulse_system::CPulseGraphInstance_TestDomain, m_bExpectingToDestroyWithYieldedCursors) == 0x11A, "m_bExpectingToDestroyWithYieldedCursors in CPulseGraphInstance_TestDomain should be at offset 0x11A");
		static_assert(offsetof(CS2::pulse_system::CPulseGraphInstance_TestDomain, m_bQuietTracepoints) == 0x11B, "m_bQuietTracepoints in CPulseGraphInstance_TestDomain should be at offset 0x11B");
		static_assert(offsetof(CS2::pulse_system::CPulseGraphInstance_TestDomain, m_bExpectingCursorTerminatedDueToMaxInstructions) == 0x11C, "m_bExpectingCursorTerminatedDueToMaxInstructions in CPulseGraphInstance_TestDomain should be at offset 0x11C");
		static_assert(offsetof(CS2::pulse_system::CPulseGraphInstance_TestDomain, m_nCursorsTerminatedDueToMaxInstructions) == 0x120, "m_nCursorsTerminatedDueToMaxInstructions in CPulseGraphInstance_TestDomain should be at offset 0x120");
		static_assert(offsetof(CS2::pulse_system::CPulseGraphInstance_TestDomain, m_nNextValidateIndex) == 0x124, "m_nNextValidateIndex in CPulseGraphInstance_TestDomain should be at offset 0x124");
		static_assert(offsetof(CS2::pulse_system::CPulseGraphInstance_TestDomain, m_Tracepoints) == 0x128, "m_Tracepoints in CPulseGraphInstance_TestDomain should be at offset 0x128");
		static_assert(offsetof(CS2::pulse_system::CPulseGraphInstance_TestDomain, m_bTestYesOrNoPath) == 0x140, "m_bTestYesOrNoPath in CPulseGraphInstance_TestDomain should be at offset 0x140");
		static_assert(sizeof(CS2::pulse_system::CPulseGraphInstance_TestDomain) == 0x148, "CPulseGraphInstance_TestDomain size should be 0x148");
	}
}
