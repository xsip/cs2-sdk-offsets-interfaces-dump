// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif





namespace CS2 {
	namespace navlib {
		class CNavHullVData  {
		public:
			bool m_bAgentEnabled; // 0x0 | Schema_Builtin | Size: 0x1
			S2_PAD(0x3);
			float32 m_agentRadius; // 0x4 | Schema_Builtin | Size: 0x4
			float32 m_agentHeight; // 0x8 | Schema_Builtin | Size: 0x4
			bool m_agentShortHeightEnabled; // 0xc | Schema_Builtin | Size: 0x1
			S2_PAD(0x3);
			float32 m_agentShortHeight; // 0x10 | Schema_Builtin | Size: 0x4
			bool m_agentCrawlEnabled; // 0x14 | Schema_Builtin | Size: 0x1
			S2_PAD(0x3);
			float32 m_agentCrawlHeight; // 0x18 | Schema_Builtin | Size: 0x4
			float32 m_agentMaxClimb; // 0x1c | Schema_Builtin | Size: 0x4
			int32_t m_agentMaxSlope; // 0x20 | Schema_Builtin | Size: 0x4
			float32 m_agentMaxJumpDownDist; // 0x24 | Schema_Builtin | Size: 0x4
			float32 m_agentMaxJumpHorizDistBase; // 0x28 | Schema_Builtin | Size: 0x4
			float32 m_agentMaxJumpUpDist; // 0x2c | Schema_Builtin | Size: 0x4
			int32_t m_agentBorderErosion; // 0x30 | Schema_Builtin | Size: 0x4
			bool m_flowMapGenerationEnabled; // 0x34 | Schema_Builtin | Size: 0x1
			S2_PAD(0x3);
			float32 m_flowMapNodeMaxRadius; // 0x38 | Schema_Builtin | Size: 0x4
		};
		static_assert(offsetof(CS2::navlib::CNavHullVData, m_bAgentEnabled) == 0x0, "m_bAgentEnabled in CNavHullVData should be at offset 0x0");
		static_assert(offsetof(CS2::navlib::CNavHullVData, m_agentRadius) == 0x4, "m_agentRadius in CNavHullVData should be at offset 0x4");
		static_assert(offsetof(CS2::navlib::CNavHullVData, m_agentHeight) == 0x8, "m_agentHeight in CNavHullVData should be at offset 0x8");
		static_assert(offsetof(CS2::navlib::CNavHullVData, m_agentShortHeightEnabled) == 0xC, "m_agentShortHeightEnabled in CNavHullVData should be at offset 0xC");
		static_assert(offsetof(CS2::navlib::CNavHullVData, m_agentShortHeight) == 0x10, "m_agentShortHeight in CNavHullVData should be at offset 0x10");
		static_assert(offsetof(CS2::navlib::CNavHullVData, m_agentCrawlEnabled) == 0x14, "m_agentCrawlEnabled in CNavHullVData should be at offset 0x14");
		static_assert(offsetof(CS2::navlib::CNavHullVData, m_agentCrawlHeight) == 0x18, "m_agentCrawlHeight in CNavHullVData should be at offset 0x18");
		static_assert(offsetof(CS2::navlib::CNavHullVData, m_agentMaxClimb) == 0x1C, "m_agentMaxClimb in CNavHullVData should be at offset 0x1C");
		static_assert(offsetof(CS2::navlib::CNavHullVData, m_agentMaxSlope) == 0x20, "m_agentMaxSlope in CNavHullVData should be at offset 0x20");
		static_assert(offsetof(CS2::navlib::CNavHullVData, m_agentMaxJumpDownDist) == 0x24, "m_agentMaxJumpDownDist in CNavHullVData should be at offset 0x24");
		static_assert(offsetof(CS2::navlib::CNavHullVData, m_agentMaxJumpHorizDistBase) == 0x28, "m_agentMaxJumpHorizDistBase in CNavHullVData should be at offset 0x28");
		static_assert(offsetof(CS2::navlib::CNavHullVData, m_agentMaxJumpUpDist) == 0x2C, "m_agentMaxJumpUpDist in CNavHullVData should be at offset 0x2C");
		static_assert(offsetof(CS2::navlib::CNavHullVData, m_agentBorderErosion) == 0x30, "m_agentBorderErosion in CNavHullVData should be at offset 0x30");
		static_assert(offsetof(CS2::navlib::CNavHullVData, m_flowMapGenerationEnabled) == 0x34, "m_flowMapGenerationEnabled in CNavHullVData should be at offset 0x34");
		static_assert(offsetof(CS2::navlib::CNavHullVData, m_flowMapNodeMaxRadius) == 0x38, "m_flowMapNodeMaxRadius in CNavHullVData should be at offset 0x38");
		static_assert(sizeof(CS2::navlib::CNavHullVData) == 0x3C, "CNavHullVData size should be 0x3C");
	}
}
