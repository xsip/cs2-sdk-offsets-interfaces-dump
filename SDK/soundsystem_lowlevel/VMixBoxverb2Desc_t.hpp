// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/soundsystem_lowlevel/VMixFilterDesc_t.hpp>





using namespace GlobalTypes;
namespace CS2 {
	namespace soundsystem_lowlevel {
		class VMixBoxverb2Desc_t  {
		public:
			float32 m_flSizeMax; // 0x0 | Schema_Builtin | Size: 0x4
			float32 m_flSizeMin; // 0x4 | Schema_Builtin | Size: 0x4
			float32 m_flComplexity; // 0x8 | Schema_Builtin | Size: 0x4
			float32 m_flDiffusion; // 0xc | Schema_Builtin | Size: 0x4
			float32 m_flModDepth; // 0x10 | Schema_Builtin | Size: 0x4
			float32 m_flModRate; // 0x14 | Schema_Builtin | Size: 0x4
			bool m_bParallel; // 0x18 | Schema_Builtin | Size: 0x1
			S2_PAD(0x3);
			soundsystem_lowlevel::VMixFilterDesc_t m_filterType; // 0x1c | Schema_DeclaredClass | Size: 0x10
			float32 m_flWidth; // 0x2c | Schema_Builtin | Size: 0x4
			float32 m_flHeight; // 0x30 | Schema_Builtin | Size: 0x4
			float32 m_flDepth; // 0x34 | Schema_Builtin | Size: 0x4
			float32 m_flFeedbackScale; // 0x38 | Schema_Builtin | Size: 0x4
			float32 m_flFeedbackWidth; // 0x3c | Schema_Builtin | Size: 0x4
			float32 m_flFeedbackHeight; // 0x40 | Schema_Builtin | Size: 0x4
			float32 m_flFeedbackDepth; // 0x44 | Schema_Builtin | Size: 0x4
			float32 m_flOutputGain; // 0x48 | Schema_Builtin | Size: 0x4
			float32 m_flTaps; // 0x4c | Schema_Builtin | Size: 0x4
		};
		static_assert(offsetof(CS2::soundsystem_lowlevel::VMixBoxverb2Desc_t, m_flSizeMax) == 0x0, "m_flSizeMax in VMixBoxverb2Desc_t should be at offset 0x0");
		static_assert(offsetof(CS2::soundsystem_lowlevel::VMixBoxverb2Desc_t, m_flSizeMin) == 0x4, "m_flSizeMin in VMixBoxverb2Desc_t should be at offset 0x4");
		static_assert(offsetof(CS2::soundsystem_lowlevel::VMixBoxverb2Desc_t, m_flComplexity) == 0x8, "m_flComplexity in VMixBoxverb2Desc_t should be at offset 0x8");
		static_assert(offsetof(CS2::soundsystem_lowlevel::VMixBoxverb2Desc_t, m_flDiffusion) == 0xC, "m_flDiffusion in VMixBoxverb2Desc_t should be at offset 0xC");
		static_assert(offsetof(CS2::soundsystem_lowlevel::VMixBoxverb2Desc_t, m_flModDepth) == 0x10, "m_flModDepth in VMixBoxverb2Desc_t should be at offset 0x10");
		static_assert(offsetof(CS2::soundsystem_lowlevel::VMixBoxverb2Desc_t, m_flModRate) == 0x14, "m_flModRate in VMixBoxverb2Desc_t should be at offset 0x14");
		static_assert(offsetof(CS2::soundsystem_lowlevel::VMixBoxverb2Desc_t, m_bParallel) == 0x18, "m_bParallel in VMixBoxverb2Desc_t should be at offset 0x18");
		static_assert(offsetof(CS2::soundsystem_lowlevel::VMixBoxverb2Desc_t, m_filterType) == 0x1C, "m_filterType in VMixBoxverb2Desc_t should be at offset 0x1C");
		static_assert(offsetof(CS2::soundsystem_lowlevel::VMixBoxverb2Desc_t, m_flWidth) == 0x2C, "m_flWidth in VMixBoxverb2Desc_t should be at offset 0x2C");
		static_assert(offsetof(CS2::soundsystem_lowlevel::VMixBoxverb2Desc_t, m_flHeight) == 0x30, "m_flHeight in VMixBoxverb2Desc_t should be at offset 0x30");
		static_assert(offsetof(CS2::soundsystem_lowlevel::VMixBoxverb2Desc_t, m_flDepth) == 0x34, "m_flDepth in VMixBoxverb2Desc_t should be at offset 0x34");
		static_assert(offsetof(CS2::soundsystem_lowlevel::VMixBoxverb2Desc_t, m_flFeedbackScale) == 0x38, "m_flFeedbackScale in VMixBoxverb2Desc_t should be at offset 0x38");
		static_assert(offsetof(CS2::soundsystem_lowlevel::VMixBoxverb2Desc_t, m_flFeedbackWidth) == 0x3C, "m_flFeedbackWidth in VMixBoxverb2Desc_t should be at offset 0x3C");
		static_assert(offsetof(CS2::soundsystem_lowlevel::VMixBoxverb2Desc_t, m_flFeedbackHeight) == 0x40, "m_flFeedbackHeight in VMixBoxverb2Desc_t should be at offset 0x40");
		static_assert(offsetof(CS2::soundsystem_lowlevel::VMixBoxverb2Desc_t, m_flFeedbackDepth) == 0x44, "m_flFeedbackDepth in VMixBoxverb2Desc_t should be at offset 0x44");
		static_assert(offsetof(CS2::soundsystem_lowlevel::VMixBoxverb2Desc_t, m_flOutputGain) == 0x48, "m_flOutputGain in VMixBoxverb2Desc_t should be at offset 0x48");
		static_assert(offsetof(CS2::soundsystem_lowlevel::VMixBoxverb2Desc_t, m_flTaps) == 0x4C, "m_flTaps in VMixBoxverb2Desc_t should be at offset 0x4C");
		static_assert(sizeof(CS2::soundsystem_lowlevel::VMixBoxverb2Desc_t) == 0x50, "VMixBoxverb2Desc_t size should be 0x50");
	}
}
