// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/soundsystem_lowlevel/VMixChannelOperation_t.hpp>





using namespace GlobalTypes;
namespace CS2 {
	namespace soundsystem_lowlevel {
		class VMixUtilityDesc_t  {
		public:
			soundsystem_lowlevel::VMixChannelOperation_t m_nOp; // 0x0 | Schema_DeclaredEnum | Size: 0x4
			float32 m_flInputPan; // 0x4 | Schema_Builtin | Size: 0x4
			float32 m_flOutputBalance; // 0x8 | Schema_Builtin | Size: 0x4
			float32 m_fldbOutputGain; // 0xc | Schema_Builtin | Size: 0x4
			bool m_bBassMono; // 0x10 | Schema_Builtin | Size: 0x1
			S2_PAD(0x3);
			float32 m_flBassFreq; // 0x14 | Schema_Builtin | Size: 0x4
		};
		static_assert(offsetof(CS2::soundsystem_lowlevel::VMixUtilityDesc_t, m_nOp) == 0x0, "m_nOp in VMixUtilityDesc_t should be at offset 0x0");
		static_assert(offsetof(CS2::soundsystem_lowlevel::VMixUtilityDesc_t, m_flInputPan) == 0x4, "m_flInputPan in VMixUtilityDesc_t should be at offset 0x4");
		static_assert(offsetof(CS2::soundsystem_lowlevel::VMixUtilityDesc_t, m_flOutputBalance) == 0x8, "m_flOutputBalance in VMixUtilityDesc_t should be at offset 0x8");
		static_assert(offsetof(CS2::soundsystem_lowlevel::VMixUtilityDesc_t, m_fldbOutputGain) == 0xC, "m_fldbOutputGain in VMixUtilityDesc_t should be at offset 0xC");
		static_assert(offsetof(CS2::soundsystem_lowlevel::VMixUtilityDesc_t, m_bBassMono) == 0x10, "m_bBassMono in VMixUtilityDesc_t should be at offset 0x10");
		static_assert(offsetof(CS2::soundsystem_lowlevel::VMixUtilityDesc_t, m_flBassFreq) == 0x14, "m_flBassFreq in VMixUtilityDesc_t should be at offset 0x14");
		static_assert(sizeof(CS2::soundsystem_lowlevel::VMixUtilityDesc_t) == 0x18, "VMixUtilityDesc_t size should be 0x18");
	}
}
