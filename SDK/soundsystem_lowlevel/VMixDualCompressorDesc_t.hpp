// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/soundsystem_lowlevel/VMixDynamicsBand_t.hpp>



namespace CS2 {
	namespace soundsystem_lowlevel {
		class VMixDualCompressorDesc_t  {
		public:
			float32 m_flRMSTimeMS; // 0x0 | Schema_Builtin | Size: 0x4
			float32 m_fldbKneeWidth; // 0x4 | Schema_Builtin | Size: 0x4
			float32 m_flWetMix; // 0x8 | Schema_Builtin | Size: 0x4
			bool m_bPeakMode; // 0xc | Schema_Builtin | Size: 0x1
			S2_PAD(0x3);
			soundsystem_lowlevel::VMixDynamicsBand_t m_bandDesc; // 0x10 | Schema_DeclaredClass | Size: 0x24
		};
		static_assert(offsetof(CS2::soundsystem_lowlevel::VMixDualCompressorDesc_t, m_flRMSTimeMS) == 0x0, "m_flRMSTimeMS in VMixDualCompressorDesc_t should be at offset 0x0");
		static_assert(offsetof(CS2::soundsystem_lowlevel::VMixDualCompressorDesc_t, m_fldbKneeWidth) == 0x4, "m_fldbKneeWidth in VMixDualCompressorDesc_t should be at offset 0x4");
		static_assert(offsetof(CS2::soundsystem_lowlevel::VMixDualCompressorDesc_t, m_flWetMix) == 0x8, "m_flWetMix in VMixDualCompressorDesc_t should be at offset 0x8");
		static_assert(offsetof(CS2::soundsystem_lowlevel::VMixDualCompressorDesc_t, m_bPeakMode) == 0xC, "m_bPeakMode in VMixDualCompressorDesc_t should be at offset 0xC");
		static_assert(offsetof(CS2::soundsystem_lowlevel::VMixDualCompressorDesc_t, m_bandDesc) == 0x10, "m_bandDesc in VMixDualCompressorDesc_t should be at offset 0x10");
		static_assert(sizeof(CS2::soundsystem_lowlevel::VMixDualCompressorDesc_t) == 0x34, "VMixDualCompressorDesc_t size should be 0x34");
	}
}
