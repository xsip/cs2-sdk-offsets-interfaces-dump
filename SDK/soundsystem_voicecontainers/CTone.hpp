// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif





namespace CS2 {
	namespace soundsystem_voicecontainers {
		class CTone  {
		public:
			// GlobalTypes::CHarmonic > m_harmonics; // 0x0 | Schema_Atomic | Size: 0x18
			char  m_harmonics[0x18]; // 0x0 | Schema_Atomic | Size: 0x18
			GlobalTypes::CPiecewiseCurve m_curve; // 0x18 | Schema_Atomic | Size: 0x40
			bool m_bSyncInstances; // 0x58 | Schema_Builtin | Size: 0x1
			S2_PAD(0x7); // End padding
		};
		static_assert(offsetof(CS2::soundsystem_voicecontainers::CTone, m_harmonics) == 0x0, "m_harmonics in CVoiceContainerStaticAdditiveSynth::CTone should be at offset 0x0");
		static_assert(offsetof(CS2::soundsystem_voicecontainers::CTone, m_curve) == 0x18, "m_curve in CVoiceContainerStaticAdditiveSynth::CTone should be at offset 0x18");
		static_assert(offsetof(CS2::soundsystem_voicecontainers::CTone, m_bSyncInstances) == 0x58, "m_bSyncInstances in CVoiceContainerStaticAdditiveSynth::CTone should be at offset 0x58");
		static_assert(sizeof(CS2::soundsystem_voicecontainers::CTone) == 0x60, "CVoiceContainerStaticAdditiveSynth::CTone size should be 0x60");
	}
}
