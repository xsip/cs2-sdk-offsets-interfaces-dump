// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/soundsystem_voicecontainers/CVoiceContainerBase.hpp>





using namespace GlobalTypes;
namespace CS2 {
	namespace soundsystem_voicecontainers {
		class CVoiceContainerRandomSampler : public CS2::soundsystem_voicecontainers::CVoiceContainerBase {
		public:
			float32 m_flAmplitude; // 0xb8 | Schema_Builtin | Size: 0x4
			float32 m_flAmplitudeJitter; // 0xbc | Schema_Builtin | Size: 0x4
			float32 m_flTimeJitter; // 0xc0 | Schema_Builtin | Size: 0x4
			float32 m_flMaxLength; // 0xc4 | Schema_Builtin | Size: 0x4
			int32_t m_nNumDelayVariations; // 0xc8 | Schema_Builtin | Size: 0x4
			S2_PAD(0x4);
			GlobalTypes::CUtlVector<GlobalTypes::CStrongHandle<resourcesystem::InfoForResourceTypeCVoiceContainerBase>> m_grainResources; // 0xd0 | Schema_Atomic | Size: 0x18
			// char  m_grainResources[0x18]; // 0xd0 | Schema_Atomic | Size: 0x18
			S2_PAD(0xf8); // End padding
		};
		static_assert(offsetof(CS2::soundsystem_voicecontainers::CVoiceContainerRandomSampler, m_flAmplitude) == 0xB8, "m_flAmplitude in CVoiceContainerRandomSampler should be at offset 0xB8");
		static_assert(offsetof(CS2::soundsystem_voicecontainers::CVoiceContainerRandomSampler, m_flAmplitudeJitter) == 0xBC, "m_flAmplitudeJitter in CVoiceContainerRandomSampler should be at offset 0xBC");
		static_assert(offsetof(CS2::soundsystem_voicecontainers::CVoiceContainerRandomSampler, m_flTimeJitter) == 0xC0, "m_flTimeJitter in CVoiceContainerRandomSampler should be at offset 0xC0");
		static_assert(offsetof(CS2::soundsystem_voicecontainers::CVoiceContainerRandomSampler, m_flMaxLength) == 0xC4, "m_flMaxLength in CVoiceContainerRandomSampler should be at offset 0xC4");
		static_assert(offsetof(CS2::soundsystem_voicecontainers::CVoiceContainerRandomSampler, m_nNumDelayVariations) == 0xC8, "m_nNumDelayVariations in CVoiceContainerRandomSampler should be at offset 0xC8");
		static_assert(offsetof(CS2::soundsystem_voicecontainers::CVoiceContainerRandomSampler, m_grainResources) == 0xD0, "m_grainResources in CVoiceContainerRandomSampler should be at offset 0xD0");
		static_assert(sizeof(CS2::soundsystem_voicecontainers::CVoiceContainerRandomSampler) == 0x1E0, "CVoiceContainerRandomSampler size should be 0x1E0");
	}
}
