// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <SDK/GlobalTypes.hpp>

#include <SDK/soundsystem_voicecontainers/CVoiceContainerBase.hpp>
#include <SDK/soundsystem_voicecontainers/CSoundContainerReference.hpp>



namespace CS2 {
	namespace soundsystem_voicecontainers {
		class CVoiceContainerParameterBlender : public CS2::soundsystem_voicecontainers::CVoiceContainerBase {
		public:
			soundsystem_voicecontainers::CSoundContainerReference m_firstSound; // 0xb8 | Schema_DeclaredClass | Size: 0x18
			soundsystem_voicecontainers::CSoundContainerReference m_secondSound; // 0xd0 | Schema_DeclaredClass | Size: 0x18
			bool m_bEnableOcclusionBlend; // 0xe8 | Schema_Builtin | Size: 0x1
			S2_PAD(0x7);
			GlobalTypes::CPiecewiseCurve m_curve1; // 0xf0 | Schema_Atomic | Size: 0x40
			GlobalTypes::CPiecewiseCurve m_curve2; // 0x130 | Schema_Atomic | Size: 0x40
			bool m_bEnableDistanceBlend; // 0x170 | Schema_Builtin | Size: 0x1
			S2_PAD(0x7);
			GlobalTypes::CPiecewiseCurve m_curve3; // 0x178 | Schema_Atomic | Size: 0x40
			GlobalTypes::CPiecewiseCurve m_curve4; // 0x1b8 | Schema_Atomic | Size: 0x40
		};
		static_assert(offsetof(CS2::soundsystem_voicecontainers::CVoiceContainerParameterBlender, m_firstSound) == 0xB8, "m_firstSound in CVoiceContainerParameterBlender should be at offset 0xB8");
		static_assert(offsetof(CS2::soundsystem_voicecontainers::CVoiceContainerParameterBlender, m_secondSound) == 0xD0, "m_secondSound in CVoiceContainerParameterBlender should be at offset 0xD0");
		static_assert(offsetof(CS2::soundsystem_voicecontainers::CVoiceContainerParameterBlender, m_bEnableOcclusionBlend) == 0xE8, "m_bEnableOcclusionBlend in CVoiceContainerParameterBlender should be at offset 0xE8");
		static_assert(offsetof(CS2::soundsystem_voicecontainers::CVoiceContainerParameterBlender, m_curve1) == 0xF0, "m_curve1 in CVoiceContainerParameterBlender should be at offset 0xF0");
		static_assert(offsetof(CS2::soundsystem_voicecontainers::CVoiceContainerParameterBlender, m_curve2) == 0x130, "m_curve2 in CVoiceContainerParameterBlender should be at offset 0x130");
		static_assert(offsetof(CS2::soundsystem_voicecontainers::CVoiceContainerParameterBlender, m_bEnableDistanceBlend) == 0x170, "m_bEnableDistanceBlend in CVoiceContainerParameterBlender should be at offset 0x170");
		static_assert(offsetof(CS2::soundsystem_voicecontainers::CVoiceContainerParameterBlender, m_curve3) == 0x178, "m_curve3 in CVoiceContainerParameterBlender should be at offset 0x178");
		static_assert(offsetof(CS2::soundsystem_voicecontainers::CVoiceContainerParameterBlender, m_curve4) == 0x1B8, "m_curve4 in CVoiceContainerParameterBlender should be at offset 0x1B8");
		static_assert(sizeof(CS2::soundsystem_voicecontainers::CVoiceContainerParameterBlender) == 0x1F8, "CVoiceContainerParameterBlender size should be 0x1F8");
	}
}
