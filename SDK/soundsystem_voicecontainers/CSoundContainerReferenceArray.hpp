// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <SDK/GlobalTypes.hpp>




namespace CS2 {
	namespace soundsystem_voicecontainers {
		class CSoundContainerReferenceArray  {
		public:
			bool m_bUseReference; // 0x0 | Schema_Builtin | Size: 0x1
			S2_PAD(0x7);
			// GlobalTypes::CUtlVector< GlobalTypes::CStrongHandle< InfoForResourceTypeCVoiceContainerBase > > m_sounds; // 0x8 | Schema_Atomic | Size: 0x18
			char  m_sounds[0x18]; // 0x8 | Schema_Atomic | Size: 0x18
			// GlobalTypes::CUtlVector< CVoiceContainerBase >* m_pSounds; // 0x20 | Schema_Atomic | Size: 0x18
			char  m_pSounds[0x18]; // 0x20 | Schema_Atomic | Size: 0x18
		};
		static_assert(offsetof(CS2::soundsystem_voicecontainers::CSoundContainerReferenceArray, m_bUseReference) == 0x0, "m_bUseReference in CSoundContainerReferenceArray should be at offset 0x0");
		static_assert(offsetof(CS2::soundsystem_voicecontainers::CSoundContainerReferenceArray, m_sounds) == 0x8, "m_sounds in CSoundContainerReferenceArray should be at offset 0x8");
		static_assert(offsetof(CS2::soundsystem_voicecontainers::CSoundContainerReferenceArray, m_pSounds) == 0x20, "m_pSounds in CSoundContainerReferenceArray should be at offset 0x20");
		static_assert(sizeof(CS2::soundsystem_voicecontainers::CSoundContainerReferenceArray) == 0x38, "CSoundContainerReferenceArray size should be 0x38");
	}
}
