// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/soundsystem_voicecontainers/CVoiceContainerBase.hpp>





using namespace GlobalTypes;
namespace CS2 {
	namespace soundsystem_voicecontainers {
		class CVoiceContainerGranulator : public CS2::soundsystem_voicecontainers::CVoiceContainerBase {
		public:
			float32 m_flGrainLength; // 0xb8 | Schema_Builtin | Size: 0x4
			float32 m_flGrainCrossfadeAmount; // 0xbc | Schema_Builtin | Size: 0x4
			float32 m_flStartJitter; // 0xc0 | Schema_Builtin | Size: 0x4
			float32 m_flPlaybackJitter; // 0xc4 | Schema_Builtin | Size: 0x4
			bool m_bShouldWraparound; // 0xc8 | Schema_Builtin | Size: 0x1
			S2_PAD(0x7);
			// GlobalTypes::CStrongHandle< resourcesystem::InfoForResourceTypeCVoiceContainerBase > m_sourceAudio; // 0xd0 | Schema_Atomic | Size: 0x8
			char  m_sourceAudio[0x8]; // 0xd0 | Schema_Atomic | Size: 0x8
			S2_PAD(0xb8); // End padding
		};
		static_assert(offsetof(CS2::soundsystem_voicecontainers::CVoiceContainerGranulator, m_flGrainLength) == 0xB8, "m_flGrainLength in CVoiceContainerGranulator should be at offset 0xB8");
		static_assert(offsetof(CS2::soundsystem_voicecontainers::CVoiceContainerGranulator, m_flGrainCrossfadeAmount) == 0xBC, "m_flGrainCrossfadeAmount in CVoiceContainerGranulator should be at offset 0xBC");
		static_assert(offsetof(CS2::soundsystem_voicecontainers::CVoiceContainerGranulator, m_flStartJitter) == 0xC0, "m_flStartJitter in CVoiceContainerGranulator should be at offset 0xC0");
		static_assert(offsetof(CS2::soundsystem_voicecontainers::CVoiceContainerGranulator, m_flPlaybackJitter) == 0xC4, "m_flPlaybackJitter in CVoiceContainerGranulator should be at offset 0xC4");
		static_assert(offsetof(CS2::soundsystem_voicecontainers::CVoiceContainerGranulator, m_bShouldWraparound) == 0xC8, "m_bShouldWraparound in CVoiceContainerGranulator should be at offset 0xC8");
		static_assert(offsetof(CS2::soundsystem_voicecontainers::CVoiceContainerGranulator, m_sourceAudio) == 0xD0, "m_sourceAudio in CVoiceContainerGranulator should be at offset 0xD0");
		static_assert(sizeof(CS2::soundsystem_voicecontainers::CVoiceContainerGranulator) == 0x190, "CVoiceContainerGranulator size should be 0x190");
	}
}
