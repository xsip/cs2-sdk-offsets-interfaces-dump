// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/soundsystem_voicecontainers/CVoiceContainerAnalysisBase.hpp>
#include <SDK/soundsystem_voicecontainers/EMode_t.hpp>





using namespace GlobalTypes;
namespace CS2 {
	namespace soundsystem_voicecontainers {
		class CVoiceContainerEnvelopeAnalyzer : public CS2::soundsystem_voicecontainers::CVoiceContainerAnalysisBase {
		public:
			soundsystem_voicecontainers::EMode_t m_mode; // 0x50 | Schema_DeclaredEnum | Size: 0x4
			float32 m_fAnalysisWindowMs; // 0x54 | Schema_Builtin | Size: 0x4
			float32 m_flThreshold; // 0x58 | Schema_Builtin | Size: 0x4
			S2_PAD(0x4); // End padding
		};
		static_assert(offsetof(CS2::soundsystem_voicecontainers::CVoiceContainerEnvelopeAnalyzer, m_mode) == 0x50, "m_mode in CVoiceContainerEnvelopeAnalyzer should be at offset 0x50");
		static_assert(offsetof(CS2::soundsystem_voicecontainers::CVoiceContainerEnvelopeAnalyzer, m_fAnalysisWindowMs) == 0x54, "m_fAnalysisWindowMs in CVoiceContainerEnvelopeAnalyzer should be at offset 0x54");
		static_assert(offsetof(CS2::soundsystem_voicecontainers::CVoiceContainerEnvelopeAnalyzer, m_flThreshold) == 0x58, "m_flThreshold in CVoiceContainerEnvelopeAnalyzer should be at offset 0x58");
		static_assert(sizeof(CS2::soundsystem_voicecontainers::CVoiceContainerEnvelopeAnalyzer) == 0x60, "CVoiceContainerEnvelopeAnalyzer size should be 0x60");
	}
}
