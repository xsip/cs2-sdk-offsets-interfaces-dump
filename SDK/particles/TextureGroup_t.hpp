// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/particles/SpriteCardTextureType_t.hpp>
#include <SDK/particles/SpriteCardTextureChannel_t.hpp>
#include <SDK/particles/ParticleTextureLayerBlendType_t.hpp>
#include <SDK/particleslib/CParticleCollectionRendererFloatInput.hpp>
#include <SDK/particles/TextureControls_t.hpp>



namespace CS2 {
	namespace particles {
		class TextureGroup_t  {
		public:
			bool m_bEnabled; // 0x0 | Schema_Builtin | Size: 0x1
			bool m_bReplaceTextureWithGradient; // 0x1 | Schema_Builtin | Size: 0x1
			S2_PAD(0x6);
			// GlobalTypes::CStrongHandle< resourcesystem::InfoForResourceTypeCTextureBase > m_hTexture; // 0x8 | Schema_Atomic | Size: 0x8
			char  m_hTexture[0x8]; // 0x8 | Schema_Atomic | Size: 0x8
			GlobalTypes::CColorGradient m_Gradient; // 0x10 | Schema_Atomic | Size: 0x18
			particles::SpriteCardTextureType_t m_nTextureType; // 0x28 | Schema_DeclaredEnum | Size: 0x4
			particles::SpriteCardTextureChannel_t m_nTextureChannels; // 0x2c | Schema_DeclaredEnum | Size: 0x4
			particles::ParticleTextureLayerBlendType_t m_nTextureBlendMode; // 0x30 | Schema_DeclaredEnum | Size: 0x4
			S2_PAD(0x4);
			particleslib::CParticleCollectionRendererFloatInput m_flTextureBlend; // 0x38 | Schema_DeclaredClass | Size: 0x170
			particles::TextureControls_t m_TextureControls; // 0x1a8 | Schema_DeclaredClass | Size: 0xa30
		};
		static_assert(offsetof(CS2::particles::TextureGroup_t, m_bEnabled) == 0x0, "m_bEnabled in TextureGroup_t should be at offset 0x0");
		static_assert(offsetof(CS2::particles::TextureGroup_t, m_bReplaceTextureWithGradient) == 0x1, "m_bReplaceTextureWithGradient in TextureGroup_t should be at offset 0x1");
		static_assert(offsetof(CS2::particles::TextureGroup_t, m_hTexture) == 0x8, "m_hTexture in TextureGroup_t should be at offset 0x8");
		static_assert(offsetof(CS2::particles::TextureGroup_t, m_Gradient) == 0x10, "m_Gradient in TextureGroup_t should be at offset 0x10");
		static_assert(offsetof(CS2::particles::TextureGroup_t, m_nTextureType) == 0x28, "m_nTextureType in TextureGroup_t should be at offset 0x28");
		static_assert(offsetof(CS2::particles::TextureGroup_t, m_nTextureChannels) == 0x2C, "m_nTextureChannels in TextureGroup_t should be at offset 0x2C");
		static_assert(offsetof(CS2::particles::TextureGroup_t, m_nTextureBlendMode) == 0x30, "m_nTextureBlendMode in TextureGroup_t should be at offset 0x30");
		static_assert(offsetof(CS2::particles::TextureGroup_t, m_flTextureBlend) == 0x38, "m_flTextureBlend in TextureGroup_t should be at offset 0x38");
		static_assert(offsetof(CS2::particles::TextureGroup_t, m_TextureControls) == 0x1A8, "m_TextureControls in TextureGroup_t should be at offset 0x1A8");
		static_assert(sizeof(CS2::particles::TextureGroup_t) == 0xBD8, "TextureGroup_t size should be 0xBD8");
	}
}
