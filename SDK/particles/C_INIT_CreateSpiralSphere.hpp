// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <SDK/GlobalTypes.hpp>

#include <SDK/particles/CParticleFunctionInitializer.hpp>



namespace CS2 {
	namespace particles {
		class C_INIT_CreateSpiralSphere : public CS2::particles::CParticleFunctionInitializer {
		public:
			int32_t m_nControlPointNumber; // 0x1c8 | Schema_Builtin | Size: 0x4
			int32_t m_nOverrideCP; // 0x1cc | Schema_Builtin | Size: 0x4
			int32_t m_nDensity; // 0x1d0 | Schema_Builtin | Size: 0x4
			float32 m_flInitialRadius; // 0x1d4 | Schema_Builtin | Size: 0x4
			float32 m_flInitialSpeedMin; // 0x1d8 | Schema_Builtin | Size: 0x4
			float32 m_flInitialSpeedMax; // 0x1dc | Schema_Builtin | Size: 0x4
			bool m_bUseParticleCount; // 0x1e0 | Schema_Builtin | Size: 0x1
			S2_PAD(0x7); // End padding
		};
		static_assert(offsetof(CS2::particles::C_INIT_CreateSpiralSphere, m_nControlPointNumber) == 0x1C8, "m_nControlPointNumber in C_INIT_CreateSpiralSphere should be at offset 0x1C8");
		static_assert(offsetof(CS2::particles::C_INIT_CreateSpiralSphere, m_nOverrideCP) == 0x1CC, "m_nOverrideCP in C_INIT_CreateSpiralSphere should be at offset 0x1CC");
		static_assert(offsetof(CS2::particles::C_INIT_CreateSpiralSphere, m_nDensity) == 0x1D0, "m_nDensity in C_INIT_CreateSpiralSphere should be at offset 0x1D0");
		static_assert(offsetof(CS2::particles::C_INIT_CreateSpiralSphere, m_flInitialRadius) == 0x1D4, "m_flInitialRadius in C_INIT_CreateSpiralSphere should be at offset 0x1D4");
		static_assert(offsetof(CS2::particles::C_INIT_CreateSpiralSphere, m_flInitialSpeedMin) == 0x1D8, "m_flInitialSpeedMin in C_INIT_CreateSpiralSphere should be at offset 0x1D8");
		static_assert(offsetof(CS2::particles::C_INIT_CreateSpiralSphere, m_flInitialSpeedMax) == 0x1DC, "m_flInitialSpeedMax in C_INIT_CreateSpiralSphere should be at offset 0x1DC");
		static_assert(offsetof(CS2::particles::C_INIT_CreateSpiralSphere, m_bUseParticleCount) == 0x1E0, "m_bUseParticleCount in C_INIT_CreateSpiralSphere should be at offset 0x1E0");
		static_assert(sizeof(CS2::particles::C_INIT_CreateSpiralSphere) == 0x1E8, "C_INIT_CreateSpiralSphere size should be 0x1E8");
	}
}
