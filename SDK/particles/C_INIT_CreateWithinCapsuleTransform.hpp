// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/particles/CParticleFunctionInitializer.hpp>
#include <SDK/particleslib/CPerParticleFloatInput.hpp>
#include <SDK/particleslib/CParticleTransformInput.hpp>
#include <SDK/particleslib/CPerParticleVecInput.hpp>
#include <SDK/particles/ParticleAttributeIndex_t.hpp>



namespace CS2 {
	namespace particles {
		class C_INIT_CreateWithinCapsuleTransform : public CS2::particles::CParticleFunctionInitializer {
		public:
			particleslib::CPerParticleFloatInput m_fRadiusMin; // 0x1d8 | Schema_DeclaredClass | Size: 0x170
			particleslib::CPerParticleFloatInput m_fRadiusMax; // 0x348 | Schema_DeclaredClass | Size: 0x170
			particleslib::CPerParticleFloatInput m_fHeight; // 0x4b8 | Schema_DeclaredClass | Size: 0x170
			particleslib::CParticleTransformInput m_TransformInput; // 0x628 | Schema_DeclaredClass | Size: 0x68
			particleslib::CPerParticleFloatInput m_fSpeedMin; // 0x690 | Schema_DeclaredClass | Size: 0x170
			particleslib::CPerParticleFloatInput m_fSpeedMax; // 0x800 | Schema_DeclaredClass | Size: 0x170
			float32 m_fSpeedRandExp; // 0x970 | Schema_Builtin | Size: 0x4
			S2_PAD(0x4);
			particleslib::CPerParticleVecInput m_LocalCoordinateSystemSpeedMin; // 0x978 | Schema_DeclaredClass | Size: 0x6b8
			particleslib::CPerParticleVecInput m_LocalCoordinateSystemSpeedMax; // 0x1030 | Schema_DeclaredClass | Size: 0x6b8
			particles::ParticleAttributeIndex_t m_nFieldOutput; // 0x16e8 | Schema_DeclaredClass | Size: 0x4
			particles::ParticleAttributeIndex_t m_nFieldVelocity; // 0x16ec | Schema_DeclaredClass | Size: 0x4
		};
		static_assert(offsetof(CS2::particles::C_INIT_CreateWithinCapsuleTransform, m_fRadiusMin) == 0x1D8, "m_fRadiusMin in C_INIT_CreateWithinCapsuleTransform should be at offset 0x1D8");
		static_assert(offsetof(CS2::particles::C_INIT_CreateWithinCapsuleTransform, m_fRadiusMax) == 0x348, "m_fRadiusMax in C_INIT_CreateWithinCapsuleTransform should be at offset 0x348");
		static_assert(offsetof(CS2::particles::C_INIT_CreateWithinCapsuleTransform, m_fHeight) == 0x4B8, "m_fHeight in C_INIT_CreateWithinCapsuleTransform should be at offset 0x4B8");
		static_assert(offsetof(CS2::particles::C_INIT_CreateWithinCapsuleTransform, m_TransformInput) == 0x628, "m_TransformInput in C_INIT_CreateWithinCapsuleTransform should be at offset 0x628");
		static_assert(offsetof(CS2::particles::C_INIT_CreateWithinCapsuleTransform, m_fSpeedMin) == 0x690, "m_fSpeedMin in C_INIT_CreateWithinCapsuleTransform should be at offset 0x690");
		static_assert(offsetof(CS2::particles::C_INIT_CreateWithinCapsuleTransform, m_fSpeedMax) == 0x800, "m_fSpeedMax in C_INIT_CreateWithinCapsuleTransform should be at offset 0x800");
		static_assert(offsetof(CS2::particles::C_INIT_CreateWithinCapsuleTransform, m_fSpeedRandExp) == 0x970, "m_fSpeedRandExp in C_INIT_CreateWithinCapsuleTransform should be at offset 0x970");
		static_assert(offsetof(CS2::particles::C_INIT_CreateWithinCapsuleTransform, m_LocalCoordinateSystemSpeedMin) == 0x978, "m_LocalCoordinateSystemSpeedMin in C_INIT_CreateWithinCapsuleTransform should be at offset 0x978");
		static_assert(offsetof(CS2::particles::C_INIT_CreateWithinCapsuleTransform, m_LocalCoordinateSystemSpeedMax) == 0x1030, "m_LocalCoordinateSystemSpeedMax in C_INIT_CreateWithinCapsuleTransform should be at offset 0x1030");
		static_assert(offsetof(CS2::particles::C_INIT_CreateWithinCapsuleTransform, m_nFieldOutput) == 0x16E8, "m_nFieldOutput in C_INIT_CreateWithinCapsuleTransform should be at offset 0x16E8");
		static_assert(offsetof(CS2::particles::C_INIT_CreateWithinCapsuleTransform, m_nFieldVelocity) == 0x16EC, "m_nFieldVelocity in C_INIT_CreateWithinCapsuleTransform should be at offset 0x16EC");
		static_assert(sizeof(CS2::particles::C_INIT_CreateWithinCapsuleTransform) == 0x16F0, "C_INIT_CreateWithinCapsuleTransform size should be 0x16F0");
	}
}
