// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <SDK/GlobalTypes.hpp>

#include <SDK/particles/CParticleFunctionOperator.hpp>



namespace CS2 {
	namespace particles {
		class C_OP_VelocityMatchingForce : public CS2::particles::CParticleFunctionOperator {
		public:
			float32 m_flDirScale; // 0x1c0 | Schema_Builtin | Size: 0x4
			float32 m_flSpdScale; // 0x1c4 | Schema_Builtin | Size: 0x4
			float32 m_flNeighborDistance; // 0x1c8 | Schema_Builtin | Size: 0x4
			float32 m_flFacingStrength; // 0x1cc | Schema_Builtin | Size: 0x4
			bool m_bUseAABB; // 0x1d0 | Schema_Builtin | Size: 0x1
			S2_PAD(0x3);
			int32_t m_nCPBroadcast; // 0x1d4 | Schema_Builtin | Size: 0x4
		};
		static_assert(offsetof(CS2::particles::C_OP_VelocityMatchingForce, m_flDirScale) == 0x1C0, "m_flDirScale in C_OP_VelocityMatchingForce should be at offset 0x1C0");
		static_assert(offsetof(CS2::particles::C_OP_VelocityMatchingForce, m_flSpdScale) == 0x1C4, "m_flSpdScale in C_OP_VelocityMatchingForce should be at offset 0x1C4");
		static_assert(offsetof(CS2::particles::C_OP_VelocityMatchingForce, m_flNeighborDistance) == 0x1C8, "m_flNeighborDistance in C_OP_VelocityMatchingForce should be at offset 0x1C8");
		static_assert(offsetof(CS2::particles::C_OP_VelocityMatchingForce, m_flFacingStrength) == 0x1CC, "m_flFacingStrength in C_OP_VelocityMatchingForce should be at offset 0x1CC");
		static_assert(offsetof(CS2::particles::C_OP_VelocityMatchingForce, m_bUseAABB) == 0x1D0, "m_bUseAABB in C_OP_VelocityMatchingForce should be at offset 0x1D0");
		static_assert(offsetof(CS2::particles::C_OP_VelocityMatchingForce, m_nCPBroadcast) == 0x1D4, "m_nCPBroadcast in C_OP_VelocityMatchingForce should be at offset 0x1D4");
		static_assert(sizeof(CS2::particles::C_OP_VelocityMatchingForce) == 0x1D8, "C_OP_VelocityMatchingForce size should be 0x1D8");
	}
}
