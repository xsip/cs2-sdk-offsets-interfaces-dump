// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <SDK/GlobalTypes.hpp>

#include <SDK/particles/CParticleFunctionOperator.hpp>
#include <SDK/particles/ParticleAttributeIndex_t.hpp>



namespace CS2 {
	namespace particles {
		class C_OP_Noise : public CS2::particles::CParticleFunctionOperator {
		public:
			particles::ParticleAttributeIndex_t m_nFieldOutput; // 0x1c0 | Schema_DeclaredClass | Size: 0x4
			float32 m_flOutputMin; // 0x1c4 | Schema_Builtin | Size: 0x4
			float32 m_flOutputMax; // 0x1c8 | Schema_Builtin | Size: 0x4
			float32 m_fl4NoiseScale; // 0x1cc | Schema_Builtin | Size: 0x4
			bool m_bAdditive; // 0x1d0 | Schema_Builtin | Size: 0x1
			S2_PAD(0x3);
			float32 m_flNoiseAnimationTimeScale; // 0x1d4 | Schema_Builtin | Size: 0x4
		};
		static_assert(offsetof(CS2::particles::C_OP_Noise, m_nFieldOutput) == 0x1C0, "m_nFieldOutput in C_OP_Noise should be at offset 0x1C0");
		static_assert(offsetof(CS2::particles::C_OP_Noise, m_flOutputMin) == 0x1C4, "m_flOutputMin in C_OP_Noise should be at offset 0x1C4");
		static_assert(offsetof(CS2::particles::C_OP_Noise, m_flOutputMax) == 0x1C8, "m_flOutputMax in C_OP_Noise should be at offset 0x1C8");
		static_assert(offsetof(CS2::particles::C_OP_Noise, m_fl4NoiseScale) == 0x1CC, "m_fl4NoiseScale in C_OP_Noise should be at offset 0x1CC");
		static_assert(offsetof(CS2::particles::C_OP_Noise, m_bAdditive) == 0x1D0, "m_bAdditive in C_OP_Noise should be at offset 0x1D0");
		static_assert(offsetof(CS2::particles::C_OP_Noise, m_flNoiseAnimationTimeScale) == 0x1D4, "m_flNoiseAnimationTimeScale in C_OP_Noise should be at offset 0x1D4");
		static_assert(sizeof(CS2::particles::C_OP_Noise) == 0x1D8, "C_OP_Noise size should be 0x1D8");
	}
}
