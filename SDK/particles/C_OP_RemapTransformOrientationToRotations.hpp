// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/particles/CParticleFunctionOperator.hpp>
#include <SDK/particleslib/CParticleTransformInput.hpp>



namespace CS2 {
	namespace particles {
		class C_OP_RemapTransformOrientationToRotations : public CS2::particles::CParticleFunctionOperator {
		public:
			particleslib::CParticleTransformInput m_TransformInput; // 0x1d0 | Schema_DeclaredClass | Size: 0x68
			GlobalTypes::Vector m_vecRotation; // 0x238 | Schema_Atomic | Size: 0xc
			bool m_bUseQuat; // 0x244 | Schema_Builtin | Size: 0x1
			bool m_bWriteNormal; // 0x245 | Schema_Builtin | Size: 0x1
			S2_PAD(0x2); // End padding
		};
		static_assert(offsetof(CS2::particles::C_OP_RemapTransformOrientationToRotations, m_TransformInput) == 0x1D0, "m_TransformInput in C_OP_RemapTransformOrientationToRotations should be at offset 0x1D0");
		static_assert(offsetof(CS2::particles::C_OP_RemapTransformOrientationToRotations, m_vecRotation) == 0x238, "m_vecRotation in C_OP_RemapTransformOrientationToRotations should be at offset 0x238");
		static_assert(offsetof(CS2::particles::C_OP_RemapTransformOrientationToRotations, m_bUseQuat) == 0x244, "m_bUseQuat in C_OP_RemapTransformOrientationToRotations should be at offset 0x244");
		static_assert(offsetof(CS2::particles::C_OP_RemapTransformOrientationToRotations, m_bWriteNormal) == 0x245, "m_bWriteNormal in C_OP_RemapTransformOrientationToRotations should be at offset 0x245");
		static_assert(sizeof(CS2::particles::C_OP_RemapTransformOrientationToRotations) == 0x248, "C_OP_RemapTransformOrientationToRotations size should be 0x248");
	}
}
