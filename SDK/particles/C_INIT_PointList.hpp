// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <SDK/GlobalTypes.hpp>

#include <SDK/particles/CParticleFunctionInitializer.hpp>
#include <SDK/particles/ParticleAttributeIndex_t.hpp>



namespace CS2 {
	namespace particles {
		class C_INIT_PointList : public CS2::particles::CParticleFunctionInitializer {
		public:
			particles::ParticleAttributeIndex_t m_nFieldOutput; // 0x1c8 | Schema_DeclaredClass | Size: 0x4
			S2_PAD(0x4);
			// GlobalTypes::CUtlVector< particles::PointDefinition_t > m_pointList; // 0x1d0 | Schema_Atomic | Size: 0x18
			char  m_pointList[0x18]; // 0x1d0 | Schema_Atomic | Size: 0x18
			bool m_bPlaceAlongPath; // 0x1e8 | Schema_Builtin | Size: 0x1
			bool m_bClosedLoop; // 0x1e9 | Schema_Builtin | Size: 0x1
			S2_PAD(0x2);
			int32_t m_nNumPointsAlongPath; // 0x1ec | Schema_Builtin | Size: 0x4
		};
		static_assert(offsetof(CS2::particles::C_INIT_PointList, m_nFieldOutput) == 0x1C8, "m_nFieldOutput in C_INIT_PointList should be at offset 0x1C8");
		static_assert(offsetof(CS2::particles::C_INIT_PointList, m_pointList) == 0x1D0, "m_pointList in C_INIT_PointList should be at offset 0x1D0");
		static_assert(offsetof(CS2::particles::C_INIT_PointList, m_bPlaceAlongPath) == 0x1E8, "m_bPlaceAlongPath in C_INIT_PointList should be at offset 0x1E8");
		static_assert(offsetof(CS2::particles::C_INIT_PointList, m_bClosedLoop) == 0x1E9, "m_bClosedLoop in C_INIT_PointList should be at offset 0x1E9");
		static_assert(offsetof(CS2::particles::C_INIT_PointList, m_nNumPointsAlongPath) == 0x1EC, "m_nNumPointsAlongPath in C_INIT_PointList should be at offset 0x1EC");
		static_assert(sizeof(CS2::particles::C_INIT_PointList) == 0x1F0, "C_INIT_PointList size should be 0x1F0");
	}
}
