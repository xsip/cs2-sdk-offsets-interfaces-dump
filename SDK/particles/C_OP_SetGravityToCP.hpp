// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/particles/CParticleFunctionPreEmission.hpp>
#include <SDK/particleslib/CParticleCollectionFloatInput.hpp>



namespace CS2 {
	namespace particles {
		class C_OP_SetGravityToCP : public CS2::particles::CParticleFunctionPreEmission {
		public:
			int32_t m_nCPInput; // 0x1d8 | Schema_Builtin | Size: 0x4
			int32_t m_nCPOutput; // 0x1dc | Schema_Builtin | Size: 0x4
			particleslib::CParticleCollectionFloatInput m_flScale; // 0x1e0 | Schema_DeclaredClass | Size: 0x170
			bool m_bSetOrientation; // 0x350 | Schema_Builtin | Size: 0x1
			bool m_bSetZDown; // 0x351 | Schema_Builtin | Size: 0x1
			S2_PAD(0x6); // End padding
		};
		static_assert(offsetof(CS2::particles::C_OP_SetGravityToCP, m_nCPInput) == 0x1D8, "m_nCPInput in C_OP_SetGravityToCP should be at offset 0x1D8");
		static_assert(offsetof(CS2::particles::C_OP_SetGravityToCP, m_nCPOutput) == 0x1DC, "m_nCPOutput in C_OP_SetGravityToCP should be at offset 0x1DC");
		static_assert(offsetof(CS2::particles::C_OP_SetGravityToCP, m_flScale) == 0x1E0, "m_flScale in C_OP_SetGravityToCP should be at offset 0x1E0");
		static_assert(offsetof(CS2::particles::C_OP_SetGravityToCP, m_bSetOrientation) == 0x350, "m_bSetOrientation in C_OP_SetGravityToCP should be at offset 0x350");
		static_assert(offsetof(CS2::particles::C_OP_SetGravityToCP, m_bSetZDown) == 0x351, "m_bSetZDown in C_OP_SetGravityToCP should be at offset 0x351");
		static_assert(sizeof(CS2::particles::C_OP_SetGravityToCP) == 0x358, "C_OP_SetGravityToCP size should be 0x358");
	}
}
