// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/particles/CParticleFunctionPreEmission.hpp>
#include <SDK/particleslib/CParticleCollectionVecInput.hpp>





using namespace GlobalTypes;
namespace CS2 {
	namespace particles {
		class C_OP_SetControlPointToCPVelocity : public CS2::particles::CParticleFunctionPreEmission {
		public:
			int32_t m_nCPInput; // 0x1d8 | Schema_Builtin | Size: 0x4
			int32_t m_nCPOutputVel; // 0x1dc | Schema_Builtin | Size: 0x4
			bool m_bNormalize; // 0x1e0 | Schema_Builtin | Size: 0x1
			S2_PAD(0x3);
			int32_t m_nCPOutputMag; // 0x1e4 | Schema_Builtin | Size: 0x4
			int32_t m_nCPField; // 0x1e8 | Schema_Builtin | Size: 0x4
			S2_PAD(0x4);
			particleslib::CParticleCollectionVecInput m_vecComparisonVelocity; // 0x1f0 | Schema_DeclaredClass | Size: 0x6b8
		};
		static_assert(offsetof(CS2::particles::C_OP_SetControlPointToCPVelocity, m_nCPInput) == 0x1D8, "m_nCPInput in C_OP_SetControlPointToCPVelocity should be at offset 0x1D8");
		static_assert(offsetof(CS2::particles::C_OP_SetControlPointToCPVelocity, m_nCPOutputVel) == 0x1DC, "m_nCPOutputVel in C_OP_SetControlPointToCPVelocity should be at offset 0x1DC");
		static_assert(offsetof(CS2::particles::C_OP_SetControlPointToCPVelocity, m_bNormalize) == 0x1E0, "m_bNormalize in C_OP_SetControlPointToCPVelocity should be at offset 0x1E0");
		static_assert(offsetof(CS2::particles::C_OP_SetControlPointToCPVelocity, m_nCPOutputMag) == 0x1E4, "m_nCPOutputMag in C_OP_SetControlPointToCPVelocity should be at offset 0x1E4");
		static_assert(offsetof(CS2::particles::C_OP_SetControlPointToCPVelocity, m_nCPField) == 0x1E8, "m_nCPField in C_OP_SetControlPointToCPVelocity should be at offset 0x1E8");
		static_assert(offsetof(CS2::particles::C_OP_SetControlPointToCPVelocity, m_vecComparisonVelocity) == 0x1F0, "m_vecComparisonVelocity in C_OP_SetControlPointToCPVelocity should be at offset 0x1F0");
		static_assert(sizeof(CS2::particles::C_OP_SetControlPointToCPVelocity) == 0x8A8, "C_OP_SetControlPointToCPVelocity size should be 0x8A8");
	}
}
