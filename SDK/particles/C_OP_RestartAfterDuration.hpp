// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <SDK/GlobalTypes.hpp>

#include <SDK/particles/CParticleFunctionOperator.hpp>



namespace CS2 {
	namespace particles {
		class C_OP_RestartAfterDuration : public CS2::particles::CParticleFunctionOperator {
		public:
			float32 m_flDurationMin; // 0x1c0 | Schema_Builtin | Size: 0x4
			float32 m_flDurationMax; // 0x1c4 | Schema_Builtin | Size: 0x4
			int32_t m_nCP; // 0x1c8 | Schema_Builtin | Size: 0x4
			int32_t m_nCPField; // 0x1cc | Schema_Builtin | Size: 0x4
			int32_t m_nChildGroupID; // 0x1d0 | Schema_Builtin | Size: 0x4
			bool m_bOnlyChildren; // 0x1d4 | Schema_Builtin | Size: 0x1
			S2_PAD(0x3); // End padding
		};
		static_assert(offsetof(CS2::particles::C_OP_RestartAfterDuration, m_flDurationMin) == 0x1C0, "m_flDurationMin in C_OP_RestartAfterDuration should be at offset 0x1C0");
		static_assert(offsetof(CS2::particles::C_OP_RestartAfterDuration, m_flDurationMax) == 0x1C4, "m_flDurationMax in C_OP_RestartAfterDuration should be at offset 0x1C4");
		static_assert(offsetof(CS2::particles::C_OP_RestartAfterDuration, m_nCP) == 0x1C8, "m_nCP in C_OP_RestartAfterDuration should be at offset 0x1C8");
		static_assert(offsetof(CS2::particles::C_OP_RestartAfterDuration, m_nCPField) == 0x1CC, "m_nCPField in C_OP_RestartAfterDuration should be at offset 0x1CC");
		static_assert(offsetof(CS2::particles::C_OP_RestartAfterDuration, m_nChildGroupID) == 0x1D0, "m_nChildGroupID in C_OP_RestartAfterDuration should be at offset 0x1D0");
		static_assert(offsetof(CS2::particles::C_OP_RestartAfterDuration, m_bOnlyChildren) == 0x1D4, "m_bOnlyChildren in C_OP_RestartAfterDuration should be at offset 0x1D4");
		static_assert(sizeof(CS2::particles::C_OP_RestartAfterDuration) == 0x1D8, "C_OP_RestartAfterDuration size should be 0x1D8");
	}
}
