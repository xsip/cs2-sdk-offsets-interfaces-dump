// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/animationsystem/ParticleAttachment_t.hpp>



namespace CS2 {
	namespace particles {
		class ParticleControlPointDriver_t  {
		public:
			int32_t m_iControlPoint; // 0x0 | Schema_Builtin | Size: 0x4
			animationsystem::ParticleAttachment_t m_iAttachType; // 0x4 | Schema_DeclaredEnum | Size: 0x4
			GlobalTypes::CUtlString m_attachmentName; // 0x8 | Schema_Atomic | Size: 0x8
			GlobalTypes::Vector m_vecOffset; // 0x10 | Schema_Atomic | Size: 0xc
			GlobalTypes::QAngle m_angOffset; // 0x1c | Schema_Atomic | Size: 0xc
			GlobalTypes::CUtlString m_entityName; // 0x28 | Schema_Atomic | Size: 0x8
		};
		static_assert(offsetof(CS2::particles::ParticleControlPointDriver_t, m_iControlPoint) == 0x0, "m_iControlPoint in ParticleControlPointDriver_t should be at offset 0x0");
		static_assert(offsetof(CS2::particles::ParticleControlPointDriver_t, m_iAttachType) == 0x4, "m_iAttachType in ParticleControlPointDriver_t should be at offset 0x4");
		static_assert(offsetof(CS2::particles::ParticleControlPointDriver_t, m_attachmentName) == 0x8, "m_attachmentName in ParticleControlPointDriver_t should be at offset 0x8");
		static_assert(offsetof(CS2::particles::ParticleControlPointDriver_t, m_vecOffset) == 0x10, "m_vecOffset in ParticleControlPointDriver_t should be at offset 0x10");
		static_assert(offsetof(CS2::particles::ParticleControlPointDriver_t, m_angOffset) == 0x1C, "m_angOffset in ParticleControlPointDriver_t should be at offset 0x1C");
		static_assert(offsetof(CS2::particles::ParticleControlPointDriver_t, m_entityName) == 0x28, "m_entityName in ParticleControlPointDriver_t should be at offset 0x28");
		static_assert(sizeof(CS2::particles::ParticleControlPointDriver_t) == 0x30, "ParticleControlPointDriver_t size should be 0x30");
	}
}
