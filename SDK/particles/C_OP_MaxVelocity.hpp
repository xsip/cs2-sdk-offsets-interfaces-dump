// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/particles/CParticleFunctionOperator.hpp>



namespace CS2 {
	namespace particles {
		class C_OP_MaxVelocity : public CS2::particles::CParticleFunctionOperator {
		public:
			float32 m_flMaxVelocity; // 0x1d0 | Schema_Builtin | Size: 0x4
			float32 m_flMinVelocity; // 0x1d4 | Schema_Builtin | Size: 0x4
			int32_t m_nOverrideCP; // 0x1d8 | Schema_Builtin | Size: 0x4
			int32_t m_nOverrideCPField; // 0x1dc | Schema_Builtin | Size: 0x4
		};
		static_assert(offsetof(CS2::particles::C_OP_MaxVelocity, m_flMaxVelocity) == 0x1D0, "m_flMaxVelocity in C_OP_MaxVelocity should be at offset 0x1D0");
		static_assert(offsetof(CS2::particles::C_OP_MaxVelocity, m_flMinVelocity) == 0x1D4, "m_flMinVelocity in C_OP_MaxVelocity should be at offset 0x1D4");
		static_assert(offsetof(CS2::particles::C_OP_MaxVelocity, m_nOverrideCP) == 0x1D8, "m_nOverrideCP in C_OP_MaxVelocity should be at offset 0x1D8");
		static_assert(offsetof(CS2::particles::C_OP_MaxVelocity, m_nOverrideCPField) == 0x1DC, "m_nOverrideCPField in C_OP_MaxVelocity should be at offset 0x1DC");
		static_assert(sizeof(CS2::particles::C_OP_MaxVelocity) == 0x1E0, "C_OP_MaxVelocity size should be 0x1E0");
	}
}
