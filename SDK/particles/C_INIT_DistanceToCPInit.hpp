// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <SDK/GlobalTypes.hpp>

#include <SDK/particles/CParticleFunctionInitializer.hpp>
#include <SDK/particles/ParticleAttributeIndex_t.hpp>
#include <SDK/particleslib/CPerParticleFloatInput.hpp>
#include <SDK/particles/ParticleTraceSet_t.hpp>
#include <SDK/particles/ParticleSetMethod_t.hpp>



namespace CS2 {
	namespace particles {
		class C_INIT_DistanceToCPInit : public CS2::particles::CParticleFunctionInitializer {
		public:
			particles::ParticleAttributeIndex_t m_nFieldOutput; // 0x1c8 | Schema_DeclaredClass | Size: 0x4
			S2_PAD(0x4);
			particleslib::CPerParticleFloatInput m_flInputMin; // 0x1d0 | Schema_DeclaredClass | Size: 0x160
			particleslib::CPerParticleFloatInput m_flInputMax; // 0x330 | Schema_DeclaredClass | Size: 0x160
			particleslib::CPerParticleFloatInput m_flOutputMin; // 0x490 | Schema_DeclaredClass | Size: 0x160
			particleslib::CPerParticleFloatInput m_flOutputMax; // 0x5f0 | Schema_DeclaredClass | Size: 0x160
			int32_t m_nStartCP; // 0x750 | Schema_Builtin | Size: 0x4
			bool m_bLOS; // 0x754 | Schema_Builtin | Size: 0x1
			char m_CollisionGroupName[128]; // 0x755 | Schema_FixedArray | Size: 0x80
			S2_PAD(0x3);
			particles::ParticleTraceSet_t m_nTraceSet; // 0x7d8 | Schema_DeclaredEnum | Size: 0x4
			S2_PAD(0x4);
			particleslib::CPerParticleFloatInput m_flMaxTraceLength; // 0x7e0 | Schema_DeclaredClass | Size: 0x160
			float32 m_flLOSScale; // 0x940 | Schema_Builtin | Size: 0x4
			particles::ParticleSetMethod_t m_nSetMethod; // 0x944 | Schema_DeclaredEnum | Size: 0x4
			bool m_bActiveRange; // 0x948 | Schema_Builtin | Size: 0x1
			S2_PAD(0x3);
			GlobalTypes::Vector m_vecDistanceScale; // 0x94c | Schema_Atomic | Size: 0xc
			float32 m_flRemapBias; // 0x958 | Schema_Builtin | Size: 0x4
			S2_PAD(0x4); // End padding
		};
		static_assert(offsetof(CS2::particles::C_INIT_DistanceToCPInit, m_nFieldOutput) == 0x1C8, "m_nFieldOutput in C_INIT_DistanceToCPInit should be at offset 0x1C8");
		static_assert(offsetof(CS2::particles::C_INIT_DistanceToCPInit, m_flInputMin) == 0x1D0, "m_flInputMin in C_INIT_DistanceToCPInit should be at offset 0x1D0");
		static_assert(offsetof(CS2::particles::C_INIT_DistanceToCPInit, m_flInputMax) == 0x330, "m_flInputMax in C_INIT_DistanceToCPInit should be at offset 0x330");
		static_assert(offsetof(CS2::particles::C_INIT_DistanceToCPInit, m_flOutputMin) == 0x490, "m_flOutputMin in C_INIT_DistanceToCPInit should be at offset 0x490");
		static_assert(offsetof(CS2::particles::C_INIT_DistanceToCPInit, m_flOutputMax) == 0x5F0, "m_flOutputMax in C_INIT_DistanceToCPInit should be at offset 0x5F0");
		static_assert(offsetof(CS2::particles::C_INIT_DistanceToCPInit, m_nStartCP) == 0x750, "m_nStartCP in C_INIT_DistanceToCPInit should be at offset 0x750");
		static_assert(offsetof(CS2::particles::C_INIT_DistanceToCPInit, m_bLOS) == 0x754, "m_bLOS in C_INIT_DistanceToCPInit should be at offset 0x754");
		static_assert(offsetof(CS2::particles::C_INIT_DistanceToCPInit, m_CollisionGroupName) == 0x755, "m_CollisionGroupName in C_INIT_DistanceToCPInit should be at offset 0x755");
		static_assert(offsetof(CS2::particles::C_INIT_DistanceToCPInit, m_nTraceSet) == 0x7D8, "m_nTraceSet in C_INIT_DistanceToCPInit should be at offset 0x7D8");
		static_assert(offsetof(CS2::particles::C_INIT_DistanceToCPInit, m_flMaxTraceLength) == 0x7E0, "m_flMaxTraceLength in C_INIT_DistanceToCPInit should be at offset 0x7E0");
		static_assert(offsetof(CS2::particles::C_INIT_DistanceToCPInit, m_flLOSScale) == 0x940, "m_flLOSScale in C_INIT_DistanceToCPInit should be at offset 0x940");
		static_assert(offsetof(CS2::particles::C_INIT_DistanceToCPInit, m_nSetMethod) == 0x944, "m_nSetMethod in C_INIT_DistanceToCPInit should be at offset 0x944");
		static_assert(offsetof(CS2::particles::C_INIT_DistanceToCPInit, m_bActiveRange) == 0x948, "m_bActiveRange in C_INIT_DistanceToCPInit should be at offset 0x948");
		static_assert(offsetof(CS2::particles::C_INIT_DistanceToCPInit, m_vecDistanceScale) == 0x94C, "m_vecDistanceScale in C_INIT_DistanceToCPInit should be at offset 0x94C");
		static_assert(offsetof(CS2::particles::C_INIT_DistanceToCPInit, m_flRemapBias) == 0x958, "m_flRemapBias in C_INIT_DistanceToCPInit should be at offset 0x958");
		static_assert(sizeof(CS2::particles::C_INIT_DistanceToCPInit) == 0x960, "C_INIT_DistanceToCPInit size should be 0x960");
	}
}
