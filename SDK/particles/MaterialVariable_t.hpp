// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/particles/ParticleAttributeIndex_t.hpp>





using namespace GlobalTypes;
namespace CS2 {
	namespace particles {
		class MaterialVariable_t  {
		public:
			GlobalTypes::CUtlString m_strVariable; // 0x0 | Schema_Atomic | Size: 0x8
			particles::ParticleAttributeIndex_t m_nVariableField; // 0x8 | Schema_DeclaredClass | Size: 0x4
			float32 m_flScale; // 0xc | Schema_Builtin | Size: 0x4
		};
		static_assert(offsetof(CS2::particles::MaterialVariable_t, m_strVariable) == 0x0, "m_strVariable in MaterialVariable_t should be at offset 0x0");
		static_assert(offsetof(CS2::particles::MaterialVariable_t, m_nVariableField) == 0x8, "m_nVariableField in MaterialVariable_t should be at offset 0x8");
		static_assert(offsetof(CS2::particles::MaterialVariable_t, m_flScale) == 0xC, "m_flScale in MaterialVariable_t should be at offset 0xC");
		static_assert(sizeof(CS2::particles::MaterialVariable_t) == 0x10, "MaterialVariable_t size should be 0x10");
	}
}
