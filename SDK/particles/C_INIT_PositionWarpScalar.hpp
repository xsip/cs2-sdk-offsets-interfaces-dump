// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/particles/CParticleFunctionInitializer.hpp>
#include <SDK/particleslib/CPerParticleFloatInput.hpp>





using namespace GlobalTypes;
namespace CS2 {
	namespace particles {
		class C_INIT_PositionWarpScalar : public CS2::particles::CParticleFunctionInitializer {
		public:
			GlobalTypes::Vector m_vecWarpMin; // 0x1d8 | Schema_Atomic | Size: 0xc
			GlobalTypes::Vector m_vecWarpMax; // 0x1e4 | Schema_Atomic | Size: 0xc
			particleslib::CPerParticleFloatInput m_InputValue; // 0x1f0 | Schema_DeclaredClass | Size: 0x170
			float32 m_flPrevPosScale; // 0x360 | Schema_Builtin | Size: 0x4
			int32_t m_nScaleControlPointNumber; // 0x364 | Schema_Builtin | Size: 0x4
			int32_t m_nControlPointNumber; // 0x368 | Schema_Builtin | Size: 0x4
			S2_PAD(0x4); // End padding
		};
		static_assert(offsetof(CS2::particles::C_INIT_PositionWarpScalar, m_vecWarpMin) == 0x1D8, "m_vecWarpMin in C_INIT_PositionWarpScalar should be at offset 0x1D8");
		static_assert(offsetof(CS2::particles::C_INIT_PositionWarpScalar, m_vecWarpMax) == 0x1E4, "m_vecWarpMax in C_INIT_PositionWarpScalar should be at offset 0x1E4");
		static_assert(offsetof(CS2::particles::C_INIT_PositionWarpScalar, m_InputValue) == 0x1F0, "m_InputValue in C_INIT_PositionWarpScalar should be at offset 0x1F0");
		static_assert(offsetof(CS2::particles::C_INIT_PositionWarpScalar, m_flPrevPosScale) == 0x360, "m_flPrevPosScale in C_INIT_PositionWarpScalar should be at offset 0x360");
		static_assert(offsetof(CS2::particles::C_INIT_PositionWarpScalar, m_nScaleControlPointNumber) == 0x364, "m_nScaleControlPointNumber in C_INIT_PositionWarpScalar should be at offset 0x364");
		static_assert(offsetof(CS2::particles::C_INIT_PositionWarpScalar, m_nControlPointNumber) == 0x368, "m_nControlPointNumber in C_INIT_PositionWarpScalar should be at offset 0x368");
		static_assert(sizeof(CS2::particles::C_INIT_PositionWarpScalar) == 0x370, "C_INIT_PositionWarpScalar size should be 0x370");
	}
}
