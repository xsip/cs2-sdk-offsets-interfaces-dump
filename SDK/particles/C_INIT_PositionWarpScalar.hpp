// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <SDK/GlobalTypes.hpp>

#include <SDK/particles/CParticleFunctionInitializer.hpp>
#include <SDK/particleslib/CPerParticleFloatInput.hpp>



namespace CS2 {
	namespace particles {
		class C_INIT_PositionWarpScalar : public CS2::particles::CParticleFunctionInitializer {
		public:
			GlobalTypes::Vector m_vecWarpMin; // 0x1c8 | Schema_Atomic | Size: 0xc
			GlobalTypes::Vector m_vecWarpMax; // 0x1d4 | Schema_Atomic | Size: 0xc
			particleslib::CPerParticleFloatInput m_InputValue; // 0x1e0 | Schema_DeclaredClass | Size: 0x160
			float32 m_flPrevPosScale; // 0x340 | Schema_Builtin | Size: 0x4
			int32_t m_nScaleControlPointNumber; // 0x344 | Schema_Builtin | Size: 0x4
			int32_t m_nControlPointNumber; // 0x348 | Schema_Builtin | Size: 0x4
			S2_PAD(0x4); // End padding
		};
		static_assert(offsetof(CS2::particles::C_INIT_PositionWarpScalar, m_vecWarpMin) == 0x1C8, "m_vecWarpMin in C_INIT_PositionWarpScalar should be at offset 0x1C8");
		static_assert(offsetof(CS2::particles::C_INIT_PositionWarpScalar, m_vecWarpMax) == 0x1D4, "m_vecWarpMax in C_INIT_PositionWarpScalar should be at offset 0x1D4");
		static_assert(offsetof(CS2::particles::C_INIT_PositionWarpScalar, m_InputValue) == 0x1E0, "m_InputValue in C_INIT_PositionWarpScalar should be at offset 0x1E0");
		static_assert(offsetof(CS2::particles::C_INIT_PositionWarpScalar, m_flPrevPosScale) == 0x340, "m_flPrevPosScale in C_INIT_PositionWarpScalar should be at offset 0x340");
		static_assert(offsetof(CS2::particles::C_INIT_PositionWarpScalar, m_nScaleControlPointNumber) == 0x344, "m_nScaleControlPointNumber in C_INIT_PositionWarpScalar should be at offset 0x344");
		static_assert(offsetof(CS2::particles::C_INIT_PositionWarpScalar, m_nControlPointNumber) == 0x348, "m_nControlPointNumber in C_INIT_PositionWarpScalar should be at offset 0x348");
		static_assert(sizeof(CS2::particles::C_INIT_PositionWarpScalar) == 0x350, "C_INIT_PositionWarpScalar size should be 0x350");
	}
}
