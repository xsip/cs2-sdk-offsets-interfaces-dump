// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/particles/CParticleFunctionOperator.hpp>
#include <SDK/particleslib/CParticleCollectionFloatInput.hpp>
#include <SDK/particleslib/CParticleCollectionVecInput.hpp>
#include <SDK/particles/ParticleAttributeIndex_t.hpp>



namespace CS2 {
	namespace particles {
		class C_OP_MovementLoopInsideSphere : public CS2::particles::CParticleFunctionOperator {
		public:
			int32_t m_nCP; // 0x1d0 | Schema_Builtin | Size: 0x4
			S2_PAD(0x4);
			particleslib::CParticleCollectionFloatInput m_flDistance; // 0x1d8 | Schema_DeclaredClass | Size: 0x170
			particleslib::CParticleCollectionVecInput m_vecScale; // 0x348 | Schema_DeclaredClass | Size: 0x6b8
			particles::ParticleAttributeIndex_t m_nDistSqrAttr; // 0xa00 | Schema_DeclaredClass | Size: 0x4
			S2_PAD(0x4); // End padding
		};
		static_assert(offsetof(CS2::particles::C_OP_MovementLoopInsideSphere, m_nCP) == 0x1D0, "m_nCP in C_OP_MovementLoopInsideSphere should be at offset 0x1D0");
		static_assert(offsetof(CS2::particles::C_OP_MovementLoopInsideSphere, m_flDistance) == 0x1D8, "m_flDistance in C_OP_MovementLoopInsideSphere should be at offset 0x1D8");
		static_assert(offsetof(CS2::particles::C_OP_MovementLoopInsideSphere, m_vecScale) == 0x348, "m_vecScale in C_OP_MovementLoopInsideSphere should be at offset 0x348");
		static_assert(offsetof(CS2::particles::C_OP_MovementLoopInsideSphere, m_nDistSqrAttr) == 0xA00, "m_nDistSqrAttr in C_OP_MovementLoopInsideSphere should be at offset 0xA00");
		static_assert(sizeof(CS2::particles::C_OP_MovementLoopInsideSphere) == 0xA08, "C_OP_MovementLoopInsideSphere size should be 0xA08");
	}
}
