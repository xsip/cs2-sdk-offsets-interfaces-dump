// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/particles/CParticleFunctionInitializer.hpp>
#include <SDK/particles/Detail2Combo_t.hpp>





using namespace GlobalTypes;
namespace CS2 {
	namespace particles {
		class C_INIT_StatusEffect : public CS2::particles::CParticleFunctionInitializer {
		public:
			particles::Detail2Combo_t m_nDetail2Combo; // 0x1d8 | Schema_DeclaredEnum | Size: 0x4
			float32 m_flDetail2Rotation; // 0x1dc | Schema_Builtin | Size: 0x4
			float32 m_flDetail2Scale; // 0x1e0 | Schema_Builtin | Size: 0x4
			float32 m_flDetail2BlendFactor; // 0x1e4 | Schema_Builtin | Size: 0x4
			float32 m_flColorWarpIntensity; // 0x1e8 | Schema_Builtin | Size: 0x4
			float32 m_flDiffuseWarpBlendToFull; // 0x1ec | Schema_Builtin | Size: 0x4
			float32 m_flEnvMapIntensity; // 0x1f0 | Schema_Builtin | Size: 0x4
			float32 m_flAmbientScale; // 0x1f4 | Schema_Builtin | Size: 0x4
			GlobalTypes::Color m_specularColor; // 0x1f8 | Schema_Atomic | Size: 0x4
			float32 m_flSpecularScale; // 0x1fc | Schema_Builtin | Size: 0x4
			float32 m_flSpecularExponent; // 0x200 | Schema_Builtin | Size: 0x4
			float32 m_flSpecularExponentBlendToFull; // 0x204 | Schema_Builtin | Size: 0x4
			float32 m_flSpecularBlendToFull; // 0x208 | Schema_Builtin | Size: 0x4
			GlobalTypes::Color m_rimLightColor; // 0x20c | Schema_Atomic | Size: 0x4
			float32 m_flRimLightScale; // 0x210 | Schema_Builtin | Size: 0x4
			float32 m_flReflectionsTintByBaseBlendToNone; // 0x214 | Schema_Builtin | Size: 0x4
			float32 m_flMetalnessBlendToFull; // 0x218 | Schema_Builtin | Size: 0x4
			float32 m_flSelfIllumBlendToFull; // 0x21c | Schema_Builtin | Size: 0x4
			S2_PAD(0x18); // End padding
		};
		static_assert(offsetof(CS2::particles::C_INIT_StatusEffect, m_nDetail2Combo) == 0x1D8, "m_nDetail2Combo in C_INIT_StatusEffect should be at offset 0x1D8");
		static_assert(offsetof(CS2::particles::C_INIT_StatusEffect, m_flDetail2Rotation) == 0x1DC, "m_flDetail2Rotation in C_INIT_StatusEffect should be at offset 0x1DC");
		static_assert(offsetof(CS2::particles::C_INIT_StatusEffect, m_flDetail2Scale) == 0x1E0, "m_flDetail2Scale in C_INIT_StatusEffect should be at offset 0x1E0");
		static_assert(offsetof(CS2::particles::C_INIT_StatusEffect, m_flDetail2BlendFactor) == 0x1E4, "m_flDetail2BlendFactor in C_INIT_StatusEffect should be at offset 0x1E4");
		static_assert(offsetof(CS2::particles::C_INIT_StatusEffect, m_flColorWarpIntensity) == 0x1E8, "m_flColorWarpIntensity in C_INIT_StatusEffect should be at offset 0x1E8");
		static_assert(offsetof(CS2::particles::C_INIT_StatusEffect, m_flDiffuseWarpBlendToFull) == 0x1EC, "m_flDiffuseWarpBlendToFull in C_INIT_StatusEffect should be at offset 0x1EC");
		static_assert(offsetof(CS2::particles::C_INIT_StatusEffect, m_flEnvMapIntensity) == 0x1F0, "m_flEnvMapIntensity in C_INIT_StatusEffect should be at offset 0x1F0");
		static_assert(offsetof(CS2::particles::C_INIT_StatusEffect, m_flAmbientScale) == 0x1F4, "m_flAmbientScale in C_INIT_StatusEffect should be at offset 0x1F4");
		static_assert(offsetof(CS2::particles::C_INIT_StatusEffect, m_specularColor) == 0x1F8, "m_specularColor in C_INIT_StatusEffect should be at offset 0x1F8");
		static_assert(offsetof(CS2::particles::C_INIT_StatusEffect, m_flSpecularScale) == 0x1FC, "m_flSpecularScale in C_INIT_StatusEffect should be at offset 0x1FC");
		static_assert(offsetof(CS2::particles::C_INIT_StatusEffect, m_flSpecularExponent) == 0x200, "m_flSpecularExponent in C_INIT_StatusEffect should be at offset 0x200");
		static_assert(offsetof(CS2::particles::C_INIT_StatusEffect, m_flSpecularExponentBlendToFull) == 0x204, "m_flSpecularExponentBlendToFull in C_INIT_StatusEffect should be at offset 0x204");
		static_assert(offsetof(CS2::particles::C_INIT_StatusEffect, m_flSpecularBlendToFull) == 0x208, "m_flSpecularBlendToFull in C_INIT_StatusEffect should be at offset 0x208");
		static_assert(offsetof(CS2::particles::C_INIT_StatusEffect, m_rimLightColor) == 0x20C, "m_rimLightColor in C_INIT_StatusEffect should be at offset 0x20C");
		static_assert(offsetof(CS2::particles::C_INIT_StatusEffect, m_flRimLightScale) == 0x210, "m_flRimLightScale in C_INIT_StatusEffect should be at offset 0x210");
		static_assert(offsetof(CS2::particles::C_INIT_StatusEffect, m_flReflectionsTintByBaseBlendToNone) == 0x214, "m_flReflectionsTintByBaseBlendToNone in C_INIT_StatusEffect should be at offset 0x214");
		static_assert(offsetof(CS2::particles::C_INIT_StatusEffect, m_flMetalnessBlendToFull) == 0x218, "m_flMetalnessBlendToFull in C_INIT_StatusEffect should be at offset 0x218");
		static_assert(offsetof(CS2::particles::C_INIT_StatusEffect, m_flSelfIllumBlendToFull) == 0x21C, "m_flSelfIllumBlendToFull in C_INIT_StatusEffect should be at offset 0x21C");
		static_assert(sizeof(CS2::particles::C_INIT_StatusEffect) == 0x238, "C_INIT_StatusEffect size should be 0x238");
	}
}
