// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/particles/CParticleFunctionOperator.hpp>
#include <SDK/particles/ParticleSetMethod_t.hpp>
#include <SDK/particleslib/CParticleTransformInput.hpp>
#include <SDK/particles/ParticleAttributeIndex_t.hpp>





using namespace GlobalTypes;
namespace CS2 {
	namespace particles {
		class C_OP_RemapTransformVisibilityToScalar : public CS2::particles::CParticleFunctionOperator {
		public:
			particles::ParticleSetMethod_t m_nSetMethod; // 0x1d0 | Schema_DeclaredEnum | Size: 0x4
			S2_PAD(0x4);
			particleslib::CParticleTransformInput m_TransformInput; // 0x1d8 | Schema_DeclaredClass | Size: 0x68
			particles::ParticleAttributeIndex_t m_nFieldOutput; // 0x240 | Schema_DeclaredClass | Size: 0x4
			float32 m_flInputMin; // 0x244 | Schema_Builtin | Size: 0x4
			float32 m_flInputMax; // 0x248 | Schema_Builtin | Size: 0x4
			float32 m_flOutputMin; // 0x24c | Schema_Builtin | Size: 0x4
			float32 m_flOutputMax; // 0x250 | Schema_Builtin | Size: 0x4
			float32 m_flRadius; // 0x254 | Schema_Builtin | Size: 0x4
		};
		static_assert(offsetof(CS2::particles::C_OP_RemapTransformVisibilityToScalar, m_nSetMethod) == 0x1D0, "m_nSetMethod in C_OP_RemapTransformVisibilityToScalar should be at offset 0x1D0");
		static_assert(offsetof(CS2::particles::C_OP_RemapTransformVisibilityToScalar, m_TransformInput) == 0x1D8, "m_TransformInput in C_OP_RemapTransformVisibilityToScalar should be at offset 0x1D8");
		static_assert(offsetof(CS2::particles::C_OP_RemapTransformVisibilityToScalar, m_nFieldOutput) == 0x240, "m_nFieldOutput in C_OP_RemapTransformVisibilityToScalar should be at offset 0x240");
		static_assert(offsetof(CS2::particles::C_OP_RemapTransformVisibilityToScalar, m_flInputMin) == 0x244, "m_flInputMin in C_OP_RemapTransformVisibilityToScalar should be at offset 0x244");
		static_assert(offsetof(CS2::particles::C_OP_RemapTransformVisibilityToScalar, m_flInputMax) == 0x248, "m_flInputMax in C_OP_RemapTransformVisibilityToScalar should be at offset 0x248");
		static_assert(offsetof(CS2::particles::C_OP_RemapTransformVisibilityToScalar, m_flOutputMin) == 0x24C, "m_flOutputMin in C_OP_RemapTransformVisibilityToScalar should be at offset 0x24C");
		static_assert(offsetof(CS2::particles::C_OP_RemapTransformVisibilityToScalar, m_flOutputMax) == 0x250, "m_flOutputMax in C_OP_RemapTransformVisibilityToScalar should be at offset 0x250");
		static_assert(offsetof(CS2::particles::C_OP_RemapTransformVisibilityToScalar, m_flRadius) == 0x254, "m_flRadius in C_OP_RemapTransformVisibilityToScalar should be at offset 0x254");
		static_assert(sizeof(CS2::particles::C_OP_RemapTransformVisibilityToScalar) == 0x258, "C_OP_RemapTransformVisibilityToScalar size should be 0x258");
	}
}
