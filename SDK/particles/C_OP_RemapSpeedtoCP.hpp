// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/particles/CParticleFunctionPreEmission.hpp>





using namespace GlobalTypes;
namespace CS2 {
	namespace particles {
		class C_OP_RemapSpeedtoCP : public CS2::particles::CParticleFunctionPreEmission {
		public:
			int32_t m_nInControlPointNumber; // 0x1d8 | Schema_Builtin | Size: 0x4
			int32_t m_nOutControlPointNumber; // 0x1dc | Schema_Builtin | Size: 0x4
			int32_t m_nField; // 0x1e0 | Schema_Builtin | Size: 0x4
			float32 m_flInputMin; // 0x1e4 | Schema_Builtin | Size: 0x4
			float32 m_flInputMax; // 0x1e8 | Schema_Builtin | Size: 0x4
			float32 m_flOutputMin; // 0x1ec | Schema_Builtin | Size: 0x4
			float32 m_flOutputMax; // 0x1f0 | Schema_Builtin | Size: 0x4
			bool m_bUseDeltaV; // 0x1f4 | Schema_Builtin | Size: 0x1
			S2_PAD(0x3); // End padding
		};
		static_assert(offsetof(CS2::particles::C_OP_RemapSpeedtoCP, m_nInControlPointNumber) == 0x1D8, "m_nInControlPointNumber in C_OP_RemapSpeedtoCP should be at offset 0x1D8");
		static_assert(offsetof(CS2::particles::C_OP_RemapSpeedtoCP, m_nOutControlPointNumber) == 0x1DC, "m_nOutControlPointNumber in C_OP_RemapSpeedtoCP should be at offset 0x1DC");
		static_assert(offsetof(CS2::particles::C_OP_RemapSpeedtoCP, m_nField) == 0x1E0, "m_nField in C_OP_RemapSpeedtoCP should be at offset 0x1E0");
		static_assert(offsetof(CS2::particles::C_OP_RemapSpeedtoCP, m_flInputMin) == 0x1E4, "m_flInputMin in C_OP_RemapSpeedtoCP should be at offset 0x1E4");
		static_assert(offsetof(CS2::particles::C_OP_RemapSpeedtoCP, m_flInputMax) == 0x1E8, "m_flInputMax in C_OP_RemapSpeedtoCP should be at offset 0x1E8");
		static_assert(offsetof(CS2::particles::C_OP_RemapSpeedtoCP, m_flOutputMin) == 0x1EC, "m_flOutputMin in C_OP_RemapSpeedtoCP should be at offset 0x1EC");
		static_assert(offsetof(CS2::particles::C_OP_RemapSpeedtoCP, m_flOutputMax) == 0x1F0, "m_flOutputMax in C_OP_RemapSpeedtoCP should be at offset 0x1F0");
		static_assert(offsetof(CS2::particles::C_OP_RemapSpeedtoCP, m_bUseDeltaV) == 0x1F4, "m_bUseDeltaV in C_OP_RemapSpeedtoCP should be at offset 0x1F4");
		static_assert(sizeof(CS2::particles::C_OP_RemapSpeedtoCP) == 0x1F8, "C_OP_RemapSpeedtoCP size should be 0x1F8");
	}
}
