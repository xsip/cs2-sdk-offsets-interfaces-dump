// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <SDK/GlobalTypes.hpp>

#include <SDK/particles/CParticleFunctionInitializer.hpp>
#include <SDK/particles/VectorExpressionType_t.hpp>
#include <SDK/particleslib/CPerParticleVecInput.hpp>
#include <SDK/particleslib/CPerParticleFloatInput.hpp>
#include <SDK/particles/ParticleAttributeIndex_t.hpp>
#include <SDK/particles/ParticleSetMethod_t.hpp>



namespace CS2 {
	namespace particles {
		class C_INIT_SetVectorAttributeToVectorExpression : public CS2::particles::CParticleFunctionInitializer {
		public:
			particles::VectorExpressionType_t m_nExpression; // 0x1c8 | Schema_DeclaredEnum | Size: 0x4
			S2_PAD(0x4);
			particleslib::CPerParticleVecInput m_vInput1; // 0x1d0 | Schema_DeclaredClass | Size: 0x678
			particleslib::CPerParticleVecInput m_vInput2; // 0x848 | Schema_DeclaredClass | Size: 0x678
			particleslib::CPerParticleFloatInput m_flLerp; // 0xec0 | Schema_DeclaredClass | Size: 0x160
			particles::ParticleAttributeIndex_t m_nOutputField; // 0x1020 | Schema_DeclaredClass | Size: 0x4
			particles::ParticleSetMethod_t m_nSetMethod; // 0x1024 | Schema_DeclaredEnum | Size: 0x4
			bool m_bNormalizedOutput; // 0x1028 | Schema_Builtin | Size: 0x1
			S2_PAD(0x67); // End padding
		};
		static_assert(offsetof(CS2::particles::C_INIT_SetVectorAttributeToVectorExpression, m_nExpression) == 0x1C8, "m_nExpression in C_INIT_SetVectorAttributeToVectorExpression should be at offset 0x1C8");
		static_assert(offsetof(CS2::particles::C_INIT_SetVectorAttributeToVectorExpression, m_vInput1) == 0x1D0, "m_vInput1 in C_INIT_SetVectorAttributeToVectorExpression should be at offset 0x1D0");
		static_assert(offsetof(CS2::particles::C_INIT_SetVectorAttributeToVectorExpression, m_vInput2) == 0x848, "m_vInput2 in C_INIT_SetVectorAttributeToVectorExpression should be at offset 0x848");
		static_assert(offsetof(CS2::particles::C_INIT_SetVectorAttributeToVectorExpression, m_flLerp) == 0xEC0, "m_flLerp in C_INIT_SetVectorAttributeToVectorExpression should be at offset 0xEC0");
		static_assert(offsetof(CS2::particles::C_INIT_SetVectorAttributeToVectorExpression, m_nOutputField) == 0x1020, "m_nOutputField in C_INIT_SetVectorAttributeToVectorExpression should be at offset 0x1020");
		static_assert(offsetof(CS2::particles::C_INIT_SetVectorAttributeToVectorExpression, m_nSetMethod) == 0x1024, "m_nSetMethod in C_INIT_SetVectorAttributeToVectorExpression should be at offset 0x1024");
		static_assert(offsetof(CS2::particles::C_INIT_SetVectorAttributeToVectorExpression, m_bNormalizedOutput) == 0x1028, "m_bNormalizedOutput in C_INIT_SetVectorAttributeToVectorExpression should be at offset 0x1028");
		static_assert(sizeof(CS2::particles::C_INIT_SetVectorAttributeToVectorExpression) == 0x1090, "C_INIT_SetVectorAttributeToVectorExpression size should be 0x1090");
	}
}
