// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <SDK/GlobalTypes.hpp>

#include <SDK/particles/CParticleFunctionEmitter.hpp>
#include <SDK/particleslib/CParticleCollectionFloatInput.hpp>
#include <SDK/particles/EventTypeSelection_t.hpp>



namespace CS2 {
	namespace particles {
		class C_OP_InstantaneousEmitter : public CS2::particles::CParticleFunctionEmitter {
		public:
			particleslib::CParticleCollectionFloatInput m_nParticlesToEmit; // 0x1c8 | Schema_DeclaredClass | Size: 0x160
			particleslib::CParticleCollectionFloatInput m_flStartTime; // 0x328 | Schema_DeclaredClass | Size: 0x160
			float32 m_flInitFromKilledParentParticles; // 0x488 | Schema_Builtin | Size: 0x4
			particles::EventTypeSelection_t m_nEventType; // 0x48c | Schema_DeclaredEnum | Size: 0x4
			particleslib::CParticleCollectionFloatInput m_flParentParticleScale; // 0x490 | Schema_DeclaredClass | Size: 0x160
			int32_t m_nMaxEmittedPerFrame; // 0x5f0 | Schema_Builtin | Size: 0x4
			int32_t m_nSnapshotControlPoint; // 0x5f4 | Schema_Builtin | Size: 0x4
			GlobalTypes::CUtlString m_strSnapshotSubset; // 0x5f8 | Schema_Atomic | Size: 0x8
		};
		static_assert(offsetof(CS2::particles::C_OP_InstantaneousEmitter, m_nParticlesToEmit) == 0x1C8, "m_nParticlesToEmit in C_OP_InstantaneousEmitter should be at offset 0x1C8");
		static_assert(offsetof(CS2::particles::C_OP_InstantaneousEmitter, m_flStartTime) == 0x328, "m_flStartTime in C_OP_InstantaneousEmitter should be at offset 0x328");
		static_assert(offsetof(CS2::particles::C_OP_InstantaneousEmitter, m_flInitFromKilledParentParticles) == 0x488, "m_flInitFromKilledParentParticles in C_OP_InstantaneousEmitter should be at offset 0x488");
		static_assert(offsetof(CS2::particles::C_OP_InstantaneousEmitter, m_nEventType) == 0x48C, "m_nEventType in C_OP_InstantaneousEmitter should be at offset 0x48C");
		static_assert(offsetof(CS2::particles::C_OP_InstantaneousEmitter, m_flParentParticleScale) == 0x490, "m_flParentParticleScale in C_OP_InstantaneousEmitter should be at offset 0x490");
		static_assert(offsetof(CS2::particles::C_OP_InstantaneousEmitter, m_nMaxEmittedPerFrame) == 0x5F0, "m_nMaxEmittedPerFrame in C_OP_InstantaneousEmitter should be at offset 0x5F0");
		static_assert(offsetof(CS2::particles::C_OP_InstantaneousEmitter, m_nSnapshotControlPoint) == 0x5F4, "m_nSnapshotControlPoint in C_OP_InstantaneousEmitter should be at offset 0x5F4");
		static_assert(offsetof(CS2::particles::C_OP_InstantaneousEmitter, m_strSnapshotSubset) == 0x5F8, "m_strSnapshotSubset in C_OP_InstantaneousEmitter should be at offset 0x5F8");
		static_assert(sizeof(CS2::particles::C_OP_InstantaneousEmitter) == 0x600, "C_OP_InstantaneousEmitter size should be 0x600");
	}
}
