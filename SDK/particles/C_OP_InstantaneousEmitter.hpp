// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/particles/CParticleFunctionEmitter.hpp>
#include <SDK/particleslib/CParticleCollectionFloatInput.hpp>
#include <SDK/particles/EventTypeSelection_t.hpp>



namespace CS2 {
	namespace particles {
		class C_OP_InstantaneousEmitter : public CS2::particles::CParticleFunctionEmitter {
		public:
			particleslib::CParticleCollectionFloatInput m_nParticlesToEmit; // 0x1d8 | Schema_DeclaredClass | Size: 0x170
			particleslib::CParticleCollectionFloatInput m_flStartTime; // 0x348 | Schema_DeclaredClass | Size: 0x170
			float32 m_flInitFromKilledParentParticles; // 0x4b8 | Schema_Builtin | Size: 0x4
			particles::EventTypeSelection_t m_nEventType; // 0x4bc | Schema_DeclaredEnum | Size: 0x4
			particleslib::CParticleCollectionFloatInput m_flParentParticleScale; // 0x4c0 | Schema_DeclaredClass | Size: 0x170
			int32_t m_nMaxEmittedPerFrame; // 0x630 | Schema_Builtin | Size: 0x4
			int32_t m_nSnapshotControlPoint; // 0x634 | Schema_Builtin | Size: 0x4
			GlobalTypes::CUtlString m_strSnapshotSubset; // 0x638 | Schema_Atomic | Size: 0x8
		};
		static_assert(offsetof(CS2::particles::C_OP_InstantaneousEmitter, m_nParticlesToEmit) == 0x1D8, "m_nParticlesToEmit in C_OP_InstantaneousEmitter should be at offset 0x1D8");
		static_assert(offsetof(CS2::particles::C_OP_InstantaneousEmitter, m_flStartTime) == 0x348, "m_flStartTime in C_OP_InstantaneousEmitter should be at offset 0x348");
		static_assert(offsetof(CS2::particles::C_OP_InstantaneousEmitter, m_flInitFromKilledParentParticles) == 0x4B8, "m_flInitFromKilledParentParticles in C_OP_InstantaneousEmitter should be at offset 0x4B8");
		static_assert(offsetof(CS2::particles::C_OP_InstantaneousEmitter, m_nEventType) == 0x4BC, "m_nEventType in C_OP_InstantaneousEmitter should be at offset 0x4BC");
		static_assert(offsetof(CS2::particles::C_OP_InstantaneousEmitter, m_flParentParticleScale) == 0x4C0, "m_flParentParticleScale in C_OP_InstantaneousEmitter should be at offset 0x4C0");
		static_assert(offsetof(CS2::particles::C_OP_InstantaneousEmitter, m_nMaxEmittedPerFrame) == 0x630, "m_nMaxEmittedPerFrame in C_OP_InstantaneousEmitter should be at offset 0x630");
		static_assert(offsetof(CS2::particles::C_OP_InstantaneousEmitter, m_nSnapshotControlPoint) == 0x634, "m_nSnapshotControlPoint in C_OP_InstantaneousEmitter should be at offset 0x634");
		static_assert(offsetof(CS2::particles::C_OP_InstantaneousEmitter, m_strSnapshotSubset) == 0x638, "m_strSnapshotSubset in C_OP_InstantaneousEmitter should be at offset 0x638");
		static_assert(sizeof(CS2::particles::C_OP_InstantaneousEmitter) == 0x640, "C_OP_InstantaneousEmitter size should be 0x640");
	}
}
