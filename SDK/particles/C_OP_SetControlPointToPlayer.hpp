// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <SDK/GlobalTypes.hpp>

#include <SDK/particles/CParticleFunctionPreEmission.hpp>



namespace CS2 {
	namespace particles {
		class C_OP_SetControlPointToPlayer : public CS2::particles::CParticleFunctionPreEmission {
		public:
			int32_t m_nCP1; // 0x1c8 | Schema_Builtin | Size: 0x4
			GlobalTypes::Vector m_vecCP1Pos; // 0x1cc | Schema_Atomic | Size: 0xc
			bool m_bOrientToEyes; // 0x1d8 | Schema_Builtin | Size: 0x1
			S2_PAD(0x7); // End padding
		};
		static_assert(offsetof(CS2::particles::C_OP_SetControlPointToPlayer, m_nCP1) == 0x1C8, "m_nCP1 in C_OP_SetControlPointToPlayer should be at offset 0x1C8");
		static_assert(offsetof(CS2::particles::C_OP_SetControlPointToPlayer, m_vecCP1Pos) == 0x1CC, "m_vecCP1Pos in C_OP_SetControlPointToPlayer should be at offset 0x1CC");
		static_assert(offsetof(CS2::particles::C_OP_SetControlPointToPlayer, m_bOrientToEyes) == 0x1D8, "m_bOrientToEyes in C_OP_SetControlPointToPlayer should be at offset 0x1D8");
		static_assert(sizeof(CS2::particles::C_OP_SetControlPointToPlayer) == 0x1E0, "C_OP_SetControlPointToPlayer size should be 0x1E0");
	}
}
