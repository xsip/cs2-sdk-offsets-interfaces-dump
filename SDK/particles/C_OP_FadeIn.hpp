// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <SDK/GlobalTypes.hpp>

#include <SDK/particles/CParticleFunctionOperator.hpp>



namespace CS2 {
	namespace particles {
		class C_OP_FadeIn : public CS2::particles::CParticleFunctionOperator {
		public:
			float32 m_flFadeInTimeMin; // 0x1c0 | Schema_Builtin | Size: 0x4
			float32 m_flFadeInTimeMax; // 0x1c4 | Schema_Builtin | Size: 0x4
			float32 m_flFadeInTimeExp; // 0x1c8 | Schema_Builtin | Size: 0x4
			bool m_bProportional; // 0x1cc | Schema_Builtin | Size: 0x1
			S2_PAD(0x3); // End padding
		};
		static_assert(offsetof(CS2::particles::C_OP_FadeIn, m_flFadeInTimeMin) == 0x1C0, "m_flFadeInTimeMin in C_OP_FadeIn should be at offset 0x1C0");
		static_assert(offsetof(CS2::particles::C_OP_FadeIn, m_flFadeInTimeMax) == 0x1C4, "m_flFadeInTimeMax in C_OP_FadeIn should be at offset 0x1C4");
		static_assert(offsetof(CS2::particles::C_OP_FadeIn, m_flFadeInTimeExp) == 0x1C8, "m_flFadeInTimeExp in C_OP_FadeIn should be at offset 0x1C8");
		static_assert(offsetof(CS2::particles::C_OP_FadeIn, m_bProportional) == 0x1CC, "m_bProportional in C_OP_FadeIn should be at offset 0x1CC");
		static_assert(sizeof(CS2::particles::C_OP_FadeIn) == 0x1D0, "C_OP_FadeIn size should be 0x1D0");
	}
}
