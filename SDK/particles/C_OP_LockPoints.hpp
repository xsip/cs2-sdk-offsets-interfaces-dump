// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <SDK/GlobalTypes.hpp>

#include <SDK/particles/CParticleFunctionOperator.hpp>



namespace CS2 {
	namespace particles {
		class C_OP_LockPoints : public CS2::particles::CParticleFunctionOperator {
		public:
			int32_t m_nMinCol; // 0x1c0 | Schema_Builtin | Size: 0x4
			int32_t m_nMaxCol; // 0x1c4 | Schema_Builtin | Size: 0x4
			int32_t m_nMinRow; // 0x1c8 | Schema_Builtin | Size: 0x4
			int32_t m_nMaxRow; // 0x1cc | Schema_Builtin | Size: 0x4
			int32_t m_nControlPoint; // 0x1d0 | Schema_Builtin | Size: 0x4
			float32 m_flBlendValue; // 0x1d4 | Schema_Builtin | Size: 0x4
		};
		static_assert(offsetof(CS2::particles::C_OP_LockPoints, m_nMinCol) == 0x1C0, "m_nMinCol in C_OP_LockPoints should be at offset 0x1C0");
		static_assert(offsetof(CS2::particles::C_OP_LockPoints, m_nMaxCol) == 0x1C4, "m_nMaxCol in C_OP_LockPoints should be at offset 0x1C4");
		static_assert(offsetof(CS2::particles::C_OP_LockPoints, m_nMinRow) == 0x1C8, "m_nMinRow in C_OP_LockPoints should be at offset 0x1C8");
		static_assert(offsetof(CS2::particles::C_OP_LockPoints, m_nMaxRow) == 0x1CC, "m_nMaxRow in C_OP_LockPoints should be at offset 0x1CC");
		static_assert(offsetof(CS2::particles::C_OP_LockPoints, m_nControlPoint) == 0x1D0, "m_nControlPoint in C_OP_LockPoints should be at offset 0x1D0");
		static_assert(offsetof(CS2::particles::C_OP_LockPoints, m_flBlendValue) == 0x1D4, "m_flBlendValue in C_OP_LockPoints should be at offset 0x1D4");
		static_assert(sizeof(CS2::particles::C_OP_LockPoints) == 0x1D8, "C_OP_LockPoints size should be 0x1D8");
	}
}
