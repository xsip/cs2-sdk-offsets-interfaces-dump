// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <SDK/GlobalTypes.hpp>

#include <SDK/particles/CParticleFunctionOperator.hpp>



namespace CS2 {
	namespace particles {
		class C_OP_FadeAndKill : public CS2::particles::CParticleFunctionOperator {
		public:
			float32 m_flStartFadeInTime; // 0x1d0 | Schema_Builtin | Size: 0x4
			float32 m_flEndFadeInTime; // 0x1d4 | Schema_Builtin | Size: 0x4
			float32 m_flStartFadeOutTime; // 0x1d8 | Schema_Builtin | Size: 0x4
			float32 m_flEndFadeOutTime; // 0x1dc | Schema_Builtin | Size: 0x4
			float32 m_flStartAlpha; // 0x1e0 | Schema_Builtin | Size: 0x4
			float32 m_flEndAlpha; // 0x1e4 | Schema_Builtin | Size: 0x4
			bool m_bForcePreserveParticleOrder; // 0x1e8 | Schema_Builtin | Size: 0x1
			S2_PAD(0x7); // End padding
		};
		static_assert(offsetof(CS2::particles::C_OP_FadeAndKill, m_flStartFadeInTime) == 0x1D0, "m_flStartFadeInTime in C_OP_FadeAndKill should be at offset 0x1D0");
		static_assert(offsetof(CS2::particles::C_OP_FadeAndKill, m_flEndFadeInTime) == 0x1D4, "m_flEndFadeInTime in C_OP_FadeAndKill should be at offset 0x1D4");
		static_assert(offsetof(CS2::particles::C_OP_FadeAndKill, m_flStartFadeOutTime) == 0x1D8, "m_flStartFadeOutTime in C_OP_FadeAndKill should be at offset 0x1D8");
		static_assert(offsetof(CS2::particles::C_OP_FadeAndKill, m_flEndFadeOutTime) == 0x1DC, "m_flEndFadeOutTime in C_OP_FadeAndKill should be at offset 0x1DC");
		static_assert(offsetof(CS2::particles::C_OP_FadeAndKill, m_flStartAlpha) == 0x1E0, "m_flStartAlpha in C_OP_FadeAndKill should be at offset 0x1E0");
		static_assert(offsetof(CS2::particles::C_OP_FadeAndKill, m_flEndAlpha) == 0x1E4, "m_flEndAlpha in C_OP_FadeAndKill should be at offset 0x1E4");
		static_assert(offsetof(CS2::particles::C_OP_FadeAndKill, m_bForcePreserveParticleOrder) == 0x1E8, "m_bForcePreserveParticleOrder in C_OP_FadeAndKill should be at offset 0x1E8");
		static_assert(sizeof(CS2::particles::C_OP_FadeAndKill) == 0x1F0, "C_OP_FadeAndKill size should be 0x1F0");
	}
}
