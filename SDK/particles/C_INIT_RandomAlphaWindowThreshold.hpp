// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/particles/CParticleFunctionInitializer.hpp>





using namespace GlobalTypes;
namespace CS2 {
	namespace particles {
		class C_INIT_RandomAlphaWindowThreshold : public CS2::particles::CParticleFunctionInitializer {
		public:
			float32 m_flMin; // 0x1d8 | Schema_Builtin | Size: 0x4
			float32 m_flMax; // 0x1dc | Schema_Builtin | Size: 0x4
			float32 m_flExponent; // 0x1e0 | Schema_Builtin | Size: 0x4
			S2_PAD(0x4); // End padding
		};
		static_assert(offsetof(CS2::particles::C_INIT_RandomAlphaWindowThreshold, m_flMin) == 0x1D8, "m_flMin in C_INIT_RandomAlphaWindowThreshold should be at offset 0x1D8");
		static_assert(offsetof(CS2::particles::C_INIT_RandomAlphaWindowThreshold, m_flMax) == 0x1DC, "m_flMax in C_INIT_RandomAlphaWindowThreshold should be at offset 0x1DC");
		static_assert(offsetof(CS2::particles::C_INIT_RandomAlphaWindowThreshold, m_flExponent) == 0x1E0, "m_flExponent in C_INIT_RandomAlphaWindowThreshold should be at offset 0x1E0");
		static_assert(sizeof(CS2::particles::C_INIT_RandomAlphaWindowThreshold) == 0x1E8, "C_INIT_RandomAlphaWindowThreshold size should be 0x1E8");
	}
}
