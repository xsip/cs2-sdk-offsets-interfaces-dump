// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif





namespace CS2 {
	namespace particles {
		class ControlPointReference_t  {
		public:
			int32_t m_controlPointNameString; // 0x0 | Schema_Builtin | Size: 0x4
			GlobalTypes::Vector m_vOffsetFromControlPoint; // 0x4 | Schema_Atomic | Size: 0xc
			bool m_bOffsetInLocalSpace; // 0x10 | Schema_Builtin | Size: 0x1
			S2_PAD(0x3); // End padding
		};
		static_assert(offsetof(CS2::particles::ControlPointReference_t, m_controlPointNameString) == 0x0, "m_controlPointNameString in ControlPointReference_t should be at offset 0x0");
		static_assert(offsetof(CS2::particles::ControlPointReference_t, m_vOffsetFromControlPoint) == 0x4, "m_vOffsetFromControlPoint in ControlPointReference_t should be at offset 0x4");
		static_assert(offsetof(CS2::particles::ControlPointReference_t, m_bOffsetInLocalSpace) == 0x10, "m_bOffsetInLocalSpace in ControlPointReference_t should be at offset 0x10");
		static_assert(sizeof(CS2::particles::ControlPointReference_t) == 0x14, "ControlPointReference_t size should be 0x14");
	}
}
