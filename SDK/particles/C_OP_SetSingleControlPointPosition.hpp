// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/particles/CParticleFunctionPreEmission.hpp>
#include <SDK/particleslib/CParticleCollectionVecInput.hpp>
#include <SDK/particleslib/CParticleTransformInput.hpp>



namespace CS2 {
	namespace particles {
		class C_OP_SetSingleControlPointPosition : public CS2::particles::CParticleFunctionPreEmission {
		public:
			bool m_bSetOnce; // 0x1d8 | Schema_Builtin | Size: 0x1
			S2_PAD(0x3);
			int32_t m_nCP1; // 0x1dc | Schema_Builtin | Size: 0x4
			particleslib::CParticleCollectionVecInput m_vecCP1Pos; // 0x1e0 | Schema_DeclaredClass | Size: 0x6b8
			particleslib::CParticleTransformInput m_transformInput; // 0x898 | Schema_DeclaredClass | Size: 0x68
		};
		static_assert(offsetof(CS2::particles::C_OP_SetSingleControlPointPosition, m_bSetOnce) == 0x1D8, "m_bSetOnce in C_OP_SetSingleControlPointPosition should be at offset 0x1D8");
		static_assert(offsetof(CS2::particles::C_OP_SetSingleControlPointPosition, m_nCP1) == 0x1DC, "m_nCP1 in C_OP_SetSingleControlPointPosition should be at offset 0x1DC");
		static_assert(offsetof(CS2::particles::C_OP_SetSingleControlPointPosition, m_vecCP1Pos) == 0x1E0, "m_vecCP1Pos in C_OP_SetSingleControlPointPosition should be at offset 0x1E0");
		static_assert(offsetof(CS2::particles::C_OP_SetSingleControlPointPosition, m_transformInput) == 0x898, "m_transformInput in C_OP_SetSingleControlPointPosition should be at offset 0x898");
		static_assert(sizeof(CS2::particles::C_OP_SetSingleControlPointPosition) == 0x900, "C_OP_SetSingleControlPointPosition size should be 0x900");
	}
}
