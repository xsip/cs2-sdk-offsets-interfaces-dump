// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <SDK/GlobalTypes.hpp>

#include <SDK/particles/CParticleFunctionInitializer.hpp>



namespace CS2 {
	namespace particles {
		class C_INIT_ChaoticAttractor : public CS2::particles::CParticleFunctionInitializer {
		public:
			float32 m_flAParm; // 0x1d8 | Schema_Builtin | Size: 0x4
			float32 m_flBParm; // 0x1dc | Schema_Builtin | Size: 0x4
			float32 m_flCParm; // 0x1e0 | Schema_Builtin | Size: 0x4
			float32 m_flDParm; // 0x1e4 | Schema_Builtin | Size: 0x4
			float32 m_flScale; // 0x1e8 | Schema_Builtin | Size: 0x4
			float32 m_flSpeedMin; // 0x1ec | Schema_Builtin | Size: 0x4
			float32 m_flSpeedMax; // 0x1f0 | Schema_Builtin | Size: 0x4
			int32_t m_nBaseCP; // 0x1f4 | Schema_Builtin | Size: 0x4
			bool m_bUniformSpeed; // 0x1f8 | Schema_Builtin | Size: 0x1
			S2_PAD(0x7); // End padding
		};
		static_assert(offsetof(CS2::particles::C_INIT_ChaoticAttractor, m_flAParm) == 0x1D8, "m_flAParm in C_INIT_ChaoticAttractor should be at offset 0x1D8");
		static_assert(offsetof(CS2::particles::C_INIT_ChaoticAttractor, m_flBParm) == 0x1DC, "m_flBParm in C_INIT_ChaoticAttractor should be at offset 0x1DC");
		static_assert(offsetof(CS2::particles::C_INIT_ChaoticAttractor, m_flCParm) == 0x1E0, "m_flCParm in C_INIT_ChaoticAttractor should be at offset 0x1E0");
		static_assert(offsetof(CS2::particles::C_INIT_ChaoticAttractor, m_flDParm) == 0x1E4, "m_flDParm in C_INIT_ChaoticAttractor should be at offset 0x1E4");
		static_assert(offsetof(CS2::particles::C_INIT_ChaoticAttractor, m_flScale) == 0x1E8, "m_flScale in C_INIT_ChaoticAttractor should be at offset 0x1E8");
		static_assert(offsetof(CS2::particles::C_INIT_ChaoticAttractor, m_flSpeedMin) == 0x1EC, "m_flSpeedMin in C_INIT_ChaoticAttractor should be at offset 0x1EC");
		static_assert(offsetof(CS2::particles::C_INIT_ChaoticAttractor, m_flSpeedMax) == 0x1F0, "m_flSpeedMax in C_INIT_ChaoticAttractor should be at offset 0x1F0");
		static_assert(offsetof(CS2::particles::C_INIT_ChaoticAttractor, m_nBaseCP) == 0x1F4, "m_nBaseCP in C_INIT_ChaoticAttractor should be at offset 0x1F4");
		static_assert(offsetof(CS2::particles::C_INIT_ChaoticAttractor, m_bUniformSpeed) == 0x1F8, "m_bUniformSpeed in C_INIT_ChaoticAttractor should be at offset 0x1F8");
		static_assert(sizeof(CS2::particles::C_INIT_ChaoticAttractor) == 0x200, "C_INIT_ChaoticAttractor size should be 0x200");
	}
}
