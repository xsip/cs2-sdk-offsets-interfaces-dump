// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <SDK/GlobalTypes.hpp>

#include <SDK/particles/CBaseTrailRenderer.hpp>
#include <SDK/particles/ParticleAttributeIndex_t.hpp>
#include <SDK/particleslib/CPerParticleFloatInput.hpp>
#include <SDK/particleslib/CParticleCollectionVecInput.hpp>



namespace CS2 {
	namespace particles {
		class C_OP_RenderTrails : public CS2::particles::CBaseTrailRenderer {
		public:
			bool m_bEnableFadingAndClamping; // 0x2ef0 | Schema_Builtin | Size: 0x1
			S2_PAD(0x3);
			float32 m_flStartFadeDot; // 0x2ef4 | Schema_Builtin | Size: 0x4
			float32 m_flEndFadeDot; // 0x2ef8 | Schema_Builtin | Size: 0x4
			particles::ParticleAttributeIndex_t m_nPrevPntSource; // 0x2efc | Schema_DeclaredClass | Size: 0x4
			float32 m_flMaxLength; // 0x2f00 | Schema_Builtin | Size: 0x4
			float32 m_flMinLength; // 0x2f04 | Schema_Builtin | Size: 0x4
			bool m_bIgnoreDT; // 0x2f08 | Schema_Builtin | Size: 0x1
			S2_PAD(0x3);
			float32 m_flConstrainRadiusToLengthRatio; // 0x2f0c | Schema_Builtin | Size: 0x4
			float32 m_flLengthScale; // 0x2f10 | Schema_Builtin | Size: 0x4
			float32 m_flLengthFadeInTime; // 0x2f14 | Schema_Builtin | Size: 0x4
			particleslib::CPerParticleFloatInput m_flRadiusHeadTaper; // 0x2f18 | Schema_DeclaredClass | Size: 0x160
			particleslib::CParticleCollectionVecInput m_vecHeadColorScale; // 0x3078 | Schema_DeclaredClass | Size: 0x678
			particleslib::CPerParticleFloatInput m_flHeadAlphaScale; // 0x36f0 | Schema_DeclaredClass | Size: 0x160
			particleslib::CPerParticleFloatInput m_flRadiusTaper; // 0x3850 | Schema_DeclaredClass | Size: 0x160
			particleslib::CParticleCollectionVecInput m_vecTailColorScale; // 0x39b0 | Schema_DeclaredClass | Size: 0x678
			particleslib::CPerParticleFloatInput m_flTailAlphaScale; // 0x4028 | Schema_DeclaredClass | Size: 0x160
			particles::ParticleAttributeIndex_t m_nHorizCropField; // 0x4188 | Schema_DeclaredClass | Size: 0x4
			particles::ParticleAttributeIndex_t m_nVertCropField; // 0x418c | Schema_DeclaredClass | Size: 0x4
			float32 m_flForwardShift; // 0x4190 | Schema_Builtin | Size: 0x4
			bool m_bFlipUVBasedOnPitchYaw; // 0x4194 | Schema_Builtin | Size: 0x1
			S2_PAD(0x3); // End padding
		};
		static_assert(offsetof(CS2::particles::C_OP_RenderTrails, m_bEnableFadingAndClamping) == 0x2EF0, "m_bEnableFadingAndClamping in C_OP_RenderTrails should be at offset 0x2EF0");
		static_assert(offsetof(CS2::particles::C_OP_RenderTrails, m_flStartFadeDot) == 0x2EF4, "m_flStartFadeDot in C_OP_RenderTrails should be at offset 0x2EF4");
		static_assert(offsetof(CS2::particles::C_OP_RenderTrails, m_flEndFadeDot) == 0x2EF8, "m_flEndFadeDot in C_OP_RenderTrails should be at offset 0x2EF8");
		static_assert(offsetof(CS2::particles::C_OP_RenderTrails, m_nPrevPntSource) == 0x2EFC, "m_nPrevPntSource in C_OP_RenderTrails should be at offset 0x2EFC");
		static_assert(offsetof(CS2::particles::C_OP_RenderTrails, m_flMaxLength) == 0x2F00, "m_flMaxLength in C_OP_RenderTrails should be at offset 0x2F00");
		static_assert(offsetof(CS2::particles::C_OP_RenderTrails, m_flMinLength) == 0x2F04, "m_flMinLength in C_OP_RenderTrails should be at offset 0x2F04");
		static_assert(offsetof(CS2::particles::C_OP_RenderTrails, m_bIgnoreDT) == 0x2F08, "m_bIgnoreDT in C_OP_RenderTrails should be at offset 0x2F08");
		static_assert(offsetof(CS2::particles::C_OP_RenderTrails, m_flConstrainRadiusToLengthRatio) == 0x2F0C, "m_flConstrainRadiusToLengthRatio in C_OP_RenderTrails should be at offset 0x2F0C");
		static_assert(offsetof(CS2::particles::C_OP_RenderTrails, m_flLengthScale) == 0x2F10, "m_flLengthScale in C_OP_RenderTrails should be at offset 0x2F10");
		static_assert(offsetof(CS2::particles::C_OP_RenderTrails, m_flLengthFadeInTime) == 0x2F14, "m_flLengthFadeInTime in C_OP_RenderTrails should be at offset 0x2F14");
		static_assert(offsetof(CS2::particles::C_OP_RenderTrails, m_flRadiusHeadTaper) == 0x2F18, "m_flRadiusHeadTaper in C_OP_RenderTrails should be at offset 0x2F18");
		static_assert(offsetof(CS2::particles::C_OP_RenderTrails, m_vecHeadColorScale) == 0x3078, "m_vecHeadColorScale in C_OP_RenderTrails should be at offset 0x3078");
		static_assert(offsetof(CS2::particles::C_OP_RenderTrails, m_flHeadAlphaScale) == 0x36F0, "m_flHeadAlphaScale in C_OP_RenderTrails should be at offset 0x36F0");
		static_assert(offsetof(CS2::particles::C_OP_RenderTrails, m_flRadiusTaper) == 0x3850, "m_flRadiusTaper in C_OP_RenderTrails should be at offset 0x3850");
		static_assert(offsetof(CS2::particles::C_OP_RenderTrails, m_vecTailColorScale) == 0x39B0, "m_vecTailColorScale in C_OP_RenderTrails should be at offset 0x39B0");
		static_assert(offsetof(CS2::particles::C_OP_RenderTrails, m_flTailAlphaScale) == 0x4028, "m_flTailAlphaScale in C_OP_RenderTrails should be at offset 0x4028");
		static_assert(offsetof(CS2::particles::C_OP_RenderTrails, m_nHorizCropField) == 0x4188, "m_nHorizCropField in C_OP_RenderTrails should be at offset 0x4188");
		static_assert(offsetof(CS2::particles::C_OP_RenderTrails, m_nVertCropField) == 0x418C, "m_nVertCropField in C_OP_RenderTrails should be at offset 0x418C");
		static_assert(offsetof(CS2::particles::C_OP_RenderTrails, m_flForwardShift) == 0x4190, "m_flForwardShift in C_OP_RenderTrails should be at offset 0x4190");
		static_assert(offsetof(CS2::particles::C_OP_RenderTrails, m_bFlipUVBasedOnPitchYaw) == 0x4194, "m_bFlipUVBasedOnPitchYaw in C_OP_RenderTrails should be at offset 0x4194");
		static_assert(sizeof(CS2::particles::C_OP_RenderTrails) == 0x4198, "C_OP_RenderTrails size should be 0x4198");
	}
}
