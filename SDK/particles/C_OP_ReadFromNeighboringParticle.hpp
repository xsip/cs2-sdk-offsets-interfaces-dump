// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <SDK/GlobalTypes.hpp>

#include <SDK/particles/CParticleFunctionOperator.hpp>
#include <SDK/particles/ParticleAttributeIndex_t.hpp>
#include <SDK/particleslib/CPerParticleFloatInput.hpp>



namespace CS2 {
	namespace particles {
		class C_OP_ReadFromNeighboringParticle : public CS2::particles::CParticleFunctionOperator {
		public:
			particles::ParticleAttributeIndex_t m_nFieldInput; // 0x1d0 | Schema_DeclaredClass | Size: 0x4
			particles::ParticleAttributeIndex_t m_nFieldOutput; // 0x1d4 | Schema_DeclaredClass | Size: 0x4
			int32_t m_nIncrement; // 0x1d8 | Schema_Builtin | Size: 0x4
			S2_PAD(0x4);
			particleslib::CPerParticleFloatInput m_DistanceCheck; // 0x1e0 | Schema_DeclaredClass | Size: 0x170
			particleslib::CPerParticleFloatInput m_flInterpolation; // 0x350 | Schema_DeclaredClass | Size: 0x170
		};
		static_assert(offsetof(CS2::particles::C_OP_ReadFromNeighboringParticle, m_nFieldInput) == 0x1D0, "m_nFieldInput in C_OP_ReadFromNeighboringParticle should be at offset 0x1D0");
		static_assert(offsetof(CS2::particles::C_OP_ReadFromNeighboringParticle, m_nFieldOutput) == 0x1D4, "m_nFieldOutput in C_OP_ReadFromNeighboringParticle should be at offset 0x1D4");
		static_assert(offsetof(CS2::particles::C_OP_ReadFromNeighboringParticle, m_nIncrement) == 0x1D8, "m_nIncrement in C_OP_ReadFromNeighboringParticle should be at offset 0x1D8");
		static_assert(offsetof(CS2::particles::C_OP_ReadFromNeighboringParticle, m_DistanceCheck) == 0x1E0, "m_DistanceCheck in C_OP_ReadFromNeighboringParticle should be at offset 0x1E0");
		static_assert(offsetof(CS2::particles::C_OP_ReadFromNeighboringParticle, m_flInterpolation) == 0x350, "m_flInterpolation in C_OP_ReadFromNeighboringParticle should be at offset 0x350");
		static_assert(sizeof(CS2::particles::C_OP_ReadFromNeighboringParticle) == 0x4C0, "C_OP_ReadFromNeighboringParticle size should be 0x4C0");
	}
}
