// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <SDK/GlobalTypes.hpp>

#include <SDK/particles/CParticleFunctionRenderer.hpp>
#include <SDK/particleslib/CParticleCollectionRendererFloatInput.hpp>



namespace CS2 {
	namespace particles {
		class C_OP_RenderGpuImplicit : public CS2::particles::CParticleFunctionRenderer {
		public:
			bool m_bUsePerParticleRadius; // 0x210 | Schema_Builtin | Size: 0x1
			S2_PAD(0x3);
			uint32_t m_nVertexCountKb; // 0x214 | Schema_Builtin | Size: 0x4
			uint32_t m_nIndexCountKb; // 0x218 | Schema_Builtin | Size: 0x4
			S2_PAD(0x4);
			particleslib::CParticleCollectionRendererFloatInput m_fGridSize; // 0x220 | Schema_DeclaredClass | Size: 0x160
			particleslib::CParticleCollectionRendererFloatInput m_fRadiusScale; // 0x380 | Schema_DeclaredClass | Size: 0x160
			particleslib::CParticleCollectionRendererFloatInput m_fIsosurfaceThreshold; // 0x4e0 | Schema_DeclaredClass | Size: 0x160
			int32_t m_nScaleCP; // 0x640 | Schema_Builtin | Size: 0x4
			S2_PAD(0x4);
			// GlobalTypes::CStrongHandle< resourcesystem::InfoForResourceTypeIMaterial2 > m_hMaterial; // 0x648 | Schema_Atomic | Size: 0x8
			char  m_hMaterial[0x8]; // 0x648 | Schema_Atomic | Size: 0x8
		};
		static_assert(offsetof(CS2::particles::C_OP_RenderGpuImplicit, m_bUsePerParticleRadius) == 0x210, "m_bUsePerParticleRadius in C_OP_RenderGpuImplicit should be at offset 0x210");
		static_assert(offsetof(CS2::particles::C_OP_RenderGpuImplicit, m_nVertexCountKb) == 0x214, "m_nVertexCountKb in C_OP_RenderGpuImplicit should be at offset 0x214");
		static_assert(offsetof(CS2::particles::C_OP_RenderGpuImplicit, m_nIndexCountKb) == 0x218, "m_nIndexCountKb in C_OP_RenderGpuImplicit should be at offset 0x218");
		static_assert(offsetof(CS2::particles::C_OP_RenderGpuImplicit, m_fGridSize) == 0x220, "m_fGridSize in C_OP_RenderGpuImplicit should be at offset 0x220");
		static_assert(offsetof(CS2::particles::C_OP_RenderGpuImplicit, m_fRadiusScale) == 0x380, "m_fRadiusScale in C_OP_RenderGpuImplicit should be at offset 0x380");
		static_assert(offsetof(CS2::particles::C_OP_RenderGpuImplicit, m_fIsosurfaceThreshold) == 0x4E0, "m_fIsosurfaceThreshold in C_OP_RenderGpuImplicit should be at offset 0x4E0");
		static_assert(offsetof(CS2::particles::C_OP_RenderGpuImplicit, m_nScaleCP) == 0x640, "m_nScaleCP in C_OP_RenderGpuImplicit should be at offset 0x640");
		static_assert(offsetof(CS2::particles::C_OP_RenderGpuImplicit, m_hMaterial) == 0x648, "m_hMaterial in C_OP_RenderGpuImplicit should be at offset 0x648");
		static_assert(sizeof(CS2::particles::C_OP_RenderGpuImplicit) == 0x650, "C_OP_RenderGpuImplicit size should be 0x650");
	}
}
