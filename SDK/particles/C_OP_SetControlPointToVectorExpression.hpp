// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/particles/CParticleFunctionPreEmission.hpp>
#include <SDK/particles/VectorExpressionType_t.hpp>
#include <SDK/particleslib/CParticleCollectionVecInput.hpp>
#include <SDK/particleslib/CPerParticleFloatInput.hpp>





using namespace GlobalTypes;
namespace CS2 {
	namespace particles {
		class C_OP_SetControlPointToVectorExpression : public CS2::particles::CParticleFunctionPreEmission {
		public:
			particles::VectorExpressionType_t m_nExpression; // 0x1d8 | Schema_DeclaredEnum | Size: 0x4
			int32_t m_nOutputCP; // 0x1dc | Schema_Builtin | Size: 0x4
			particleslib::CParticleCollectionVecInput m_vInput1; // 0x1e0 | Schema_DeclaredClass | Size: 0x6b8
			particleslib::CParticleCollectionVecInput m_vInput2; // 0x898 | Schema_DeclaredClass | Size: 0x6b8
			particleslib::CPerParticleFloatInput m_flLerp; // 0xf50 | Schema_DeclaredClass | Size: 0x170
			bool m_bNormalizedOutput; // 0x10c0 | Schema_Builtin | Size: 0x1
			S2_PAD(0x7); // End padding
		};
		static_assert(offsetof(CS2::particles::C_OP_SetControlPointToVectorExpression, m_nExpression) == 0x1D8, "m_nExpression in C_OP_SetControlPointToVectorExpression should be at offset 0x1D8");
		static_assert(offsetof(CS2::particles::C_OP_SetControlPointToVectorExpression, m_nOutputCP) == 0x1DC, "m_nOutputCP in C_OP_SetControlPointToVectorExpression should be at offset 0x1DC");
		static_assert(offsetof(CS2::particles::C_OP_SetControlPointToVectorExpression, m_vInput1) == 0x1E0, "m_vInput1 in C_OP_SetControlPointToVectorExpression should be at offset 0x1E0");
		static_assert(offsetof(CS2::particles::C_OP_SetControlPointToVectorExpression, m_vInput2) == 0x898, "m_vInput2 in C_OP_SetControlPointToVectorExpression should be at offset 0x898");
		static_assert(offsetof(CS2::particles::C_OP_SetControlPointToVectorExpression, m_flLerp) == 0xF50, "m_flLerp in C_OP_SetControlPointToVectorExpression should be at offset 0xF50");
		static_assert(offsetof(CS2::particles::C_OP_SetControlPointToVectorExpression, m_bNormalizedOutput) == 0x10C0, "m_bNormalizedOutput in C_OP_SetControlPointToVectorExpression should be at offset 0x10C0");
		static_assert(sizeof(CS2::particles::C_OP_SetControlPointToVectorExpression) == 0x10C8, "C_OP_SetControlPointToVectorExpression size should be 0x10C8");
	}
}
