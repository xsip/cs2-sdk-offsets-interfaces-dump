// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <SDK/GlobalTypes.hpp>

#include <SDK/particles/CParticleFunctionOperator.hpp>
#include <SDK/particleslib/CParticleModelInput.hpp>
#include <SDK/particleslib/CParticleTransformInput.hpp>
#include <SDK/particles/HitboxLerpType_t.hpp>
#include <SDK/particleslib/CPerParticleFloatInput.hpp>



namespace CS2 {
	namespace particles {
		class C_OP_MoveToHitbox : public CS2::particles::CParticleFunctionOperator {
		public:
			particleslib::CParticleModelInput m_modelInput; // 0x1c0 | Schema_DeclaredClass | Size: 0x60
			particleslib::CParticleTransformInput m_transformInput; // 0x220 | Schema_DeclaredClass | Size: 0x68
			S2_PAD(0x4);
			float32 m_flLifeTimeLerpStart; // 0x28c | Schema_Builtin | Size: 0x4
			float32 m_flLifeTimeLerpEnd; // 0x290 | Schema_Builtin | Size: 0x4
			float32 m_flPrevPosScale; // 0x294 | Schema_Builtin | Size: 0x4
			char m_HitboxSetName[128]; // 0x298 | Schema_FixedArray | Size: 0x80
			bool m_bUseBones; // 0x318 | Schema_Builtin | Size: 0x1
			S2_PAD(0x3);
			particles::HitboxLerpType_t m_nLerpType; // 0x31c | Schema_DeclaredEnum | Size: 0x4
			particleslib::CPerParticleFloatInput m_flInterpolation; // 0x320 | Schema_DeclaredClass | Size: 0x160
		};
		static_assert(offsetof(CS2::particles::C_OP_MoveToHitbox, m_modelInput) == 0x1C0, "m_modelInput in C_OP_MoveToHitbox should be at offset 0x1C0");
		static_assert(offsetof(CS2::particles::C_OP_MoveToHitbox, m_transformInput) == 0x220, "m_transformInput in C_OP_MoveToHitbox should be at offset 0x220");
		static_assert(offsetof(CS2::particles::C_OP_MoveToHitbox, m_flLifeTimeLerpStart) == 0x28C, "m_flLifeTimeLerpStart in C_OP_MoveToHitbox should be at offset 0x28C");
		static_assert(offsetof(CS2::particles::C_OP_MoveToHitbox, m_flLifeTimeLerpEnd) == 0x290, "m_flLifeTimeLerpEnd in C_OP_MoveToHitbox should be at offset 0x290");
		static_assert(offsetof(CS2::particles::C_OP_MoveToHitbox, m_flPrevPosScale) == 0x294, "m_flPrevPosScale in C_OP_MoveToHitbox should be at offset 0x294");
		static_assert(offsetof(CS2::particles::C_OP_MoveToHitbox, m_HitboxSetName) == 0x298, "m_HitboxSetName in C_OP_MoveToHitbox should be at offset 0x298");
		static_assert(offsetof(CS2::particles::C_OP_MoveToHitbox, m_bUseBones) == 0x318, "m_bUseBones in C_OP_MoveToHitbox should be at offset 0x318");
		static_assert(offsetof(CS2::particles::C_OP_MoveToHitbox, m_nLerpType) == 0x31C, "m_nLerpType in C_OP_MoveToHitbox should be at offset 0x31C");
		static_assert(offsetof(CS2::particles::C_OP_MoveToHitbox, m_flInterpolation) == 0x320, "m_flInterpolation in C_OP_MoveToHitbox should be at offset 0x320");
		static_assert(sizeof(CS2::particles::C_OP_MoveToHitbox) == 0x480, "C_OP_MoveToHitbox size should be 0x480");
	}
}
