// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/particles/CParticleFunctionRenderer.hpp>
#include <SDK/particles/ParticleAttributeIndex_t.hpp>





using namespace GlobalTypes;
namespace CS2 {
	namespace particles {
		class C_OP_RenderSound : public CS2::particles::CParticleFunctionRenderer {
		public:
			float32 m_flDurationScale; // 0x220 | Schema_Builtin | Size: 0x4
			float32 m_flSndLvlScale; // 0x224 | Schema_Builtin | Size: 0x4
			float32 m_flPitchScale; // 0x228 | Schema_Builtin | Size: 0x4
			float32 m_flVolumeScale; // 0x22c | Schema_Builtin | Size: 0x4
			particles::ParticleAttributeIndex_t m_nSndLvlField; // 0x230 | Schema_DeclaredClass | Size: 0x4
			particles::ParticleAttributeIndex_t m_nDurationField; // 0x234 | Schema_DeclaredClass | Size: 0x4
			particles::ParticleAttributeIndex_t m_nPitchField; // 0x238 | Schema_DeclaredClass | Size: 0x4
			particles::ParticleAttributeIndex_t m_nVolumeField; // 0x23c | Schema_DeclaredClass | Size: 0x4
			int32_t m_nChannel; // 0x240 | Schema_Builtin | Size: 0x4
			int32_t m_nCPReference; // 0x244 | Schema_Builtin | Size: 0x4
			char m_pszSoundName[256]; // 0x248 | Schema_FixedArray | Size: 0x100
			bool m_bSuppressStopSoundEvent; // 0x348 | Schema_Builtin | Size: 0x1
			S2_PAD(0x7); // End padding
		};
		static_assert(offsetof(CS2::particles::C_OP_RenderSound, m_flDurationScale) == 0x220, "m_flDurationScale in C_OP_RenderSound should be at offset 0x220");
		static_assert(offsetof(CS2::particles::C_OP_RenderSound, m_flSndLvlScale) == 0x224, "m_flSndLvlScale in C_OP_RenderSound should be at offset 0x224");
		static_assert(offsetof(CS2::particles::C_OP_RenderSound, m_flPitchScale) == 0x228, "m_flPitchScale in C_OP_RenderSound should be at offset 0x228");
		static_assert(offsetof(CS2::particles::C_OP_RenderSound, m_flVolumeScale) == 0x22C, "m_flVolumeScale in C_OP_RenderSound should be at offset 0x22C");
		static_assert(offsetof(CS2::particles::C_OP_RenderSound, m_nSndLvlField) == 0x230, "m_nSndLvlField in C_OP_RenderSound should be at offset 0x230");
		static_assert(offsetof(CS2::particles::C_OP_RenderSound, m_nDurationField) == 0x234, "m_nDurationField in C_OP_RenderSound should be at offset 0x234");
		static_assert(offsetof(CS2::particles::C_OP_RenderSound, m_nPitchField) == 0x238, "m_nPitchField in C_OP_RenderSound should be at offset 0x238");
		static_assert(offsetof(CS2::particles::C_OP_RenderSound, m_nVolumeField) == 0x23C, "m_nVolumeField in C_OP_RenderSound should be at offset 0x23C");
		static_assert(offsetof(CS2::particles::C_OP_RenderSound, m_nChannel) == 0x240, "m_nChannel in C_OP_RenderSound should be at offset 0x240");
		static_assert(offsetof(CS2::particles::C_OP_RenderSound, m_nCPReference) == 0x244, "m_nCPReference in C_OP_RenderSound should be at offset 0x244");
		static_assert(offsetof(CS2::particles::C_OP_RenderSound, m_pszSoundName) == 0x248, "m_pszSoundName in C_OP_RenderSound should be at offset 0x248");
		static_assert(offsetof(CS2::particles::C_OP_RenderSound, m_bSuppressStopSoundEvent) == 0x348, "m_bSuppressStopSoundEvent in C_OP_RenderSound should be at offset 0x348");
		static_assert(sizeof(CS2::particles::C_OP_RenderSound) == 0x350, "C_OP_RenderSound size should be 0x350");
	}
}
