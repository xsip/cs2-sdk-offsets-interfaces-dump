// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <SDK/GlobalTypes.hpp>




namespace CS2 {
	namespace particles {
		class CParticleVisibilityInputs  {
		public:
			float32 m_flCameraBias; // 0x0 | Schema_Builtin | Size: 0x4
			int32_t m_nCPin; // 0x4 | Schema_Builtin | Size: 0x4
			float32 m_flProxyRadius; // 0x8 | Schema_Builtin | Size: 0x4
			float32 m_flInputMin; // 0xc | Schema_Builtin | Size: 0x4
			float32 m_flInputMax; // 0x10 | Schema_Builtin | Size: 0x4
			float32 m_flInputPixelVisFade; // 0x14 | Schema_Builtin | Size: 0x4
			float32 m_flNoPixelVisibilityFallback; // 0x18 | Schema_Builtin | Size: 0x4
			float32 m_flDistanceInputMin; // 0x1c | Schema_Builtin | Size: 0x4
			float32 m_flDistanceInputMax; // 0x20 | Schema_Builtin | Size: 0x4
			float32 m_flDotInputMin; // 0x24 | Schema_Builtin | Size: 0x4
			float32 m_flDotInputMax; // 0x28 | Schema_Builtin | Size: 0x4
			bool m_bDotCPAngles; // 0x2c | Schema_Builtin | Size: 0x1
			bool m_bDotCameraAngles; // 0x2d | Schema_Builtin | Size: 0x1
			S2_PAD(0x2);
			float32 m_flAlphaScaleMin; // 0x30 | Schema_Builtin | Size: 0x4
			float32 m_flAlphaScaleMax; // 0x34 | Schema_Builtin | Size: 0x4
			float32 m_flRadiusScaleMin; // 0x38 | Schema_Builtin | Size: 0x4
			float32 m_flRadiusScaleMax; // 0x3c | Schema_Builtin | Size: 0x4
			float32 m_flRadiusScaleFOVBase; // 0x40 | Schema_Builtin | Size: 0x4
			bool m_bRightEye; // 0x44 | Schema_Builtin | Size: 0x1
			S2_PAD(0x3); // End padding
		};
		static_assert(offsetof(CS2::particles::CParticleVisibilityInputs, m_flCameraBias) == 0x0, "m_flCameraBias in CParticleVisibilityInputs should be at offset 0x0");
		static_assert(offsetof(CS2::particles::CParticleVisibilityInputs, m_nCPin) == 0x4, "m_nCPin in CParticleVisibilityInputs should be at offset 0x4");
		static_assert(offsetof(CS2::particles::CParticleVisibilityInputs, m_flProxyRadius) == 0x8, "m_flProxyRadius in CParticleVisibilityInputs should be at offset 0x8");
		static_assert(offsetof(CS2::particles::CParticleVisibilityInputs, m_flInputMin) == 0xC, "m_flInputMin in CParticleVisibilityInputs should be at offset 0xC");
		static_assert(offsetof(CS2::particles::CParticleVisibilityInputs, m_flInputMax) == 0x10, "m_flInputMax in CParticleVisibilityInputs should be at offset 0x10");
		static_assert(offsetof(CS2::particles::CParticleVisibilityInputs, m_flInputPixelVisFade) == 0x14, "m_flInputPixelVisFade in CParticleVisibilityInputs should be at offset 0x14");
		static_assert(offsetof(CS2::particles::CParticleVisibilityInputs, m_flNoPixelVisibilityFallback) == 0x18, "m_flNoPixelVisibilityFallback in CParticleVisibilityInputs should be at offset 0x18");
		static_assert(offsetof(CS2::particles::CParticleVisibilityInputs, m_flDistanceInputMin) == 0x1C, "m_flDistanceInputMin in CParticleVisibilityInputs should be at offset 0x1C");
		static_assert(offsetof(CS2::particles::CParticleVisibilityInputs, m_flDistanceInputMax) == 0x20, "m_flDistanceInputMax in CParticleVisibilityInputs should be at offset 0x20");
		static_assert(offsetof(CS2::particles::CParticleVisibilityInputs, m_flDotInputMin) == 0x24, "m_flDotInputMin in CParticleVisibilityInputs should be at offset 0x24");
		static_assert(offsetof(CS2::particles::CParticleVisibilityInputs, m_flDotInputMax) == 0x28, "m_flDotInputMax in CParticleVisibilityInputs should be at offset 0x28");
		static_assert(offsetof(CS2::particles::CParticleVisibilityInputs, m_bDotCPAngles) == 0x2C, "m_bDotCPAngles in CParticleVisibilityInputs should be at offset 0x2C");
		static_assert(offsetof(CS2::particles::CParticleVisibilityInputs, m_bDotCameraAngles) == 0x2D, "m_bDotCameraAngles in CParticleVisibilityInputs should be at offset 0x2D");
		static_assert(offsetof(CS2::particles::CParticleVisibilityInputs, m_flAlphaScaleMin) == 0x30, "m_flAlphaScaleMin in CParticleVisibilityInputs should be at offset 0x30");
		static_assert(offsetof(CS2::particles::CParticleVisibilityInputs, m_flAlphaScaleMax) == 0x34, "m_flAlphaScaleMax in CParticleVisibilityInputs should be at offset 0x34");
		static_assert(offsetof(CS2::particles::CParticleVisibilityInputs, m_flRadiusScaleMin) == 0x38, "m_flRadiusScaleMin in CParticleVisibilityInputs should be at offset 0x38");
		static_assert(offsetof(CS2::particles::CParticleVisibilityInputs, m_flRadiusScaleMax) == 0x3C, "m_flRadiusScaleMax in CParticleVisibilityInputs should be at offset 0x3C");
		static_assert(offsetof(CS2::particles::CParticleVisibilityInputs, m_flRadiusScaleFOVBase) == 0x40, "m_flRadiusScaleFOVBase in CParticleVisibilityInputs should be at offset 0x40");
		static_assert(offsetof(CS2::particles::CParticleVisibilityInputs, m_bRightEye) == 0x44, "m_bRightEye in CParticleVisibilityInputs should be at offset 0x44");
		static_assert(sizeof(CS2::particles::CParticleVisibilityInputs) == 0x48, "CParticleVisibilityInputs size should be 0x48");
	}
}
