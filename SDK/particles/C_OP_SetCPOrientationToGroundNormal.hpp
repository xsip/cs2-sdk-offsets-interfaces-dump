// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/particles/CParticleFunctionOperator.hpp>
#include <SDK/particles/ParticleTraceSet_t.hpp>





using namespace GlobalTypes;
namespace CS2 {
	namespace particles {
		class C_OP_SetCPOrientationToGroundNormal : public CS2::particles::CParticleFunctionOperator {
		public:
			float32 m_flInterpRate; // 0x1d0 | Schema_Builtin | Size: 0x4
			float32 m_flMaxTraceLength; // 0x1d4 | Schema_Builtin | Size: 0x4
			float32 m_flTolerance; // 0x1d8 | Schema_Builtin | Size: 0x4
			float32 m_flTraceOffset; // 0x1dc | Schema_Builtin | Size: 0x4
			char m_CollisionGroupName[128]; // 0x1e0 | Schema_FixedArray | Size: 0x80
			particles::ParticleTraceSet_t m_nTraceSet; // 0x260 | Schema_DeclaredEnum | Size: 0x4
			int32_t m_nInputCP; // 0x264 | Schema_Builtin | Size: 0x4
			int32_t m_nOutputCP; // 0x268 | Schema_Builtin | Size: 0x4
			S2_PAD(0xc);
			bool m_bIncludeWater; // 0x278 | Schema_Builtin | Size: 0x1
			S2_PAD(0x7); // End padding
		};
		static_assert(offsetof(CS2::particles::C_OP_SetCPOrientationToGroundNormal, m_flInterpRate) == 0x1D0, "m_flInterpRate in C_OP_SetCPOrientationToGroundNormal should be at offset 0x1D0");
		static_assert(offsetof(CS2::particles::C_OP_SetCPOrientationToGroundNormal, m_flMaxTraceLength) == 0x1D4, "m_flMaxTraceLength in C_OP_SetCPOrientationToGroundNormal should be at offset 0x1D4");
		static_assert(offsetof(CS2::particles::C_OP_SetCPOrientationToGroundNormal, m_flTolerance) == 0x1D8, "m_flTolerance in C_OP_SetCPOrientationToGroundNormal should be at offset 0x1D8");
		static_assert(offsetof(CS2::particles::C_OP_SetCPOrientationToGroundNormal, m_flTraceOffset) == 0x1DC, "m_flTraceOffset in C_OP_SetCPOrientationToGroundNormal should be at offset 0x1DC");
		static_assert(offsetof(CS2::particles::C_OP_SetCPOrientationToGroundNormal, m_CollisionGroupName) == 0x1E0, "m_CollisionGroupName in C_OP_SetCPOrientationToGroundNormal should be at offset 0x1E0");
		static_assert(offsetof(CS2::particles::C_OP_SetCPOrientationToGroundNormal, m_nTraceSet) == 0x260, "m_nTraceSet in C_OP_SetCPOrientationToGroundNormal should be at offset 0x260");
		static_assert(offsetof(CS2::particles::C_OP_SetCPOrientationToGroundNormal, m_nInputCP) == 0x264, "m_nInputCP in C_OP_SetCPOrientationToGroundNormal should be at offset 0x264");
		static_assert(offsetof(CS2::particles::C_OP_SetCPOrientationToGroundNormal, m_nOutputCP) == 0x268, "m_nOutputCP in C_OP_SetCPOrientationToGroundNormal should be at offset 0x268");
		static_assert(offsetof(CS2::particles::C_OP_SetCPOrientationToGroundNormal, m_bIncludeWater) == 0x278, "m_bIncludeWater in C_OP_SetCPOrientationToGroundNormal should be at offset 0x278");
		static_assert(sizeof(CS2::particles::C_OP_SetCPOrientationToGroundNormal) == 0x280, "C_OP_SetCPOrientationToGroundNormal size should be 0x280");
	}
}
