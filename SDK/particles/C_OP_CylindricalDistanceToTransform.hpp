// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <SDK/GlobalTypes.hpp>

#include <SDK/particles/CParticleFunctionOperator.hpp>
#include <SDK/particles/ParticleAttributeIndex_t.hpp>
#include <SDK/particleslib/CPerParticleFloatInput.hpp>
#include <SDK/particleslib/CParticleTransformInput.hpp>
#include <SDK/particles/ParticleSetMethod_t.hpp>



namespace CS2 {
	namespace particles {
		class C_OP_CylindricalDistanceToTransform : public CS2::particles::CParticleFunctionOperator {
		public:
			particles::ParticleAttributeIndex_t m_nFieldOutput; // 0x1c0 | Schema_DeclaredClass | Size: 0x4
			S2_PAD(0x4);
			particleslib::CPerParticleFloatInput m_flInputMin; // 0x1c8 | Schema_DeclaredClass | Size: 0x160
			particleslib::CPerParticleFloatInput m_flInputMax; // 0x328 | Schema_DeclaredClass | Size: 0x160
			particleslib::CPerParticleFloatInput m_flOutputMin; // 0x488 | Schema_DeclaredClass | Size: 0x160
			particleslib::CPerParticleFloatInput m_flOutputMax; // 0x5e8 | Schema_DeclaredClass | Size: 0x160
			particleslib::CParticleTransformInput m_TransformStart; // 0x748 | Schema_DeclaredClass | Size: 0x68
			particleslib::CParticleTransformInput m_TransformEnd; // 0x7b0 | Schema_DeclaredClass | Size: 0x68
			particles::ParticleSetMethod_t m_nSetMethod; // 0x818 | Schema_DeclaredEnum | Size: 0x4
			bool m_bActiveRange; // 0x81c | Schema_Builtin | Size: 0x1
			bool m_bAdditive; // 0x81d | Schema_Builtin | Size: 0x1
			bool m_bCapsule; // 0x81e | Schema_Builtin | Size: 0x1
			S2_PAD(0x1); // End padding
		};
		static_assert(offsetof(CS2::particles::C_OP_CylindricalDistanceToTransform, m_nFieldOutput) == 0x1C0, "m_nFieldOutput in C_OP_CylindricalDistanceToTransform should be at offset 0x1C0");
		static_assert(offsetof(CS2::particles::C_OP_CylindricalDistanceToTransform, m_flInputMin) == 0x1C8, "m_flInputMin in C_OP_CylindricalDistanceToTransform should be at offset 0x1C8");
		static_assert(offsetof(CS2::particles::C_OP_CylindricalDistanceToTransform, m_flInputMax) == 0x328, "m_flInputMax in C_OP_CylindricalDistanceToTransform should be at offset 0x328");
		static_assert(offsetof(CS2::particles::C_OP_CylindricalDistanceToTransform, m_flOutputMin) == 0x488, "m_flOutputMin in C_OP_CylindricalDistanceToTransform should be at offset 0x488");
		static_assert(offsetof(CS2::particles::C_OP_CylindricalDistanceToTransform, m_flOutputMax) == 0x5E8, "m_flOutputMax in C_OP_CylindricalDistanceToTransform should be at offset 0x5E8");
		static_assert(offsetof(CS2::particles::C_OP_CylindricalDistanceToTransform, m_TransformStart) == 0x748, "m_TransformStart in C_OP_CylindricalDistanceToTransform should be at offset 0x748");
		static_assert(offsetof(CS2::particles::C_OP_CylindricalDistanceToTransform, m_TransformEnd) == 0x7B0, "m_TransformEnd in C_OP_CylindricalDistanceToTransform should be at offset 0x7B0");
		static_assert(offsetof(CS2::particles::C_OP_CylindricalDistanceToTransform, m_nSetMethod) == 0x818, "m_nSetMethod in C_OP_CylindricalDistanceToTransform should be at offset 0x818");
		static_assert(offsetof(CS2::particles::C_OP_CylindricalDistanceToTransform, m_bActiveRange) == 0x81C, "m_bActiveRange in C_OP_CylindricalDistanceToTransform should be at offset 0x81C");
		static_assert(offsetof(CS2::particles::C_OP_CylindricalDistanceToTransform, m_bAdditive) == 0x81D, "m_bAdditive in C_OP_CylindricalDistanceToTransform should be at offset 0x81D");
		static_assert(offsetof(CS2::particles::C_OP_CylindricalDistanceToTransform, m_bCapsule) == 0x81E, "m_bCapsule in C_OP_CylindricalDistanceToTransform should be at offset 0x81E");
		static_assert(sizeof(CS2::particles::C_OP_CylindricalDistanceToTransform) == 0x820, "C_OP_CylindricalDistanceToTransform size should be 0x820");
	}
}
