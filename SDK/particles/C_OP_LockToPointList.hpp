// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <SDK/GlobalTypes.hpp>

#include <SDK/particles/CParticleFunctionOperator.hpp>
#include <SDK/particles/ParticleAttributeIndex_t.hpp>



namespace CS2 {
	namespace particles {
		class C_OP_LockToPointList : public CS2::particles::CParticleFunctionOperator {
		public:
			particles::ParticleAttributeIndex_t m_nFieldOutput; // 0x1c0 | Schema_DeclaredClass | Size: 0x4
			S2_PAD(0x4);
			// GlobalTypes::CUtlVector< particles::PointDefinition_t > m_pointList; // 0x1c8 | Schema_Atomic | Size: 0x18
			char  m_pointList[0x18]; // 0x1c8 | Schema_Atomic | Size: 0x18
			bool m_bPlaceAlongPath; // 0x1e0 | Schema_Builtin | Size: 0x1
			bool m_bClosedLoop; // 0x1e1 | Schema_Builtin | Size: 0x1
			S2_PAD(0x2);
			int32_t m_nNumPointsAlongPath; // 0x1e4 | Schema_Builtin | Size: 0x4
		};
		static_assert(offsetof(CS2::particles::C_OP_LockToPointList, m_nFieldOutput) == 0x1C0, "m_nFieldOutput in C_OP_LockToPointList should be at offset 0x1C0");
		static_assert(offsetof(CS2::particles::C_OP_LockToPointList, m_pointList) == 0x1C8, "m_pointList in C_OP_LockToPointList should be at offset 0x1C8");
		static_assert(offsetof(CS2::particles::C_OP_LockToPointList, m_bPlaceAlongPath) == 0x1E0, "m_bPlaceAlongPath in C_OP_LockToPointList should be at offset 0x1E0");
		static_assert(offsetof(CS2::particles::C_OP_LockToPointList, m_bClosedLoop) == 0x1E1, "m_bClosedLoop in C_OP_LockToPointList should be at offset 0x1E1");
		static_assert(offsetof(CS2::particles::C_OP_LockToPointList, m_nNumPointsAlongPath) == 0x1E4, "m_nNumPointsAlongPath in C_OP_LockToPointList should be at offset 0x1E4");
		static_assert(sizeof(CS2::particles::C_OP_LockToPointList) == 0x1E8, "C_OP_LockToPointList size should be 0x1E8");
	}
}
