// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/particles/CParticleFunctionOperator.hpp>
#include <SDK/particleslib/CPerParticleFloatInput.hpp>
#include <SDK/particles/ParticleAttributeIndex_t.hpp>
#include <SDK/particles/ParticleSetMethod_t.hpp>





using namespace GlobalTypes;
namespace CS2 {
	namespace particles {
		class C_OP_SetFloat : public CS2::particles::CParticleFunctionOperator {
		public:
			particleslib::CPerParticleFloatInput m_InputValue; // 0x1d0 | Schema_DeclaredClass | Size: 0x170
			particles::ParticleAttributeIndex_t m_nOutputField; // 0x340 | Schema_DeclaredClass | Size: 0x4
			particles::ParticleSetMethod_t m_nSetMethod; // 0x344 | Schema_DeclaredEnum | Size: 0x4
			particleslib::CPerParticleFloatInput m_Lerp; // 0x348 | Schema_DeclaredClass | Size: 0x170
			S2_PAD(0x28); // End padding
		};
		static_assert(offsetof(CS2::particles::C_OP_SetFloat, m_InputValue) == 0x1D0, "m_InputValue in C_OP_SetFloat should be at offset 0x1D0");
		static_assert(offsetof(CS2::particles::C_OP_SetFloat, m_nOutputField) == 0x340, "m_nOutputField in C_OP_SetFloat should be at offset 0x340");
		static_assert(offsetof(CS2::particles::C_OP_SetFloat, m_nSetMethod) == 0x344, "m_nSetMethod in C_OP_SetFloat should be at offset 0x344");
		static_assert(offsetof(CS2::particles::C_OP_SetFloat, m_Lerp) == 0x348, "m_Lerp in C_OP_SetFloat should be at offset 0x348");
		static_assert(sizeof(CS2::particles::C_OP_SetFloat) == 0x4E0, "C_OP_SetFloat size should be 0x4E0");
	}
}
