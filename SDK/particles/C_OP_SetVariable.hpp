// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/particles/CParticleFunctionPreEmission.hpp>
#include <SDK/particleslib/CParticleVariableRef.hpp>
#include <SDK/particleslib/CParticleTransformInput.hpp>
#include <SDK/particleslib/CParticleCollectionVecInput.hpp>
#include <SDK/particleslib/CParticleCollectionFloatInput.hpp>



namespace CS2 {
	namespace particles {
		class C_OP_SetVariable : public CS2::particles::CParticleFunctionPreEmission {
		public:
			particleslib::CParticleVariableRef m_variableReference; // 0x1d8 | Schema_DeclaredClass | Size: 0x50
			particleslib::CParticleTransformInput m_transformInput; // 0x228 | Schema_DeclaredClass | Size: 0x68
			GlobalTypes::Vector m_positionOffset; // 0x290 | Schema_Atomic | Size: 0xc
			GlobalTypes::QAngle m_rotationOffset; // 0x29c | Schema_Atomic | Size: 0xc
			particleslib::CParticleCollectionVecInput m_vecInput; // 0x2a8 | Schema_DeclaredClass | Size: 0x6b8
			particleslib::CParticleCollectionFloatInput m_floatInput; // 0x960 | Schema_DeclaredClass | Size: 0x170
		};
		static_assert(offsetof(CS2::particles::C_OP_SetVariable, m_variableReference) == 0x1D8, "m_variableReference in C_OP_SetVariable should be at offset 0x1D8");
		static_assert(offsetof(CS2::particles::C_OP_SetVariable, m_transformInput) == 0x228, "m_transformInput in C_OP_SetVariable should be at offset 0x228");
		static_assert(offsetof(CS2::particles::C_OP_SetVariable, m_positionOffset) == 0x290, "m_positionOffset in C_OP_SetVariable should be at offset 0x290");
		static_assert(offsetof(CS2::particles::C_OP_SetVariable, m_rotationOffset) == 0x29C, "m_rotationOffset in C_OP_SetVariable should be at offset 0x29C");
		static_assert(offsetof(CS2::particles::C_OP_SetVariable, m_vecInput) == 0x2A8, "m_vecInput in C_OP_SetVariable should be at offset 0x2A8");
		static_assert(offsetof(CS2::particles::C_OP_SetVariable, m_floatInput) == 0x960, "m_floatInput in C_OP_SetVariable should be at offset 0x960");
		static_assert(sizeof(CS2::particles::C_OP_SetVariable) == 0xAD0, "C_OP_SetVariable size should be 0xAD0");
	}
}
