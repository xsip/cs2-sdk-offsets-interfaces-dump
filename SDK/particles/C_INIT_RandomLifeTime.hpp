// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <SDK/GlobalTypes.hpp>

#include <SDK/particles/CParticleFunctionInitializer.hpp>



namespace CS2 {
	namespace particles {
		class C_INIT_RandomLifeTime : public CS2::particles::CParticleFunctionInitializer {
		public:
			float32 m_fLifetimeMin; // 0x1c8 | Schema_Builtin | Size: 0x4
			float32 m_fLifetimeMax; // 0x1cc | Schema_Builtin | Size: 0x4
			float32 m_fLifetimeRandExponent; // 0x1d0 | Schema_Builtin | Size: 0x4
			S2_PAD(0x4); // End padding
		};
		static_assert(offsetof(CS2::particles::C_INIT_RandomLifeTime, m_fLifetimeMin) == 0x1C8, "m_fLifetimeMin in C_INIT_RandomLifeTime should be at offset 0x1C8");
		static_assert(offsetof(CS2::particles::C_INIT_RandomLifeTime, m_fLifetimeMax) == 0x1CC, "m_fLifetimeMax in C_INIT_RandomLifeTime should be at offset 0x1CC");
		static_assert(offsetof(CS2::particles::C_INIT_RandomLifeTime, m_fLifetimeRandExponent) == 0x1D0, "m_fLifetimeRandExponent in C_INIT_RandomLifeTime should be at offset 0x1D0");
		static_assert(sizeof(CS2::particles::C_INIT_RandomLifeTime) == 0x1D8, "C_INIT_RandomLifeTime size should be 0x1D8");
	}
}
