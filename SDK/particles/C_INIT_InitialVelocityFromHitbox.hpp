// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <SDK/GlobalTypes.hpp>

#include <SDK/particles/CParticleFunctionInitializer.hpp>



namespace CS2 {
	namespace particles {
		class C_INIT_InitialVelocityFromHitbox : public CS2::particles::CParticleFunctionInitializer {
		public:
			float32 m_flVelocityMin; // 0x1c8 | Schema_Builtin | Size: 0x4
			float32 m_flVelocityMax; // 0x1cc | Schema_Builtin | Size: 0x4
			int32_t m_nControlPointNumber; // 0x1d0 | Schema_Builtin | Size: 0x4
			char m_HitboxSetName[128]; // 0x1d4 | Schema_FixedArray | Size: 0x80
			bool m_bUseBones; // 0x254 | Schema_Builtin | Size: 0x1
			S2_PAD(0x3); // End padding
		};
		static_assert(offsetof(CS2::particles::C_INIT_InitialVelocityFromHitbox, m_flVelocityMin) == 0x1C8, "m_flVelocityMin in C_INIT_InitialVelocityFromHitbox should be at offset 0x1C8");
		static_assert(offsetof(CS2::particles::C_INIT_InitialVelocityFromHitbox, m_flVelocityMax) == 0x1CC, "m_flVelocityMax in C_INIT_InitialVelocityFromHitbox should be at offset 0x1CC");
		static_assert(offsetof(CS2::particles::C_INIT_InitialVelocityFromHitbox, m_nControlPointNumber) == 0x1D0, "m_nControlPointNumber in C_INIT_InitialVelocityFromHitbox should be at offset 0x1D0");
		static_assert(offsetof(CS2::particles::C_INIT_InitialVelocityFromHitbox, m_HitboxSetName) == 0x1D4, "m_HitboxSetName in C_INIT_InitialVelocityFromHitbox should be at offset 0x1D4");
		static_assert(offsetof(CS2::particles::C_INIT_InitialVelocityFromHitbox, m_bUseBones) == 0x254, "m_bUseBones in C_INIT_InitialVelocityFromHitbox should be at offset 0x254");
		static_assert(sizeof(CS2::particles::C_INIT_InitialVelocityFromHitbox) == 0x258, "C_INIT_InitialVelocityFromHitbox size should be 0x258");
	}
}
