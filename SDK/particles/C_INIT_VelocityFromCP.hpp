// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <SDK/GlobalTypes.hpp>

#include <SDK/particles/CParticleFunctionInitializer.hpp>
#include <SDK/particleslib/CParticleCollectionVecInput.hpp>
#include <SDK/particleslib/CParticleTransformInput.hpp>



namespace CS2 {
	namespace particles {
		class C_INIT_VelocityFromCP : public CS2::particles::CParticleFunctionInitializer {
		public:
			particleslib::CParticleCollectionVecInput m_velocityInput; // 0x1d8 | Schema_DeclaredClass | Size: 0x6b8
			particleslib::CParticleTransformInput m_transformInput; // 0x890 | Schema_DeclaredClass | Size: 0x68
			float32 m_flVelocityScale; // 0x8f8 | Schema_Builtin | Size: 0x4
			bool m_bDirectionOnly; // 0x8fc | Schema_Builtin | Size: 0x1
			S2_PAD(0x3); // End padding
		};
		static_assert(offsetof(CS2::particles::C_INIT_VelocityFromCP, m_velocityInput) == 0x1D8, "m_velocityInput in C_INIT_VelocityFromCP should be at offset 0x1D8");
		static_assert(offsetof(CS2::particles::C_INIT_VelocityFromCP, m_transformInput) == 0x890, "m_transformInput in C_INIT_VelocityFromCP should be at offset 0x890");
		static_assert(offsetof(CS2::particles::C_INIT_VelocityFromCP, m_flVelocityScale) == 0x8F8, "m_flVelocityScale in C_INIT_VelocityFromCP should be at offset 0x8F8");
		static_assert(offsetof(CS2::particles::C_INIT_VelocityFromCP, m_bDirectionOnly) == 0x8FC, "m_bDirectionOnly in C_INIT_VelocityFromCP should be at offset 0x8FC");
		static_assert(sizeof(CS2::particles::C_INIT_VelocityFromCP) == 0x900, "C_INIT_VelocityFromCP size should be 0x900");
	}
}
