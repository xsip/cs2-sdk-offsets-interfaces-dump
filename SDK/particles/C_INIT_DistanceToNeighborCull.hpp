// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/particles/CParticleFunctionInitializer.hpp>
#include <SDK/particleslib/CPerParticleFloatInput.hpp>
#include <SDK/particles/ParticleAttributeIndex_t.hpp>
#include <SDK/particles/ParticleSetMethod_t.hpp>





using namespace GlobalTypes;
namespace CS2 {
	namespace particles {
		class C_INIT_DistanceToNeighborCull : public CS2::particles::CParticleFunctionInitializer {
		public:
			particleslib::CPerParticleFloatInput m_flDistance; // 0x1d8 | Schema_DeclaredClass | Size: 0x170
			bool m_bIncludeRadii; // 0x348 | Schema_Builtin | Size: 0x1
			S2_PAD(0x7);
			particleslib::CPerParticleFloatInput m_flLifespanOverlap; // 0x350 | Schema_DeclaredClass | Size: 0x170
			particles::ParticleAttributeIndex_t m_nFieldModify; // 0x4c0 | Schema_DeclaredClass | Size: 0x4
			S2_PAD(0x4);
			particleslib::CPerParticleFloatInput m_flModify; // 0x4c8 | Schema_DeclaredClass | Size: 0x170
			particles::ParticleSetMethod_t m_nSetMethod; // 0x638 | Schema_DeclaredEnum | Size: 0x4
			bool m_bUseNeighbor; // 0x63c | Schema_Builtin | Size: 0x1
			S2_PAD(0x3); // End padding
		};
		static_assert(offsetof(CS2::particles::C_INIT_DistanceToNeighborCull, m_flDistance) == 0x1D8, "m_flDistance in C_INIT_DistanceToNeighborCull should be at offset 0x1D8");
		static_assert(offsetof(CS2::particles::C_INIT_DistanceToNeighborCull, m_bIncludeRadii) == 0x348, "m_bIncludeRadii in C_INIT_DistanceToNeighborCull should be at offset 0x348");
		static_assert(offsetof(CS2::particles::C_INIT_DistanceToNeighborCull, m_flLifespanOverlap) == 0x350, "m_flLifespanOverlap in C_INIT_DistanceToNeighborCull should be at offset 0x350");
		static_assert(offsetof(CS2::particles::C_INIT_DistanceToNeighborCull, m_nFieldModify) == 0x4C0, "m_nFieldModify in C_INIT_DistanceToNeighborCull should be at offset 0x4C0");
		static_assert(offsetof(CS2::particles::C_INIT_DistanceToNeighborCull, m_flModify) == 0x4C8, "m_flModify in C_INIT_DistanceToNeighborCull should be at offset 0x4C8");
		static_assert(offsetof(CS2::particles::C_INIT_DistanceToNeighborCull, m_nSetMethod) == 0x638, "m_nSetMethod in C_INIT_DistanceToNeighborCull should be at offset 0x638");
		static_assert(offsetof(CS2::particles::C_INIT_DistanceToNeighborCull, m_bUseNeighbor) == 0x63C, "m_bUseNeighbor in C_INIT_DistanceToNeighborCull should be at offset 0x63C");
		static_assert(sizeof(CS2::particles::C_INIT_DistanceToNeighborCull) == 0x640, "C_INIT_DistanceToNeighborCull size should be 0x640");
	}
}
