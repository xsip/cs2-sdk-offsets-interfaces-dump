// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <SDK/GlobalTypes.hpp>

#include <SDK/particles/CParticleFunctionPreEmission.hpp>
#include <SDK/particleslib/CParticleCollectionVecInput.hpp>
#include <SDK/particleslib/CParticleCollectionFloatInput.hpp>



namespace CS2 {
	namespace particles {
		class C_OP_SetControlPointRotation : public CS2::particles::CParticleFunctionPreEmission {
		public:
			particleslib::CParticleCollectionVecInput m_vecRotAxis; // 0x1c8 | Schema_DeclaredClass | Size: 0x678
			particleslib::CParticleCollectionFloatInput m_flRotRate; // 0x840 | Schema_DeclaredClass | Size: 0x160
			int32_t m_nCP; // 0x9a0 | Schema_Builtin | Size: 0x4
			int32_t m_nLocalCP; // 0x9a4 | Schema_Builtin | Size: 0x4
		};
		static_assert(offsetof(CS2::particles::C_OP_SetControlPointRotation, m_vecRotAxis) == 0x1C8, "m_vecRotAxis in C_OP_SetControlPointRotation should be at offset 0x1C8");
		static_assert(offsetof(CS2::particles::C_OP_SetControlPointRotation, m_flRotRate) == 0x840, "m_flRotRate in C_OP_SetControlPointRotation should be at offset 0x840");
		static_assert(offsetof(CS2::particles::C_OP_SetControlPointRotation, m_nCP) == 0x9A0, "m_nCP in C_OP_SetControlPointRotation should be at offset 0x9A0");
		static_assert(offsetof(CS2::particles::C_OP_SetControlPointRotation, m_nLocalCP) == 0x9A4, "m_nLocalCP in C_OP_SetControlPointRotation should be at offset 0x9A4");
		static_assert(sizeof(CS2::particles::C_OP_SetControlPointRotation) == 0x9A8, "C_OP_SetControlPointRotation size should be 0x9A8");
	}
}
