// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <SDK/GlobalTypes.hpp>

#include <SDK/particles/CParticleFunctionPreEmission.hpp>
#include <SDK/particleslib/CParticleCollectionFloatInput.hpp>



namespace CS2 {
	namespace particles {
		class C_OP_SetControlPointOrientation : public CS2::particles::CParticleFunctionPreEmission {
		public:
			bool m_bUseWorldLocation; // 0x1c8 | Schema_Builtin | Size: 0x1
			S2_PAD(0x1);
			bool m_bRandomize; // 0x1ca | Schema_Builtin | Size: 0x1
			bool m_bSetOnce; // 0x1cb | Schema_Builtin | Size: 0x1
			int32_t m_nCP; // 0x1cc | Schema_Builtin | Size: 0x4
			int32_t m_nHeadLocation; // 0x1d0 | Schema_Builtin | Size: 0x4
			GlobalTypes::QAngle m_vecRotation; // 0x1d4 | Schema_Atomic | Size: 0xc
			GlobalTypes::QAngle m_vecRotationB; // 0x1e0 | Schema_Atomic | Size: 0xc
			S2_PAD(0x4);
			particleslib::CParticleCollectionFloatInput m_flInterpolation; // 0x1f0 | Schema_DeclaredClass | Size: 0x160
		};
		static_assert(offsetof(CS2::particles::C_OP_SetControlPointOrientation, m_bUseWorldLocation) == 0x1C8, "m_bUseWorldLocation in C_OP_SetControlPointOrientation should be at offset 0x1C8");
		static_assert(offsetof(CS2::particles::C_OP_SetControlPointOrientation, m_bRandomize) == 0x1CA, "m_bRandomize in C_OP_SetControlPointOrientation should be at offset 0x1CA");
		static_assert(offsetof(CS2::particles::C_OP_SetControlPointOrientation, m_bSetOnce) == 0x1CB, "m_bSetOnce in C_OP_SetControlPointOrientation should be at offset 0x1CB");
		static_assert(offsetof(CS2::particles::C_OP_SetControlPointOrientation, m_nCP) == 0x1CC, "m_nCP in C_OP_SetControlPointOrientation should be at offset 0x1CC");
		static_assert(offsetof(CS2::particles::C_OP_SetControlPointOrientation, m_nHeadLocation) == 0x1D0, "m_nHeadLocation in C_OP_SetControlPointOrientation should be at offset 0x1D0");
		static_assert(offsetof(CS2::particles::C_OP_SetControlPointOrientation, m_vecRotation) == 0x1D4, "m_vecRotation in C_OP_SetControlPointOrientation should be at offset 0x1D4");
		static_assert(offsetof(CS2::particles::C_OP_SetControlPointOrientation, m_vecRotationB) == 0x1E0, "m_vecRotationB in C_OP_SetControlPointOrientation should be at offset 0x1E0");
		static_assert(offsetof(CS2::particles::C_OP_SetControlPointOrientation, m_flInterpolation) == 0x1F0, "m_flInterpolation in C_OP_SetControlPointOrientation should be at offset 0x1F0");
		static_assert(sizeof(CS2::particles::C_OP_SetControlPointOrientation) == 0x350, "C_OP_SetControlPointOrientation size should be 0x350");
	}
}
