// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <SDK/GlobalTypes.hpp>

#include <SDK/particles/CParticleFunctionPreEmission.hpp>
#include <SDK/particles/ParticleHitboxDataSelection_t.hpp>
#include <SDK/particleslib/CParticleCollectionFloatInput.hpp>
#include <SDK/particleslib/CParticleCollectionVecInput.hpp>



namespace CS2 {
	namespace particles {
		class C_OP_RemapAverageHitboxSpeedtoCP : public CS2::particles::CParticleFunctionPreEmission {
		public:
			int32_t m_nInControlPointNumber; // 0x1c8 | Schema_Builtin | Size: 0x4
			int32_t m_nOutControlPointNumber; // 0x1cc | Schema_Builtin | Size: 0x4
			int32_t m_nField; // 0x1d0 | Schema_Builtin | Size: 0x4
			particles::ParticleHitboxDataSelection_t m_nHitboxDataType; // 0x1d4 | Schema_DeclaredEnum | Size: 0x4
			particleslib::CParticleCollectionFloatInput m_flInputMin; // 0x1d8 | Schema_DeclaredClass | Size: 0x160
			particleslib::CParticleCollectionFloatInput m_flInputMax; // 0x338 | Schema_DeclaredClass | Size: 0x160
			particleslib::CParticleCollectionFloatInput m_flOutputMin; // 0x498 | Schema_DeclaredClass | Size: 0x160
			particleslib::CParticleCollectionFloatInput m_flOutputMax; // 0x5f8 | Schema_DeclaredClass | Size: 0x160
			int32_t m_nHeightControlPointNumber; // 0x758 | Schema_Builtin | Size: 0x4
			S2_PAD(0x4);
			particleslib::CParticleCollectionVecInput m_vecComparisonVelocity; // 0x760 | Schema_DeclaredClass | Size: 0x678
			char m_HitboxSetName[128]; // 0xdd8 | Schema_FixedArray | Size: 0x80
		};
		static_assert(offsetof(CS2::particles::C_OP_RemapAverageHitboxSpeedtoCP, m_nInControlPointNumber) == 0x1C8, "m_nInControlPointNumber in C_OP_RemapAverageHitboxSpeedtoCP should be at offset 0x1C8");
		static_assert(offsetof(CS2::particles::C_OP_RemapAverageHitboxSpeedtoCP, m_nOutControlPointNumber) == 0x1CC, "m_nOutControlPointNumber in C_OP_RemapAverageHitboxSpeedtoCP should be at offset 0x1CC");
		static_assert(offsetof(CS2::particles::C_OP_RemapAverageHitboxSpeedtoCP, m_nField) == 0x1D0, "m_nField in C_OP_RemapAverageHitboxSpeedtoCP should be at offset 0x1D0");
		static_assert(offsetof(CS2::particles::C_OP_RemapAverageHitboxSpeedtoCP, m_nHitboxDataType) == 0x1D4, "m_nHitboxDataType in C_OP_RemapAverageHitboxSpeedtoCP should be at offset 0x1D4");
		static_assert(offsetof(CS2::particles::C_OP_RemapAverageHitboxSpeedtoCP, m_flInputMin) == 0x1D8, "m_flInputMin in C_OP_RemapAverageHitboxSpeedtoCP should be at offset 0x1D8");
		static_assert(offsetof(CS2::particles::C_OP_RemapAverageHitboxSpeedtoCP, m_flInputMax) == 0x338, "m_flInputMax in C_OP_RemapAverageHitboxSpeedtoCP should be at offset 0x338");
		static_assert(offsetof(CS2::particles::C_OP_RemapAverageHitboxSpeedtoCP, m_flOutputMin) == 0x498, "m_flOutputMin in C_OP_RemapAverageHitboxSpeedtoCP should be at offset 0x498");
		static_assert(offsetof(CS2::particles::C_OP_RemapAverageHitboxSpeedtoCP, m_flOutputMax) == 0x5F8, "m_flOutputMax in C_OP_RemapAverageHitboxSpeedtoCP should be at offset 0x5F8");
		static_assert(offsetof(CS2::particles::C_OP_RemapAverageHitboxSpeedtoCP, m_nHeightControlPointNumber) == 0x758, "m_nHeightControlPointNumber in C_OP_RemapAverageHitboxSpeedtoCP should be at offset 0x758");
		static_assert(offsetof(CS2::particles::C_OP_RemapAverageHitboxSpeedtoCP, m_vecComparisonVelocity) == 0x760, "m_vecComparisonVelocity in C_OP_RemapAverageHitboxSpeedtoCP should be at offset 0x760");
		static_assert(offsetof(CS2::particles::C_OP_RemapAverageHitboxSpeedtoCP, m_HitboxSetName) == 0xDD8, "m_HitboxSetName in C_OP_RemapAverageHitboxSpeedtoCP should be at offset 0xDD8");
		static_assert(sizeof(CS2::particles::C_OP_RemapAverageHitboxSpeedtoCP) == 0xE58, "C_OP_RemapAverageHitboxSpeedtoCP size should be 0xE58");
	}
}
