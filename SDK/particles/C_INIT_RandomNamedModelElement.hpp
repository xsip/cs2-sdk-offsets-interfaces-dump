// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <SDK/GlobalTypes.hpp>

#include <SDK/particles/CParticleFunctionInitializer.hpp>
#include <SDK/particles/ParticleAttributeIndex_t.hpp>



namespace CS2 {
	namespace particles {
		class C_INIT_RandomNamedModelElement : public CS2::particles::CParticleFunctionInitializer {
		public:
			// GlobalTypes::CStrongHandle< resourcesystem::InfoForResourceTypeCModel > m_hModel; // 0x1d8 | Schema_Atomic | Size: 0x8
			char  m_hModel[0x8]; // 0x1d8 | Schema_Atomic | Size: 0x8
			// GlobalTypes::CUtlVector< GlobalTypes::CUtlString > m_names; // 0x1e0 | Schema_Atomic | Size: 0x18
			char  m_names[0x18]; // 0x1e0 | Schema_Atomic | Size: 0x18
			bool m_bShuffle; // 0x1f8 | Schema_Builtin | Size: 0x1
			bool m_bLinear; // 0x1f9 | Schema_Builtin | Size: 0x1
			bool m_bModelFromRenderer; // 0x1fa | Schema_Builtin | Size: 0x1
			S2_PAD(0x1);
			particles::ParticleAttributeIndex_t m_nFieldOutput; // 0x1fc | Schema_DeclaredClass | Size: 0x4
		};
		static_assert(offsetof(CS2::particles::C_INIT_RandomNamedModelElement, m_hModel) == 0x1D8, "m_hModel in C_INIT_RandomNamedModelElement should be at offset 0x1D8");
		static_assert(offsetof(CS2::particles::C_INIT_RandomNamedModelElement, m_names) == 0x1E0, "m_names in C_INIT_RandomNamedModelElement should be at offset 0x1E0");
		static_assert(offsetof(CS2::particles::C_INIT_RandomNamedModelElement, m_bShuffle) == 0x1F8, "m_bShuffle in C_INIT_RandomNamedModelElement should be at offset 0x1F8");
		static_assert(offsetof(CS2::particles::C_INIT_RandomNamedModelElement, m_bLinear) == 0x1F9, "m_bLinear in C_INIT_RandomNamedModelElement should be at offset 0x1F9");
		static_assert(offsetof(CS2::particles::C_INIT_RandomNamedModelElement, m_bModelFromRenderer) == 0x1FA, "m_bModelFromRenderer in C_INIT_RandomNamedModelElement should be at offset 0x1FA");
		static_assert(offsetof(CS2::particles::C_INIT_RandomNamedModelElement, m_nFieldOutput) == 0x1FC, "m_nFieldOutput in C_INIT_RandomNamedModelElement should be at offset 0x1FC");
		static_assert(sizeof(CS2::particles::C_INIT_RandomNamedModelElement) == 0x200, "C_INIT_RandomNamedModelElement size should be 0x200");
	}
}
