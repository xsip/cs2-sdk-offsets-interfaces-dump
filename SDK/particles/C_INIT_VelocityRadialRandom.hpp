// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <SDK/GlobalTypes.hpp>

#include <SDK/particles/CParticleFunctionInitializer.hpp>
#include <SDK/particleslib/CPerParticleFloatInput.hpp>



namespace CS2 {
	namespace particles {
		class C_INIT_VelocityRadialRandom : public CS2::particles::CParticleFunctionInitializer {
		public:
			int32_t m_nControlPointNumber; // 0x1c8 | Schema_Builtin | Size: 0x4
			S2_PAD(0x4);
			particleslib::CPerParticleFloatInput m_fSpeedMin; // 0x1d0 | Schema_DeclaredClass | Size: 0x160
			particleslib::CPerParticleFloatInput m_fSpeedMax; // 0x330 | Schema_DeclaredClass | Size: 0x160
			GlobalTypes::Vector m_vecLocalCoordinateSystemSpeedScale; // 0x490 | Schema_Atomic | Size: 0xc
			S2_PAD(0x1);
			bool m_bIgnoreDelta; // 0x49d | Schema_Builtin | Size: 0x1
			S2_PAD(0x2); // End padding
		};
		static_assert(offsetof(CS2::particles::C_INIT_VelocityRadialRandom, m_nControlPointNumber) == 0x1C8, "m_nControlPointNumber in C_INIT_VelocityRadialRandom should be at offset 0x1C8");
		static_assert(offsetof(CS2::particles::C_INIT_VelocityRadialRandom, m_fSpeedMin) == 0x1D0, "m_fSpeedMin in C_INIT_VelocityRadialRandom should be at offset 0x1D0");
		static_assert(offsetof(CS2::particles::C_INIT_VelocityRadialRandom, m_fSpeedMax) == 0x330, "m_fSpeedMax in C_INIT_VelocityRadialRandom should be at offset 0x330");
		static_assert(offsetof(CS2::particles::C_INIT_VelocityRadialRandom, m_vecLocalCoordinateSystemSpeedScale) == 0x490, "m_vecLocalCoordinateSystemSpeedScale in C_INIT_VelocityRadialRandom should be at offset 0x490");
		static_assert(offsetof(CS2::particles::C_INIT_VelocityRadialRandom, m_bIgnoreDelta) == 0x49D, "m_bIgnoreDelta in C_INIT_VelocityRadialRandom should be at offset 0x49D");
		static_assert(sizeof(CS2::particles::C_INIT_VelocityRadialRandom) == 0x4A0, "C_INIT_VelocityRadialRandom size should be 0x4A0");
	}
}
