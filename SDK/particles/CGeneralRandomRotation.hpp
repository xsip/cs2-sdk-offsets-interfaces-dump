// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#ifndef CUSTOM_GLOBAL_TYPES
	#include <SDK/GlobalTypes.hpp>
#else
	#include <Custom/GlobalTypes.hpp>
#endif


#include <SDK/particles/CParticleFunctionInitializer.hpp>
#include <SDK/particles/ParticleAttributeIndex_t.hpp>





using namespace GlobalTypes;
namespace CS2 {
	namespace particles {
		class CGeneralRandomRotation : public CS2::particles::CParticleFunctionInitializer {
		public:
			particles::ParticleAttributeIndex_t m_nFieldOutput; // 0x1d8 | Schema_DeclaredClass | Size: 0x4
			float32 m_flDegrees; // 0x1dc | Schema_Builtin | Size: 0x4
			float32 m_flDegreesMin; // 0x1e0 | Schema_Builtin | Size: 0x4
			float32 m_flDegreesMax; // 0x1e4 | Schema_Builtin | Size: 0x4
			float32 m_flRotationRandExponent; // 0x1e8 | Schema_Builtin | Size: 0x4
			bool m_bRandomlyFlipDirection; // 0x1ec | Schema_Builtin | Size: 0x1
			S2_PAD(0xb); // End padding
		};
		static_assert(offsetof(CS2::particles::CGeneralRandomRotation, m_nFieldOutput) == 0x1D8, "m_nFieldOutput in CGeneralRandomRotation should be at offset 0x1D8");
		static_assert(offsetof(CS2::particles::CGeneralRandomRotation, m_flDegrees) == 0x1DC, "m_flDegrees in CGeneralRandomRotation should be at offset 0x1DC");
		static_assert(offsetof(CS2::particles::CGeneralRandomRotation, m_flDegreesMin) == 0x1E0, "m_flDegreesMin in CGeneralRandomRotation should be at offset 0x1E0");
		static_assert(offsetof(CS2::particles::CGeneralRandomRotation, m_flDegreesMax) == 0x1E4, "m_flDegreesMax in CGeneralRandomRotation should be at offset 0x1E4");
		static_assert(offsetof(CS2::particles::CGeneralRandomRotation, m_flRotationRandExponent) == 0x1E8, "m_flRotationRandExponent in CGeneralRandomRotation should be at offset 0x1E8");
		static_assert(offsetof(CS2::particles::CGeneralRandomRotation, m_bRandomlyFlipDirection) == 0x1EC, "m_bRandomlyFlipDirection in CGeneralRandomRotation should be at offset 0x1EC");
		static_assert(sizeof(CS2::particles::CGeneralRandomRotation) == 0x1F8, "CGeneralRandomRotation size should be 0x1F8");
	}
}
