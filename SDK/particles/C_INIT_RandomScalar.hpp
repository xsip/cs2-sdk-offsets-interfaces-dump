// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <SDK/GlobalTypes.hpp>

#include <SDK/particles/CParticleFunctionInitializer.hpp>
#include <SDK/particles/ParticleAttributeIndex_t.hpp>



namespace CS2 {
	namespace particles {
		class C_INIT_RandomScalar : public CS2::particles::CParticleFunctionInitializer {
		public:
			float32 m_flMin; // 0x1c8 | Schema_Builtin | Size: 0x4
			float32 m_flMax; // 0x1cc | Schema_Builtin | Size: 0x4
			float32 m_flExponent; // 0x1d0 | Schema_Builtin | Size: 0x4
			particles::ParticleAttributeIndex_t m_nFieldOutput; // 0x1d4 | Schema_DeclaredClass | Size: 0x4
		};
		static_assert(offsetof(CS2::particles::C_INIT_RandomScalar, m_flMin) == 0x1C8, "m_flMin in C_INIT_RandomScalar should be at offset 0x1C8");
		static_assert(offsetof(CS2::particles::C_INIT_RandomScalar, m_flMax) == 0x1CC, "m_flMax in C_INIT_RandomScalar should be at offset 0x1CC");
		static_assert(offsetof(CS2::particles::C_INIT_RandomScalar, m_flExponent) == 0x1D0, "m_flExponent in C_INIT_RandomScalar should be at offset 0x1D0");
		static_assert(offsetof(CS2::particles::C_INIT_RandomScalar, m_nFieldOutput) == 0x1D4, "m_nFieldOutput in C_INIT_RandomScalar should be at offset 0x1D4");
		static_assert(sizeof(CS2::particles::C_INIT_RandomScalar) == 0x1D8, "C_INIT_RandomScalar size should be 0x1D8");
	}
}
