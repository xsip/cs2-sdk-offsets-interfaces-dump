// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <SDK/GlobalTypes.hpp>

#include <SDK/particles/CParticleFunctionOperator.hpp>
#include <SDK/particles/ParticleAttributeIndex_t.hpp>



namespace CS2 {
	namespace particles {
		class C_OP_RampScalarLinearSimple : public CS2::particles::CParticleFunctionOperator {
		public:
			float32 m_Rate; // 0x1c0 | Schema_Builtin | Size: 0x4
			float32 m_flStartTime; // 0x1c4 | Schema_Builtin | Size: 0x4
			float32 m_flEndTime; // 0x1c8 | Schema_Builtin | Size: 0x4
			S2_PAD(0x24);
			particles::ParticleAttributeIndex_t m_nField; // 0x1f0 | Schema_DeclaredClass | Size: 0x4
			S2_PAD(0xc); // End padding
		};
		static_assert(offsetof(CS2::particles::C_OP_RampScalarLinearSimple, m_Rate) == 0x1C0, "m_Rate in C_OP_RampScalarLinearSimple should be at offset 0x1C0");
		static_assert(offsetof(CS2::particles::C_OP_RampScalarLinearSimple, m_flStartTime) == 0x1C4, "m_flStartTime in C_OP_RampScalarLinearSimple should be at offset 0x1C4");
		static_assert(offsetof(CS2::particles::C_OP_RampScalarLinearSimple, m_flEndTime) == 0x1C8, "m_flEndTime in C_OP_RampScalarLinearSimple should be at offset 0x1C8");
		static_assert(offsetof(CS2::particles::C_OP_RampScalarLinearSimple, m_nField) == 0x1F0, "m_nField in C_OP_RampScalarLinearSimple should be at offset 0x1F0");
		static_assert(sizeof(CS2::particles::C_OP_RampScalarLinearSimple) == 0x200, "C_OP_RampScalarLinearSimple size should be 0x200");
	}
}
