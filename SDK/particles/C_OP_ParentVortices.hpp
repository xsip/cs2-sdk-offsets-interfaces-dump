// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <SDK/GlobalTypes.hpp>

#include <SDK/particles/CParticleFunctionForce.hpp>



namespace CS2 {
	namespace particles {
		class C_OP_ParentVortices : public CS2::particles::CParticleFunctionForce {
		public:
			float32 m_flForceScale; // 0x1d0 | Schema_Builtin | Size: 0x4
			GlobalTypes::Vector m_vecTwistAxis; // 0x1d4 | Schema_Atomic | Size: 0xc
			bool m_bFlipBasedOnYaw; // 0x1e0 | Schema_Builtin | Size: 0x1
			S2_PAD(0x7); // End padding
		};
		static_assert(offsetof(CS2::particles::C_OP_ParentVortices, m_flForceScale) == 0x1D0, "m_flForceScale in C_OP_ParentVortices should be at offset 0x1D0");
		static_assert(offsetof(CS2::particles::C_OP_ParentVortices, m_vecTwistAxis) == 0x1D4, "m_vecTwistAxis in C_OP_ParentVortices should be at offset 0x1D4");
		static_assert(offsetof(CS2::particles::C_OP_ParentVortices, m_bFlipBasedOnYaw) == 0x1E0, "m_bFlipBasedOnYaw in C_OP_ParentVortices should be at offset 0x1E0");
		static_assert(sizeof(CS2::particles::C_OP_ParentVortices) == 0x1E8, "C_OP_ParentVortices size should be 0x1E8");
	}
}
