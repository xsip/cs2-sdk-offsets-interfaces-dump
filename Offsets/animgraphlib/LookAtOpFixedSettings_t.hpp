// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace animgraphlib {
			// Class size: 0xD0
			namespace LookAtOpFixedSettings_t /**/ {
				constexpr std::ptrdiff_t m_attachment = 0x0; // modellib::CAnimAttachment m_attachment; |  Schema_DeclaredClass | Size: 0x80
				constexpr std::ptrdiff_t m_damping = 0x80; // animgraphlib::CAnimInputDamping m_damping; |  Schema_DeclaredClass | Size: 0x18
				constexpr std::ptrdiff_t m_bones = 0x98; // GlobalTypes::CUtlVector< animgraphlib::LookAtBone_t > m_bones; |  Schema_Atomic | Size: 0x18
				constexpr std::ptrdiff_t m_flYawLimit = 0xb0; // float32 m_flYawLimit; |  0xb0 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flPitchLimit = 0xb4; // float32 m_flPitchLimit; |  0xb4 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flHysteresisInnerAngle = 0xb8; // float32 m_flHysteresisInnerAngle; |  0xb8 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flHysteresisOuterAngle = 0xbc; // float32 m_flHysteresisOuterAngle; |  0xbc | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_bRotateYawForward = 0xc0; // bool m_bRotateYawForward; |  0xc0 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bMaintainUpDirection = 0xc1; // bool m_bMaintainUpDirection; |  0xc1 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bTargetIsPosition = 0xc2; // bool m_bTargetIsPosition; |  0xc2 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bUseHysteresis = 0xc3; // bool m_bUseHysteresis; |  0xc3 | Schema_Builtin | Size: 0x1
			}
		}
	}
}
