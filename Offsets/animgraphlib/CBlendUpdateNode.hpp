// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace animgraphlib {
			// Class size: 0xE0
			namespace CBlendUpdateNode /*: public CS2::animgraphlib::CAnimUpdateNodeBase*/ {
				constexpr std::ptrdiff_t m_children = 0x60; // GlobalTypes::CUtlVector<animgraphlib::CAnimUpdateNodeRef>  | Schema_Atomic | Size: 0x18
				constexpr std::ptrdiff_t m_sortedOrder = 0x78; // GlobalTypes::CUtlVector  | Schema_Atomic | Size: 0x18
				constexpr std::ptrdiff_t m_targetValues = 0x90; // GlobalTypes::CUtlVector  | Schema_Atomic | Size: 0x18
				constexpr std::ptrdiff_t m_blendValueSource = 0xac; // animgraphlib::AnimValueSource  | Schema_DeclaredEnum | Size: 0x4
				constexpr std::ptrdiff_t m_eLinearRootMotionBlendMode = 0xb0; // animgraphlib::LinearRootMotionBlendMode_t  | Schema_DeclaredEnum | Size: 0x4
				constexpr std::ptrdiff_t m_paramIndex = 0xb4; // animgraphlib::CAnimParamHandle  | Schema_DeclaredClass | Size: 0x2
				constexpr std::ptrdiff_t m_damping = 0xb8; // animgraphlib::CAnimInputDamping  | Schema_DeclaredClass | Size: 0x18
				constexpr std::ptrdiff_t m_blendKeyType = 0xd0; // animgraphlib::BlendKeyType  | Schema_DeclaredEnum | Size: 0x4
				constexpr std::ptrdiff_t m_bLockBlendOnReset = 0xd4; // bool m_bLockBlendOnReset; |  0xd4 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bSyncCycles = 0xd5; // bool m_bSyncCycles; |  0xd5 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bLoop = 0xd6; // bool m_bLoop; |  0xd6 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bLockWhenWaning = 0xd7; // bool m_bLockWhenWaning; |  0xd7 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bIsAngle = 0xd8; // bool m_bIsAngle; |  0xd8 | Schema_Builtin | Size: 0x1
			}
		}
	}
}
