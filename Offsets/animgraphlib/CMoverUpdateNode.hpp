// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace animgraphlib {
			// Class size: 0xB0
			namespace CMoverUpdateNode /*: public CS2::animgraphlib::CUnaryUpdateNode*/ {
				constexpr std::ptrdiff_t m_damping = 0x78; // animgraphlib::CAnimInputDamping m_damping; |  Schema_DeclaredClass | Size: 0x18
				constexpr std::ptrdiff_t m_facingTarget = 0x90; // animgraphlib::AnimValueSource m_facingTarget; |  Schema_DeclaredEnum | Size: 0x4
				constexpr std::ptrdiff_t m_hMoveVecParam = 0x94; // animgraphlib::CAnimParamHandle m_hMoveVecParam; |  Schema_DeclaredClass | Size: 0x2
				constexpr std::ptrdiff_t m_hMoveHeadingParam = 0x96; // animgraphlib::CAnimParamHandle m_hMoveHeadingParam; |  Schema_DeclaredClass | Size: 0x2
				constexpr std::ptrdiff_t m_hTurnToFaceParam = 0x98; // animgraphlib::CAnimParamHandle m_hTurnToFaceParam; |  Schema_DeclaredClass | Size: 0x2
				constexpr std::ptrdiff_t m_flTurnToFaceOffset = 0x9c; // float32 m_flTurnToFaceOffset; |  0x9c | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flTurnToFaceLimit = 0xa0; // float32 m_flTurnToFaceLimit; |  0xa0 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_bAdditive = 0xa4; // bool m_bAdditive; |  0xa4 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bApplyMovement = 0xa5; // bool m_bApplyMovement; |  0xa5 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bOrientMovement = 0xa6; // bool m_bOrientMovement; |  0xa6 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bApplyRotation = 0xa7; // bool m_bApplyRotation; |  0xa7 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bLimitOnly = 0xa8; // bool m_bLimitOnly; |  0xa8 | Schema_Builtin | Size: 0x1
			}
		}
	}
}
