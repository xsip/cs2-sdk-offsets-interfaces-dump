// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace server {
			// Class size: 0x4F8
			namespace CLogicRelay /*: public CS2::server::CLogicalEntity*/ {
				constexpr std::ptrdiff_t m_bDisabled = 0x4f0; // bool m_bDisabled; |  0x4f0 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bWaitForRefire = 0x4f1; // bool m_bWaitForRefire; |  0x4f1 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bTriggerOnce = 0x4f2; // bool m_bTriggerOnce; |  0x4f2 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bFastRetrigger = 0x4f3; // bool m_bFastRetrigger; |  0x4f3 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bPassthoughCaller = 0x4f4; // bool m_bPassthoughCaller; |  0x4f4 | Schema_Builtin | Size: 0x1
			}
		}
	}
}
