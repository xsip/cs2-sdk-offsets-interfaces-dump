// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace server {
			// Class size: 0x540
			namespace CEnvCubemapFog /*: public CS2::server::CBaseEntity*/ {
				constexpr std::ptrdiff_t m_flEndDistance = 0x4f0; // float32 m_flEndDistance; |  0x4f0 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flStartDistance = 0x4f4; // float32 m_flStartDistance; |  0x4f4 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flFogFalloffExponent = 0x4f8; // float32 m_flFogFalloffExponent; |  0x4f8 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_bHeightFogEnabled = 0x4fc; // bool m_bHeightFogEnabled; |  0x4fc | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_flFogHeightWidth = 0x500; // float32 m_flFogHeightWidth; |  0x500 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flFogHeightEnd = 0x504; // float32 m_flFogHeightEnd; |  0x504 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flFogHeightStart = 0x508; // float32 m_flFogHeightStart; |  0x508 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flFogHeightExponent = 0x50c; // float32 m_flFogHeightExponent; |  0x50c | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flLODBias = 0x510; // float32 m_flLODBias; |  0x510 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_bActive = 0x514; // bool m_bActive; |  0x514 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bStartDisabled = 0x515; // bool m_bStartDisabled; |  0x515 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_flFogMaxOpacity = 0x518; // float32 m_flFogMaxOpacity; |  0x518 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nCubemapSourceType = 0x51c; // int32_t m_nCubemapSourceType; |  0x51c | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_hSkyMaterial = 0x520; // GlobalTypes::CStrongHandle< resourcesystem::InfoForResourceTypeIMaterial2 > m_hSkyMaterial; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_iszSkyEntity = 0x528; // GlobalTypes::CUtlSymbolLarge m_iszSkyEntity; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_hFogCubemapTexture = 0x530; // GlobalTypes::CStrongHandle< resourcesystem::InfoForResourceTypeCTextureBase > m_hFogCubemapTexture; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_bHasHeightFogEnd = 0x538; // bool m_bHasHeightFogEnd; |  0x538 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bFirstTime = 0x539; // bool m_bFirstTime; |  0x539 | Schema_Builtin | Size: 0x1
			}
		}
	}
}
