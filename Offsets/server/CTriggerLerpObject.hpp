// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace server {
			// Class size: 0xA90
			namespace CTriggerLerpObject /*: public CS2::server::CBaseTrigger*/ {
				constexpr std::ptrdiff_t m_iszLerpTarget = 0x9c0; // GlobalTypes::CUtlSymbolLarge m_iszLerpTarget; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_hLerpTarget = 0x9c8; // server::CHandle< server::CBaseEntity > m_hLerpTarget; |  Schema_Atomic | Size: 0x4
				constexpr std::ptrdiff_t m_iszLerpTargetAttachment = 0x9d0; // GlobalTypes::CUtlSymbolLarge m_iszLerpTargetAttachment; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_hLerpTargetAttachment = 0x9d8; // modellib::AttachmentHandle_t m_hLerpTargetAttachment; |  Schema_DeclaredClass | Size: 0x1
				constexpr std::ptrdiff_t m_flLerpDuration = 0x9dc; // float32 m_flLerpDuration; |  0x9dc | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_bLerpRestoreMoveType = 0x9e0; // bool m_bLerpRestoreMoveType; |  0x9e0 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bSingleLerpObject = 0x9e1; // bool m_bSingleLerpObject; |  0x9e1 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_vecLerpingObjects = 0x9e8; // GlobalTypes::CUtlVector< server::lerpdata_t > m_vecLerpingObjects; |  Schema_Atomic | Size: 0x18
				constexpr std::ptrdiff_t m_iszLerpEffect = 0xa00; // GlobalTypes::CUtlSymbolLarge m_iszLerpEffect; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_iszLerpSound = 0xa08; // GlobalTypes::CUtlSymbolLarge m_iszLerpSound; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_bAttachTouchingObject = 0xa10; // bool m_bAttachTouchingObject; |  0xa10 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_hEntityToWaitForDisconnect = 0xa14; // server::CHandle< server::CBaseEntity > m_hEntityToWaitForDisconnect; |  Schema_Atomic | Size: 0x4
				constexpr std::ptrdiff_t m_OnLerpStarted = 0xa18; // entity2::CEntityIOOutput m_OnLerpStarted; |  Schema_DeclaredClass | Size: 0x28
				constexpr std::ptrdiff_t m_OnLerpFinished = 0xa40; // entity2::CEntityIOOutput m_OnLerpFinished; |  Schema_DeclaredClass | Size: 0x28
				constexpr std::ptrdiff_t m_OnDetached = 0xa68; // entity2::CEntityIOOutput m_OnDetached; |  Schema_DeclaredClass | Size: 0x28
			}
		}
	}
}
