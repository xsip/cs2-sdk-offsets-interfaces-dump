// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace server {
			// Class size: 0x848
			namespace CRopeKeyframe /*: public CS2::server::CBaseModelEntity*/ {
				constexpr std::ptrdiff_t m_RopeFlags = 0x7f8; // uint16_t m_RopeFlags; |  0x7f8 | Schema_Builtin | Size: 0x2
				constexpr std::ptrdiff_t m_iNextLinkName = 0x800; // GlobalTypes::CUtlSymbolLarge m_iNextLinkName; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_Slack = 0x808; // int16_t m_Slack; |  0x808 | Schema_Builtin | Size: 0x2
				constexpr std::ptrdiff_t m_Width = 0x80c; // float32 m_Width; |  0x80c | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_TextureScale = 0x810; // float32 m_TextureScale; |  0x810 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nSegments = 0x814; // uint8_t m_nSegments; |  0x814 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bConstrainBetweenEndpoints = 0x815; // bool m_bConstrainBetweenEndpoints; |  0x815 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_strRopeMaterialModel = 0x818; // GlobalTypes::CUtlSymbolLarge m_strRopeMaterialModel; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_iRopeMaterialModelIndex = 0x820; // GlobalTypes::CStrongHandle< resourcesystem::InfoForResourceTypeIMaterial2 > m_iRopeMaterialModelIndex; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_Subdiv = 0x828; // uint8_t m_Subdiv; |  0x828 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_nChangeCount = 0x829; // uint8_t m_nChangeCount; |  0x829 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_RopeLength = 0x82a; // int16_t m_RopeLength; |  0x82a | Schema_Builtin | Size: 0x2
				constexpr std::ptrdiff_t m_fLockedPoints = 0x82c; // uint8_t m_fLockedPoints; |  0x82c | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bCreatedFromMapFile = 0x82d; // bool m_bCreatedFromMapFile; |  0x82d | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_flScrollSpeed = 0x830; // float32 m_flScrollSpeed; |  0x830 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_bStartPointValid = 0x834; // bool m_bStartPointValid; |  0x834 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bEndPointValid = 0x835; // bool m_bEndPointValid; |  0x835 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_hStartPoint = 0x838; // server::CHandle< server::CBaseEntity > m_hStartPoint; |  Schema_Atomic | Size: 0x4
				constexpr std::ptrdiff_t m_hEndPoint = 0x83c; // server::CHandle< server::CBaseEntity > m_hEndPoint; |  Schema_Atomic | Size: 0x4
				constexpr std::ptrdiff_t m_iStartAttachment = 0x840; // modellib::AttachmentHandle_t m_iStartAttachment; |  Schema_DeclaredClass | Size: 0x1
				constexpr std::ptrdiff_t m_iEndAttachment = 0x841; // modellib::AttachmentHandle_t m_iEndAttachment; |  Schema_DeclaredClass | Size: 0x1
			}
		}
	}
}
