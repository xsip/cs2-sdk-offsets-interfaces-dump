// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace server {
			// Class size: 0x1090
			namespace CPropDoorRotating /*: public CS2::server::CBasePropDoor*/ {
				constexpr std::ptrdiff_t m_vecAxis = 0xff0; // GlobalTypes::Vector  | Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_flDistance = 0xffc; // float32 m_flDistance; |  0xffc | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_eSpawnPosition = 0x1000; // server::PropDoorRotatingSpawnPos_t  | Schema_DeclaredEnum | Size: 0x4
				constexpr std::ptrdiff_t m_eOpenDirection = 0x1004; // server::PropDoorRotatingOpenDirection_e  | Schema_DeclaredEnum | Size: 0x4
				constexpr std::ptrdiff_t m_eCurrentOpenDirection = 0x1008; // server::PropDoorRotatingOpenDirection_e  | Schema_DeclaredEnum | Size: 0x4
				constexpr std::ptrdiff_t m_eDefaultCheckDirection = 0x100c; // server::doorCheck_e  | Schema_DeclaredEnum | Size: 0x4
				constexpr std::ptrdiff_t m_flAjarAngle = 0x1010; // float32 m_flAjarAngle; |  0x1010 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_angRotationAjarDeprecated = 0x1014; // GlobalTypes::QAngle  | Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_angRotationClosed = 0x1020; // GlobalTypes::QAngle  | Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_angRotationOpenForward = 0x102c; // GlobalTypes::QAngle  | Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_angRotationOpenBack = 0x1038; // GlobalTypes::QAngle  | Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_angGoal = 0x1044; // GlobalTypes::QAngle  | Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vecForwardBoundsMin = 0x1050; // GlobalTypes::Vector  | Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vecForwardBoundsMax = 0x105c; // GlobalTypes::Vector  | Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vecBackBoundsMin = 0x1068; // GlobalTypes::Vector  | Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vecBackBoundsMax = 0x1074; // GlobalTypes::Vector  | Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_bAjarDoorShouldntAlwaysOpen = 0x1080; // bool m_bAjarDoorShouldntAlwaysOpen; |  0x1080 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_hEntityBlocker = 0x1084; // GlobalTypes::CHandle<server::CEntityBlocker>  | Schema_Atomic | Size: 0x4
			}
		}
	}
}
