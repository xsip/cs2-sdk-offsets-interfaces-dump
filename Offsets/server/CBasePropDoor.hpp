// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace server {
			// Class size: 0xFF0
			namespace CBasePropDoor /*: public CS2::server::CDynamicProp*/ {
				constexpr std::ptrdiff_t m_flAutoReturnDelay = 0xd60; // float32 m_flAutoReturnDelay; |  0xd60 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_hDoorList = 0xd68; // server::CUtlVector< server.dll::CHandle< CBasePropDoor > > m_hDoorList; |  Schema_Atomic | Size: 0x18
				constexpr std::ptrdiff_t m_nHardwareType = 0xd80; // int32_t m_nHardwareType; |  0xd80 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_bNeedsHardware = 0xd84; // bool m_bNeedsHardware; |  0xd84 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_eDoorState = 0xd88; // client::DoorState_t m_eDoorState; |  Schema_DeclaredEnum | Size: 0x4
				constexpr std::ptrdiff_t m_bLocked = 0xd8c; // bool m_bLocked; |  0xd8c | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bNoNPCs = 0xd8d; // bool m_bNoNPCs; |  0xd8d | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_closedPosition = 0xd90; // GlobalTypes::Vector m_closedPosition; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_closedAngles = 0xd9c; // GlobalTypes::QAngle m_closedAngles; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_hBlocker = 0xda8; // server::CHandle< server::CBaseEntity > m_hBlocker; |  Schema_Atomic | Size: 0x4
				constexpr std::ptrdiff_t m_bFirstBlocked = 0xdac; // bool m_bFirstBlocked; |  0xdac | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_ls = 0xdb0; // server::locksound_t m_ls; |  Schema_DeclaredClass | Size: 0x20
				constexpr std::ptrdiff_t m_bForceClosed = 0xdd0; // bool m_bForceClosed; |  0xdd0 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_vecLatchWorldPosition = 0xdd4; // GlobalTypes::VectorWS m_vecLatchWorldPosition; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_hActivator = 0xde0; // server::CHandle< server::CBaseEntity > m_hActivator; |  Schema_Atomic | Size: 0x4
				constexpr std::ptrdiff_t m_SoundMoving = 0xdf8; // GlobalTypes::CUtlSymbolLarge m_SoundMoving; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_SoundOpen = 0xe00; // GlobalTypes::CUtlSymbolLarge m_SoundOpen; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_SoundClose = 0xe08; // GlobalTypes::CUtlSymbolLarge m_SoundClose; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_SoundLock = 0xe10; // GlobalTypes::CUtlSymbolLarge m_SoundLock; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_SoundUnlock = 0xe18; // GlobalTypes::CUtlSymbolLarge m_SoundUnlock; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_SoundLatch = 0xe20; // GlobalTypes::CUtlSymbolLarge m_SoundLatch; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_SoundPound = 0xe28; // GlobalTypes::CUtlSymbolLarge m_SoundPound; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_SoundJiggle = 0xe30; // GlobalTypes::CUtlSymbolLarge m_SoundJiggle; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_SoundLockedAnim = 0xe38; // GlobalTypes::CUtlSymbolLarge m_SoundLockedAnim; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_numCloseAttempts = 0xe40; // int32_t m_numCloseAttempts; |  0xe40 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nPhysicsMaterial = 0xe44; // GlobalTypes::CUtlStringToken m_nPhysicsMaterial; |  Schema_Atomic | Size: 0x4
				constexpr std::ptrdiff_t m_SlaveName = 0xe48; // GlobalTypes::CUtlSymbolLarge m_SlaveName; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_hMaster = 0xe50; // server::CHandle< server::CBasePropDoor > m_hMaster; |  Schema_Atomic | Size: 0x4
				constexpr std::ptrdiff_t m_OnBlockedClosing = 0xe58; // entity2::CEntityIOOutput m_OnBlockedClosing; |  Schema_DeclaredClass | Size: 0x28
				constexpr std::ptrdiff_t m_OnBlockedOpening = 0xe80; // entity2::CEntityIOOutput m_OnBlockedOpening; |  Schema_DeclaredClass | Size: 0x28
				constexpr std::ptrdiff_t m_OnUnblockedClosing = 0xea8; // entity2::CEntityIOOutput m_OnUnblockedClosing; |  Schema_DeclaredClass | Size: 0x28
				constexpr std::ptrdiff_t m_OnUnblockedOpening = 0xed0; // entity2::CEntityIOOutput m_OnUnblockedOpening; |  Schema_DeclaredClass | Size: 0x28
				constexpr std::ptrdiff_t m_OnFullyClosed = 0xef8; // entity2::CEntityIOOutput m_OnFullyClosed; |  Schema_DeclaredClass | Size: 0x28
				constexpr std::ptrdiff_t m_OnFullyOpen = 0xf20; // entity2::CEntityIOOutput m_OnFullyOpen; |  Schema_DeclaredClass | Size: 0x28
				constexpr std::ptrdiff_t m_OnClose = 0xf48; // entity2::CEntityIOOutput m_OnClose; |  Schema_DeclaredClass | Size: 0x28
				constexpr std::ptrdiff_t m_OnOpen = 0xf70; // entity2::CEntityIOOutput m_OnOpen; |  Schema_DeclaredClass | Size: 0x28
				constexpr std::ptrdiff_t m_OnLockedUse = 0xf98; // entity2::CEntityIOOutput m_OnLockedUse; |  Schema_DeclaredClass | Size: 0x28
				constexpr std::ptrdiff_t m_OnAjarOpen = 0xfc0; // entity2::CEntityIOOutput m_OnAjarOpen; |  Schema_DeclaredClass | Size: 0x28
			}
		}
	}
}
