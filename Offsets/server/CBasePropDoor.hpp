// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace server {
			// Class size: 0xFE0
			namespace CBasePropDoor /*: public CS2::server::CDynamicProp*/ {
				constexpr std::ptrdiff_t m_flAutoReturnDelay = 0xd50; // float32 m_flAutoReturnDelay; |  0xd50 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_hDoorList = 0xd58; // server::CUtlVector< server.dll::CHandle< CBasePropDoor > > m_hDoorList; |  Schema_Atomic | Size: 0x18
				constexpr std::ptrdiff_t m_nHardwareType = 0xd70; // int32_t m_nHardwareType; |  0xd70 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_bNeedsHardware = 0xd74; // bool m_bNeedsHardware; |  0xd74 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_eDoorState = 0xd78; // client::DoorState_t m_eDoorState; |  Schema_DeclaredEnum | Size: 0x4
				constexpr std::ptrdiff_t m_bLocked = 0xd7c; // bool m_bLocked; |  0xd7c | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bNoNPCs = 0xd7d; // bool m_bNoNPCs; |  0xd7d | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_closedPosition = 0xd80; // GlobalTypes::Vector m_closedPosition; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_closedAngles = 0xd8c; // GlobalTypes::QAngle m_closedAngles; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_hBlocker = 0xd98; // server::CHandle< server::CBaseEntity > m_hBlocker; |  Schema_Atomic | Size: 0x4
				constexpr std::ptrdiff_t m_bFirstBlocked = 0xd9c; // bool m_bFirstBlocked; |  0xd9c | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_ls = 0xda0; // server::locksound_t m_ls; |  Schema_DeclaredClass | Size: 0x20
				constexpr std::ptrdiff_t m_bForceClosed = 0xdc0; // bool m_bForceClosed; |  0xdc0 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_vecLatchWorldPosition = 0xdc4; // GlobalTypes::VectorWS m_vecLatchWorldPosition; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_hActivator = 0xdd0; // server::CHandle< server::CBaseEntity > m_hActivator; |  Schema_Atomic | Size: 0x4
				constexpr std::ptrdiff_t m_SoundMoving = 0xde8; // GlobalTypes::CUtlSymbolLarge m_SoundMoving; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_SoundOpen = 0xdf0; // GlobalTypes::CUtlSymbolLarge m_SoundOpen; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_SoundClose = 0xdf8; // GlobalTypes::CUtlSymbolLarge m_SoundClose; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_SoundLock = 0xe00; // GlobalTypes::CUtlSymbolLarge m_SoundLock; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_SoundUnlock = 0xe08; // GlobalTypes::CUtlSymbolLarge m_SoundUnlock; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_SoundLatch = 0xe10; // GlobalTypes::CUtlSymbolLarge m_SoundLatch; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_SoundPound = 0xe18; // GlobalTypes::CUtlSymbolLarge m_SoundPound; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_SoundJiggle = 0xe20; // GlobalTypes::CUtlSymbolLarge m_SoundJiggle; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_SoundLockedAnim = 0xe28; // GlobalTypes::CUtlSymbolLarge m_SoundLockedAnim; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_numCloseAttempts = 0xe30; // int32_t m_numCloseAttempts; |  0xe30 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nPhysicsMaterial = 0xe34; // GlobalTypes::CUtlStringToken m_nPhysicsMaterial; |  Schema_Atomic | Size: 0x4
				constexpr std::ptrdiff_t m_SlaveName = 0xe38; // GlobalTypes::CUtlSymbolLarge m_SlaveName; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_hMaster = 0xe40; // server::CHandle< server::CBasePropDoor > m_hMaster; |  Schema_Atomic | Size: 0x4
				constexpr std::ptrdiff_t m_OnBlockedClosing = 0xe48; // entity2::CEntityIOOutput m_OnBlockedClosing; |  Schema_DeclaredClass | Size: 0x28
				constexpr std::ptrdiff_t m_OnBlockedOpening = 0xe70; // entity2::CEntityIOOutput m_OnBlockedOpening; |  Schema_DeclaredClass | Size: 0x28
				constexpr std::ptrdiff_t m_OnUnblockedClosing = 0xe98; // entity2::CEntityIOOutput m_OnUnblockedClosing; |  Schema_DeclaredClass | Size: 0x28
				constexpr std::ptrdiff_t m_OnUnblockedOpening = 0xec0; // entity2::CEntityIOOutput m_OnUnblockedOpening; |  Schema_DeclaredClass | Size: 0x28
				constexpr std::ptrdiff_t m_OnFullyClosed = 0xee8; // entity2::CEntityIOOutput m_OnFullyClosed; |  Schema_DeclaredClass | Size: 0x28
				constexpr std::ptrdiff_t m_OnFullyOpen = 0xf10; // entity2::CEntityIOOutput m_OnFullyOpen; |  Schema_DeclaredClass | Size: 0x28
				constexpr std::ptrdiff_t m_OnClose = 0xf38; // entity2::CEntityIOOutput m_OnClose; |  Schema_DeclaredClass | Size: 0x28
				constexpr std::ptrdiff_t m_OnOpen = 0xf60; // entity2::CEntityIOOutput m_OnOpen; |  Schema_DeclaredClass | Size: 0x28
				constexpr std::ptrdiff_t m_OnLockedUse = 0xf88; // entity2::CEntityIOOutput m_OnLockedUse; |  Schema_DeclaredClass | Size: 0x28
				constexpr std::ptrdiff_t m_OnAjarOpen = 0xfb0; // entity2::CEntityIOOutput m_OnAjarOpen; |  Schema_DeclaredClass | Size: 0x28
			}
		}
	}
}
