// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace server {
			// Class size: 0xFE0
			namespace CCSPlayerController_InventoryServices /*: public CS2::client::CPlayerControllerComponent*/ {
				constexpr std::ptrdiff_t m_unMusicID = 0x40; // uint16_t m_unMusicID; |  0x40 | Schema_Builtin | Size: 0x2
				constexpr std::ptrdiff_t m_rank = 0x44; // GlobalTypes::MedalRank_t m_rank[6]; |  Schema_FixedArray | Size: 0x120
				constexpr std::ptrdiff_t m_nPersonaDataPublicLevel = 0x5c; // int32_t m_nPersonaDataPublicLevel; |  0x5c | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nPersonaDataPublicCommendsLeader = 0x60; // int32_t m_nPersonaDataPublicCommendsLeader; |  0x60 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nPersonaDataPublicCommendsTeacher = 0x64; // int32_t m_nPersonaDataPublicCommendsTeacher; |  0x64 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nPersonaDataPublicCommendsFriendly = 0x68; // int32_t m_nPersonaDataPublicCommendsFriendly; |  0x68 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nPersonaDataXpTrailLevel = 0x6c; // int32_t m_nPersonaDataXpTrailLevel; |  0x6c | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_unEquippedPlayerSprayIDs = 0xf48; // uint32_t m_unEquippedPlayerSprayIDs[1]; |  0xf48 | Schema_FixedArray | Size: 0x4
				constexpr std::ptrdiff_t m_unCurrentLoadoutHash = 0xf50; // uint64_t m_unCurrentLoadoutHash; |  0xf50 | Schema_Builtin | Size: 0x8
				constexpr std::ptrdiff_t m_vecServerAuthoritativeWeaponSlots = 0xf58; // GlobalTypes::CUtlVectorEmbeddedNetworkVar< client::ServerAuthoritativeWeaponSlot_t > m_vecServerAuthoritativeWeaponSlots; |  Schema_Atomic | Size: 0x88
			}
		}
	}
}
