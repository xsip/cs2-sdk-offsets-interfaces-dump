// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace server {
			// Class size: 0xB0
			namespace CCollisionProperty /**/ {
				constexpr std::ptrdiff_t m_collisionAttribute = 0x10; // server::VPhysicsCollisionAttribute_t m_collisionAttribute; |  Schema_DeclaredClass | Size: 0x30
				constexpr std::ptrdiff_t m_vecMins = 0x40; // GlobalTypes::Vector m_vecMins; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vecMaxs = 0x4c; // GlobalTypes::Vector m_vecMaxs; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_usSolidFlags = 0x5a; // uint8_t m_usSolidFlags; |  0x5a | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_nSolidType = 0x5b; // client::SolidType_t m_nSolidType; |  Schema_DeclaredEnum | Size: 0x1
				constexpr std::ptrdiff_t m_triggerBloat = 0x5c; // uint8_t m_triggerBloat; |  0x5c | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_nSurroundType = 0x5d; // client::SurroundingBoundsType_t m_nSurroundType; |  Schema_DeclaredEnum | Size: 0x1
				constexpr std::ptrdiff_t m_CollisionGroup = 0x5e; // uint8_t m_CollisionGroup; |  0x5e | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_nEnablePhysics = 0x5f; // uint8_t m_nEnablePhysics; |  0x5f | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_flBoundingRadius = 0x60; // float32 m_flBoundingRadius; |  0x60 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_vecSpecifiedSurroundingMins = 0x64; // GlobalTypes::Vector m_vecSpecifiedSurroundingMins; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vecSpecifiedSurroundingMaxs = 0x70; // GlobalTypes::Vector m_vecSpecifiedSurroundingMaxs; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vecSurroundingMaxs = 0x7c; // GlobalTypes::Vector m_vecSurroundingMaxs; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vecSurroundingMins = 0x88; // GlobalTypes::Vector m_vecSurroundingMins; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vCapsuleCenter1 = 0x94; // GlobalTypes::Vector m_vCapsuleCenter1; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vCapsuleCenter2 = 0xa0; // GlobalTypes::Vector m_vCapsuleCenter2; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_flCapsuleRadius = 0xac; // float32 m_flCapsuleRadius; |  0xac | Schema_Builtin | Size: 0x4
			}
		}
	}
}
