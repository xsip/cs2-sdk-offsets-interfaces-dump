// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace server {
			// Class size: 0x11A8
			namespace CCSWeaponBase /*: public CS2::server::CBasePlayerWeapon*/ {
				constexpr std::ptrdiff_t m_bRemoveable = 0xe80; // bool m_bRemoveable; |  0xe80 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bPlayerAmmoStockOnPickup = 0xe90; // bool m_bPlayerAmmoStockOnPickup; |  0xe90 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bRequireUseToTouch = 0xe91; // bool m_bRequireUseToTouch; |  0xe91 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_iWeaponGameplayAnimState = 0xe92; // client::WeaponGameplayAnimState m_iWeaponGameplayAnimState; |  Schema_DeclaredEnum | Size: 0x2
				constexpr std::ptrdiff_t m_flWeaponGameplayAnimStateTimestamp = 0xe94; // entity2::GameTime_t m_flWeaponGameplayAnimStateTimestamp; |  Schema_DeclaredClass | Size: 0x4
				constexpr std::ptrdiff_t m_flInspectCancelCompleteTime = 0xe98; // entity2::GameTime_t m_flInspectCancelCompleteTime; |  Schema_DeclaredClass | Size: 0x4
				constexpr std::ptrdiff_t m_bInspectPending = 0xe9c; // bool m_bInspectPending; |  0xe9c | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bInspectShouldLoop = 0xe9d; // bool m_bInspectShouldLoop; |  0xe9d | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_nLastEmptySoundCmdNum = 0xec8; // int32_t m_nLastEmptySoundCmdNum; |  0xec8 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_bFireOnEmpty = 0xee8; // bool m_bFireOnEmpty; |  0xee8 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_OnPlayerPickup = 0xef0; // entity2::CEntityIOOutput m_OnPlayerPickup; |  Schema_DeclaredClass | Size: 0x28
				constexpr std::ptrdiff_t m_weaponMode = 0xf18; // client::CSWeaponMode m_weaponMode; |  Schema_DeclaredEnum | Size: 0x4
				constexpr std::ptrdiff_t m_flTurningInaccuracyDelta = 0xf1c; // float32 m_flTurningInaccuracyDelta; |  0xf1c | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_vecTurningInaccuracyEyeDirLast = 0xf20; // GlobalTypes::Vector m_vecTurningInaccuracyEyeDirLast; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_flTurningInaccuracy = 0xf2c; // float32 m_flTurningInaccuracy; |  0xf2c | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_fAccuracyPenalty = 0xf30; // float32 m_fAccuracyPenalty; |  0xf30 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flLastAccuracyUpdateTime = 0xf34; // entity2::GameTime_t m_flLastAccuracyUpdateTime; |  Schema_DeclaredClass | Size: 0x4
				constexpr std::ptrdiff_t m_fAccuracySmoothedForZoom = 0xf38; // float32 m_fAccuracySmoothedForZoom; |  0xf38 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_iRecoilIndex = 0xf3c; // int32_t m_iRecoilIndex; |  0xf3c | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flRecoilIndex = 0xf40; // float32 m_flRecoilIndex; |  0xf40 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_bBurstMode = 0xf44; // bool m_bBurstMode; |  0xf44 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_nPostponeFireReadyTicks = 0xf48; // entity2::GameTick_t m_nPostponeFireReadyTicks; |  Schema_DeclaredClass | Size: 0x4
				constexpr std::ptrdiff_t m_flPostponeFireReadyFrac = 0xf4c; // float32 m_flPostponeFireReadyFrac; |  0xf4c | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_bInReload = 0xf50; // bool m_bInReload; |  0xf50 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_flDroppedAtTime = 0xf54; // entity2::GameTime_t m_flDroppedAtTime; |  Schema_DeclaredClass | Size: 0x4
				constexpr std::ptrdiff_t m_bIsHauledBack = 0xf58; // bool m_bIsHauledBack; |  0xf58 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bSilencerOn = 0xf59; // bool m_bSilencerOn; |  0xf59 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_flTimeSilencerSwitchComplete = 0xf5c; // entity2::GameTime_t m_flTimeSilencerSwitchComplete; |  Schema_DeclaredClass | Size: 0x4
				constexpr std::ptrdiff_t m_iOriginalTeamNumber = 0xf60; // int32_t m_iOriginalTeamNumber; |  0xf60 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_iMostRecentTeamNumber = 0xf64; // int32_t m_iMostRecentTeamNumber; |  0xf64 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_bDroppedNearBuyZone = 0xf68; // bool m_bDroppedNearBuyZone; |  0xf68 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_flNextAttackRenderTimeOffset = 0xf6c; // float32 m_flNextAttackRenderTimeOffset; |  0xf6c | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_bCanBePickedUp = 0xf80; // bool m_bCanBePickedUp; |  0xf80 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bUseCanOverrideNextOwnerTouchTime = 0xf81; // bool m_bUseCanOverrideNextOwnerTouchTime; |  0xf81 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_nextOwnerTouchTime = 0xf84; // entity2::GameTime_t m_nextOwnerTouchTime; |  Schema_DeclaredClass | Size: 0x4
				constexpr std::ptrdiff_t m_nextPrevOwnerTouchTime = 0xf88; // entity2::GameTime_t m_nextPrevOwnerTouchTime; |  Schema_DeclaredClass | Size: 0x4
				constexpr std::ptrdiff_t m_nextPrevOwnerUseTime = 0xf90; // entity2::GameTime_t m_nextPrevOwnerUseTime; |  Schema_DeclaredClass | Size: 0x4
				constexpr std::ptrdiff_t m_hPrevOwner = 0xf94; // server::CHandle< server::CCSPlayerPawn > m_hPrevOwner; |  Schema_Atomic | Size: 0x4
				constexpr std::ptrdiff_t m_nDropTick = 0xf98; // entity2::GameTick_t m_nDropTick; |  Schema_DeclaredClass | Size: 0x4
				constexpr std::ptrdiff_t m_bWasActiveWeaponWhenDropped = 0xf9c; // bool m_bWasActiveWeaponWhenDropped; |  0xf9c | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_donated = 0xfbc; // bool m_donated; |  0xfbc | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_fLastShotTime = 0xfc0; // entity2::GameTime_t m_fLastShotTime; |  Schema_DeclaredClass | Size: 0x4
				constexpr std::ptrdiff_t m_bWasOwnedByCT = 0xfc4; // bool m_bWasOwnedByCT; |  0xfc4 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bWasOwnedByTerrorist = 0xfc5; // bool m_bWasOwnedByTerrorist; |  0xfc5 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_numRemoveUnownedWeaponThink = 0xfc8; // int32_t m_numRemoveUnownedWeaponThink; |  0xfc8 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_IronSightController = 0xfd0; // server::CIronSightController m_IronSightController; |  Schema_DeclaredClass | Size: 0x18
				constexpr std::ptrdiff_t m_iIronSightMode = 0xfe8; // int32_t m_iIronSightMode; |  0xfe8 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flLastLOSTraceFailureTime = 0xfec; // entity2::GameTime_t m_flLastLOSTraceFailureTime; |  Schema_DeclaredClass | Size: 0x4
				constexpr std::ptrdiff_t m_flWatTickOffset = 0xff0; // float32 m_flWatTickOffset; |  0xff0 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flLastShakeTime = 0x1000; // entity2::GameTime_t m_flLastShakeTime; |  Schema_DeclaredClass | Size: 0x4
			}
		}
	}
}
