// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace server {
			// Class size: 0xD20
			namespace CTriggerSndSosOpvar /*: public CS2::server::CBaseTrigger*/ {
				constexpr std::ptrdiff_t m_hTouchingPlayers = 0x9c0; // server::CUtlVector< server.dll::CHandle< CBaseEntity > > m_hTouchingPlayers; |  Schema_Atomic | Size: 0x18
				constexpr std::ptrdiff_t m_flPosition = 0x9d8; // GlobalTypes::Vector m_flPosition; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_flCenterSize = 0x9e4; // float32 m_flCenterSize; |  0x9e4 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flMinVal = 0x9e8; // float32 m_flMinVal; |  0x9e8 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flMaxVal = 0x9ec; // float32 m_flMaxVal; |  0x9ec | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_opvarName = 0x9f0; // GlobalTypes::CUtlSymbolLarge m_opvarName; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_stackName = 0x9f8; // GlobalTypes::CUtlSymbolLarge m_stackName; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_operatorName = 0xa00; // GlobalTypes::CUtlSymbolLarge m_operatorName; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_bVolIs2D = 0xa08; // bool m_bVolIs2D; |  0xa08 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_opvarNameChar = 0xa09; // char m_opvarNameChar[256]; |  0xa09 | Schema_FixedArray | Size: 0x100
				constexpr std::ptrdiff_t m_stackNameChar = 0xb09; // char m_stackNameChar[256]; |  0xb09 | Schema_FixedArray | Size: 0x100
				constexpr std::ptrdiff_t m_operatorNameChar = 0xc09; // char m_operatorNameChar[256]; |  0xc09 | Schema_FixedArray | Size: 0x100
				constexpr std::ptrdiff_t m_VecNormPos = 0xd0c; // GlobalTypes::Vector m_VecNormPos; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_flNormCenterSize = 0xd18; // float32 m_flNormCenterSize; |  0xd18 | Schema_Builtin | Size: 0x4
			}
		}
	}
}
