// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace server {
			// Class size: 0xB40
			namespace CLogicCase /*: public CS2::server::CLogicalEntity*/ {
				constexpr std::ptrdiff_t m_nCase = 0x4f0; // GlobalTypes::CUtlSymbolLarge m_nCase[32]; |  Schema_FixedArray | Size: 0x100
				constexpr std::ptrdiff_t m_nShuffleCases = 0x5f0; // int32_t m_nShuffleCases; |  0x5f0 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nLastShuffleCase = 0x5f4; // int32_t m_nLastShuffleCase; |  0x5f4 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_uchShuffleCaseMap = 0x5f8; // uint8_t m_uchShuffleCaseMap[32]; |  0x5f8 | Schema_FixedArray | Size: 0x20
				constexpr std::ptrdiff_t m_OnCase = 0x618; // entity2::CEntityIOOutput m_OnCase[32]; |  Schema_FixedArray | Size: 0xa000
				constexpr std::ptrdiff_t m_OnDefault = 0xb18; // GlobalTypes::CEntityOutputTemplate< GlobalTypes::CVariantBase< CVariantDefaultAllocator > > m_OnDefault; |  Schema_Atomic | Size: 0x28
			}
		}
	}
}
