// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace server {
			// Class size: 0x598
			namespace CSoundOpvarSetPointBase /*: public CS2::server::CBaseEntity*/ {
				constexpr std::ptrdiff_t m_bDisabled = 0x4f0; // bool m_bDisabled; |  0x4f0 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_hSource = 0x4f4; // GlobalTypes::CEntityHandle m_hSource; |  Schema_Atomic | Size: 0x4
				constexpr std::ptrdiff_t m_iszSourceEntityName = 0x510; // GlobalTypes::CUtlSymbolLarge m_iszSourceEntityName; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_vLastPosition = 0x568; // GlobalTypes::Vector m_vLastPosition; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_iszStackName = 0x578; // GlobalTypes::CUtlSymbolLarge m_iszStackName; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_iszOperatorName = 0x580; // GlobalTypes::CUtlSymbolLarge m_iszOperatorName; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_iszOpvarName = 0x588; // GlobalTypes::CUtlSymbolLarge m_iszOpvarName; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_iOpvarIndex = 0x590; // int32_t m_iOpvarIndex; |  0x590 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_bUseAutoCompare = 0x594; // bool m_bUseAutoCompare; |  0x594 | Schema_Builtin | Size: 0x1
			}
		}
	}
}
