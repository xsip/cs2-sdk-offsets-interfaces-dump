// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace server {
			// Class size: 0xA20
			namespace CTriggerPhysics /*: public CS2::server::CBaseTrigger*/ {
				constexpr std::ptrdiff_t m_gravityScale = 0x9d0; // float32 m_gravityScale; |  0x9d0 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_linearLimit = 0x9d4; // float32 m_linearLimit; |  0x9d4 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_linearDamping = 0x9d8; // float32 m_linearDamping; |  0x9d8 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_angularLimit = 0x9dc; // float32 m_angularLimit; |  0x9dc | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_angularDamping = 0x9e0; // float32 m_angularDamping; |  0x9e0 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_linearForce = 0x9e4; // float32 m_linearForce; |  0x9e4 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flFrequency = 0x9e8; // float32 m_flFrequency; |  0x9e8 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flDampingRatio = 0x9ec; // float32 m_flDampingRatio; |  0x9ec | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_vecLinearForcePointAt = 0x9f0; // GlobalTypes::Vector m_vecLinearForcePointAt; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_bCollapseToForcePoint = 0x9fc; // bool m_bCollapseToForcePoint; |  0x9fc | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_vecLinearForcePointAtWorld = 0xa00; // GlobalTypes::Vector m_vecLinearForcePointAtWorld; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vecLinearForceDirection = 0xa0c; // GlobalTypes::Vector m_vecLinearForceDirection; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_bConvertToDebrisWhenPossible = 0xa18; // bool m_bConvertToDebrisWhenPossible; |  0xa18 | Schema_Builtin | Size: 0x1
			}
		}
	}
}
