// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace server {
			// Class size: 0x510
			namespace CPointOrient /*: public CS2::server::CBaseEntity*/ {
				constexpr std::ptrdiff_t m_iszSpawnTargetName = 0x4f0; // GlobalTypes::CUtlSymbolLarge m_iszSpawnTargetName; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_hTarget = 0x4f8; // server::CHandle< server::CBaseEntity > m_hTarget; |  Schema_Atomic | Size: 0x4
				constexpr std::ptrdiff_t m_bActive = 0x4fc; // bool m_bActive; |  0x4fc | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_nGoalDirection = 0x500; // client::PointOrientGoalDirectionType_t m_nGoalDirection; |  Schema_DeclaredEnum | Size: 0x4
				constexpr std::ptrdiff_t m_nConstraint = 0x504; // client::PointOrientConstraint_t m_nConstraint; |  Schema_DeclaredEnum | Size: 0x4
				constexpr std::ptrdiff_t m_flMaxTurnRate = 0x508; // float32 m_flMaxTurnRate; |  0x508 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flLastGameTime = 0x50c; // entity2::GameTime_t m_flLastGameTime; |  Schema_DeclaredClass | Size: 0x4
			}
		}
	}
}
