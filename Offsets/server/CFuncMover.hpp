// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace server {
			// Class size: 0xAA0
			namespace CFuncMover /*: public CS2::server::CBaseModelEntity*/ {
				constexpr std::ptrdiff_t m_iszPathName = 0x7f0; // GlobalTypes::CUtlSymbolLarge m_iszPathName; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_hPathMover = 0x7f8; // server::CHandle< server::CPathMover > m_hPathMover; |  Schema_Atomic | Size: 0x4
				constexpr std::ptrdiff_t m_hPrevPathMover = 0x7fc; // server::CHandle< server::CPathMover > m_hPrevPathMover; |  Schema_Atomic | Size: 0x4
				constexpr std::ptrdiff_t m_iszPathNodeStart = 0x800; // GlobalTypes::CUtlSymbolLarge m_iszPathNodeStart; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_iszPathNodeEnd = 0x808; // GlobalTypes::CUtlSymbolLarge m_iszPathNodeEnd; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_eMoveType = 0x810; // server::Move_t m_eMoveType; |  Schema_DeclaredEnum | Size: 0x4
				constexpr std::ptrdiff_t m_bIsReversing = 0x814; // bool m_bIsReversing; |  0x814 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_vTarget = 0x818; // GlobalTypes::Vector m_vTarget; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_flStartSpeed = 0x824; // float32 m_flStartSpeed; |  0x824 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flPathLocation = 0x828; // float32 m_flPathLocation; |  0x828 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flT = 0x82c; // float32 m_flT; |  0x82c | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nCurrentNodeIndex = 0x830; // int32_t m_nCurrentNodeIndex; |  0x830 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nPreviousNodeIndex = 0x834; // int32_t m_nPreviousNodeIndex; |  0x834 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_eSolidType = 0x838; // client::SolidType_t m_eSolidType; |  Schema_DeclaredEnum | Size: 0x1
				constexpr std::ptrdiff_t m_bIsMoving = 0x839; // bool m_bIsMoving; |  0x839 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_flTimeToReachMaxSpeed = 0x83c; // float32 m_flTimeToReachMaxSpeed; |  0x83c | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flDistanceToReachMaxSpeed = 0x840; // float32 m_flDistanceToReachMaxSpeed; |  0x840 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flTimeToReachZeroSpeed = 0x844; // float32 m_flTimeToReachZeroSpeed; |  0x844 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flDistanceToReachZeroSpeed = 0x848; // float32 m_flDistanceToReachZeroSpeed; |  0x848 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flTimeMovementStart = 0x84c; // entity2::GameTime_t m_flTimeMovementStart; |  Schema_DeclaredClass | Size: 0x4
				constexpr std::ptrdiff_t m_flTimeMovementStop = 0x850; // entity2::GameTime_t m_flTimeMovementStop; |  Schema_DeclaredClass | Size: 0x4
				constexpr std::ptrdiff_t m_hStopAtNode = 0x854; // server::CHandle< server::CMoverPathNode > m_hStopAtNode; |  Schema_Atomic | Size: 0x4
				constexpr std::ptrdiff_t m_flPathLocationToBeginStop = 0x858; // float32 m_flPathLocationToBeginStop; |  0x858 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_iszStartForwardSound = 0x860; // GlobalTypes::CUtlSymbolLarge m_iszStartForwardSound; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_iszLoopForwardSound = 0x868; // GlobalTypes::CUtlSymbolLarge m_iszLoopForwardSound; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_iszStopForwardSound = 0x870; // GlobalTypes::CUtlSymbolLarge m_iszStopForwardSound; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_iszStartReverseSound = 0x878; // GlobalTypes::CUtlSymbolLarge m_iszStartReverseSound; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_iszLoopReverseSound = 0x880; // GlobalTypes::CUtlSymbolLarge m_iszLoopReverseSound; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_iszStopReverseSound = 0x888; // GlobalTypes::CUtlSymbolLarge m_iszStopReverseSound; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_iszArriveAtDestinationSound = 0x890; // GlobalTypes::CUtlSymbolLarge m_iszArriveAtDestinationSound; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_OnMovementEnd = 0x8b0; // entity2::CEntityIOOutput m_OnMovementEnd; |  Schema_DeclaredClass | Size: 0x28
				constexpr std::ptrdiff_t m_bStartAtClosestPoint = 0x8d8; // bool m_bStartAtClosestPoint; |  0x8d8 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bStartAtEnd = 0x8d9; // bool m_bStartAtEnd; |  0x8d9 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_eOrientationUpdate = 0x8dc; // server::OrientationUpdate_t m_eOrientationUpdate; |  Schema_DeclaredEnum | Size: 0x4
				constexpr std::ptrdiff_t m_flTimeStartOrientationChange = 0x8e0; // entity2::GameTime_t m_flTimeStartOrientationChange; |  Schema_DeclaredClass | Size: 0x4
				constexpr std::ptrdiff_t m_flTimeToBlendToNewOrientation = 0x8e4; // float32 m_flTimeToBlendToNewOrientation; |  0x8e4 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flDurationBlendToNewOrientationRan = 0x8e8; // float32 m_flDurationBlendToNewOrientationRan; |  0x8e8 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nOriginalOrientationIndex = 0x8ec; // int32_t m_nOriginalOrientationIndex; |  0x8ec | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_bCreateMovableNavMesh = 0x8f0; // bool m_bCreateMovableNavMesh; |  0x8f0 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bAllowMovableNavMeshDockingOnEntireEntity = 0x8f1; // bool m_bAllowMovableNavMeshDockingOnEntireEntity; |  0x8f1 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_OnNodePassed = 0x8f8; // entity2::CEntityIOOutput m_OnNodePassed; |  Schema_DeclaredClass | Size: 0x28
				constexpr std::ptrdiff_t m_iszOrientationMatchEntityName = 0x920; // GlobalTypes::CUtlSymbolLarge m_iszOrientationMatchEntityName; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_hOrientationMatchEntity = 0x928; // server::CHandle< server::CBaseEntity > m_hOrientationMatchEntity; |  Schema_Atomic | Size: 0x4
				constexpr std::ptrdiff_t m_flTimeToTraverseToNextNode = 0x92c; // float32 m_flTimeToTraverseToNextNode; |  0x92c | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_vLerpToNewPosStartInPathEntitySpace = 0x930; // GlobalTypes::Vector m_vLerpToNewPosStartInPathEntitySpace; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vLerpToNewPosEndInPathEntitySpace = 0x93c; // GlobalTypes::Vector m_vLerpToNewPosEndInPathEntitySpace; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_flLerpToPositionT = 0x948; // float32 m_flLerpToPositionT; |  0x948 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flLerpToPositionDeltaT = 0x94c; // float32 m_flLerpToPositionDeltaT; |  0x94c | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_OnLerpToPositionComplete = 0x950; // entity2::CEntityIOOutput m_OnLerpToPositionComplete; |  Schema_DeclaredClass | Size: 0x28
				constexpr std::ptrdiff_t m_bIsPaused = 0x978; // bool m_bIsPaused; |  0x978 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_eTransitionedToPathNodeAction = 0x97c; // server::TransitionToPathNodeAction_t m_eTransitionedToPathNodeAction; |  Schema_DeclaredEnum | Size: 0x4
				constexpr std::ptrdiff_t m_nDelayedTeleportToNode = 0x980; // int32_t m_nDelayedTeleportToNode; |  0x980 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_bIsVerboseLogging = 0x984; // bool m_bIsVerboseLogging; |  0x984 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_hFollowEntity = 0x988; // server::CHandle< server::CBaseEntity > m_hFollowEntity; |  Schema_Atomic | Size: 0x4
				constexpr std::ptrdiff_t m_flFollowDistance = 0x98c; // float32 m_flFollowDistance; |  0x98c | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flFollowMinimumSpeed = 0x990; // float32 m_flFollowMinimumSpeed; |  0x990 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flCurFollowEntityT = 0x994; // float32 m_flCurFollowEntityT; |  0x994 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flCurFollowSpeed = 0x998; // float32 m_flCurFollowSpeed; |  0x998 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_strOrientationFaceEntityName = 0x9a0; // GlobalTypes::CUtlSymbolLarge m_strOrientationFaceEntityName; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_hOrientationFaceEntity = 0x9a8; // server::CHandle< server::CBaseEntity > m_hOrientationFaceEntity; |  Schema_Atomic | Size: 0x4
				constexpr std::ptrdiff_t m_OnStart = 0x9b0; // entity2::CEntityIOOutput m_OnStart; |  Schema_DeclaredClass | Size: 0x28
				constexpr std::ptrdiff_t m_OnStartForward = 0x9d8; // entity2::CEntityIOOutput m_OnStartForward; |  Schema_DeclaredClass | Size: 0x28
				constexpr std::ptrdiff_t m_OnStartReverse = 0xa00; // entity2::CEntityIOOutput m_OnStartReverse; |  Schema_DeclaredClass | Size: 0x28
				constexpr std::ptrdiff_t m_OnStop = 0xa28; // entity2::CEntityIOOutput m_OnStop; |  Schema_DeclaredClass | Size: 0x28
				constexpr std::ptrdiff_t m_OnStopped = 0xa50; // entity2::CEntityIOOutput m_OnStopped; |  Schema_DeclaredClass | Size: 0x28
				constexpr std::ptrdiff_t m_bNextNodeReturnsCurrent = 0xa78; // bool m_bNextNodeReturnsCurrent; |  0xa78 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bStartedMoving = 0xa79; // bool m_bStartedMoving; |  0xa79 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_eFollowEntityDirection = 0xa98; // server::FollowEntityDirection_t m_eFollowEntityDirection; |  Schema_DeclaredEnum | Size: 0x4
			}
		}
	}
}
