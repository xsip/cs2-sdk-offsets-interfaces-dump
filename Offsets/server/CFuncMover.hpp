// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace server {
			// Class size: 0xA88
			namespace CFuncMover /*: public CS2::server::CBaseModelEntity*/ {
				constexpr std::ptrdiff_t m_iszPathName = 0x7d8; // GlobalTypes::CUtlSymbolLarge  | Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_hPathMover = 0x7e0; // GlobalTypes::CHandle<server::CPathMover>  | Schema_Atomic | Size: 0x4
				constexpr std::ptrdiff_t m_hPrevPathMover = 0x7e4; // GlobalTypes::CHandle<server::CPathMover>  | Schema_Atomic | Size: 0x4
				constexpr std::ptrdiff_t m_iszPathNodeStart = 0x7e8; // GlobalTypes::CUtlSymbolLarge  | Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_iszPathNodeEnd = 0x7f0; // GlobalTypes::CUtlSymbolLarge  | Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_eMoveType = 0x7f8; // server::CFuncMover::Move_t  | Schema_DeclaredEnum | Size: 0x4
				constexpr std::ptrdiff_t m_bIsReversing = 0x7fc; // bool m_bIsReversing; |  0x7fc | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_vTarget = 0x800; // GlobalTypes::Vector  | Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_flStartSpeed = 0x80c; // float32 m_flStartSpeed; |  0x80c | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flPathLocation = 0x810; // float32 m_flPathLocation; |  0x810 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flT = 0x814; // float32 m_flT; |  0x814 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nCurrentNodeIndex = 0x818; // int32_t m_nCurrentNodeIndex; |  0x818 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nPreviousNodeIndex = 0x81c; // int32_t m_nPreviousNodeIndex; |  0x81c | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_eSolidType = 0x820; // client::SolidType_t  | Schema_DeclaredEnum | Size: 0x1
				constexpr std::ptrdiff_t m_bIsMoving = 0x821; // bool m_bIsMoving; |  0x821 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_flTimeToReachMaxSpeed = 0x824; // float32 m_flTimeToReachMaxSpeed; |  0x824 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flDistanceToReachMaxSpeed = 0x828; // float32 m_flDistanceToReachMaxSpeed; |  0x828 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flTimeToReachZeroSpeed = 0x82c; // float32 m_flTimeToReachZeroSpeed; |  0x82c | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flDistanceToReachZeroSpeed = 0x830; // float32 m_flDistanceToReachZeroSpeed; |  0x830 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flTimeMovementStart = 0x834; // entity2::GameTime_t  | Schema_DeclaredClass | Size: 0x4
				constexpr std::ptrdiff_t m_flTimeMovementStop = 0x838; // entity2::GameTime_t  | Schema_DeclaredClass | Size: 0x4
				constexpr std::ptrdiff_t m_hStopAtNode = 0x83c; // GlobalTypes::CHandle<server::CMoverPathNode>  | Schema_Atomic | Size: 0x4
				constexpr std::ptrdiff_t m_flPathLocationToBeginStop = 0x840; // float32 m_flPathLocationToBeginStop; |  0x840 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_iszStartForwardSound = 0x848; // GlobalTypes::CUtlSymbolLarge  | Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_iszLoopForwardSound = 0x850; // GlobalTypes::CUtlSymbolLarge  | Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_iszStopForwardSound = 0x858; // GlobalTypes::CUtlSymbolLarge  | Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_iszStartReverseSound = 0x860; // GlobalTypes::CUtlSymbolLarge  | Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_iszLoopReverseSound = 0x868; // GlobalTypes::CUtlSymbolLarge  | Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_iszStopReverseSound = 0x870; // GlobalTypes::CUtlSymbolLarge  | Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_iszArriveAtDestinationSound = 0x878; // GlobalTypes::CUtlSymbolLarge  | Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_OnMovementEnd = 0x898; // entity2::CEntityIOOutput  | Schema_DeclaredClass | Size: 0x28
				constexpr std::ptrdiff_t m_bStartAtClosestPoint = 0x8c0; // bool m_bStartAtClosestPoint; |  0x8c0 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bStartAtEnd = 0x8c1; // bool m_bStartAtEnd; |  0x8c1 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_eOrientationUpdate = 0x8c4; // server::CFuncMover::OrientationUpdate_t  | Schema_DeclaredEnum | Size: 0x4
				constexpr std::ptrdiff_t m_flTimeStartOrientationChange = 0x8c8; // entity2::GameTime_t  | Schema_DeclaredClass | Size: 0x4
				constexpr std::ptrdiff_t m_flTimeToBlendToNewOrientation = 0x8cc; // float32 m_flTimeToBlendToNewOrientation; |  0x8cc | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flDurationBlendToNewOrientationRan = 0x8d0; // float32 m_flDurationBlendToNewOrientationRan; |  0x8d0 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nOriginalOrientationIndex = 0x8d4; // int32_t m_nOriginalOrientationIndex; |  0x8d4 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_bCreateMovableNavMesh = 0x8d8; // bool m_bCreateMovableNavMesh; |  0x8d8 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bAllowMovableNavMeshDockingOnEntireEntity = 0x8d9; // bool m_bAllowMovableNavMeshDockingOnEntireEntity; |  0x8d9 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_OnNodePassed = 0x8e0; // entity2::CEntityIOOutput  | Schema_DeclaredClass | Size: 0x28
				constexpr std::ptrdiff_t m_iszOrientationMatchEntityName = 0x908; // GlobalTypes::CUtlSymbolLarge  | Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_hOrientationMatchEntity = 0x910; // GlobalTypes::CHandle<server::CBaseEntity>  | Schema_Atomic | Size: 0x4
				constexpr std::ptrdiff_t m_flTimeToTraverseToNextNode = 0x914; // float32 m_flTimeToTraverseToNextNode; |  0x914 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_vLerpToNewPosStartInPathEntitySpace = 0x918; // GlobalTypes::Vector  | Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vLerpToNewPosEndInPathEntitySpace = 0x924; // GlobalTypes::Vector  | Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_flLerpToPositionT = 0x930; // float32 m_flLerpToPositionT; |  0x930 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flLerpToPositionDeltaT = 0x934; // float32 m_flLerpToPositionDeltaT; |  0x934 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_OnLerpToPositionComplete = 0x938; // entity2::CEntityIOOutput  | Schema_DeclaredClass | Size: 0x28
				constexpr std::ptrdiff_t m_bIsPaused = 0x960; // bool m_bIsPaused; |  0x960 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_eTransitionedToPathNodeAction = 0x964; // server::CFuncMover::TransitionToPathNodeAction_t  | Schema_DeclaredEnum | Size: 0x4
				constexpr std::ptrdiff_t m_nDelayedTeleportToNode = 0x968; // int32_t m_nDelayedTeleportToNode; |  0x968 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_bIsVerboseLogging = 0x96c; // bool m_bIsVerboseLogging; |  0x96c | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_hFollowEntity = 0x970; // GlobalTypes::CHandle<server::CBaseEntity>  | Schema_Atomic | Size: 0x4
				constexpr std::ptrdiff_t m_flFollowDistance = 0x974; // float32 m_flFollowDistance; |  0x974 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flFollowMinimumSpeed = 0x978; // float32 m_flFollowMinimumSpeed; |  0x978 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flCurFollowEntityT = 0x97c; // float32 m_flCurFollowEntityT; |  0x97c | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flCurFollowSpeed = 0x980; // float32 m_flCurFollowSpeed; |  0x980 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_strOrientationFaceEntityName = 0x988; // GlobalTypes::CUtlSymbolLarge  | Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_hOrientationFaceEntity = 0x990; // GlobalTypes::CHandle<server::CBaseEntity>  | Schema_Atomic | Size: 0x4
				constexpr std::ptrdiff_t m_OnStart = 0x998; // entity2::CEntityIOOutput  | Schema_DeclaredClass | Size: 0x28
				constexpr std::ptrdiff_t m_OnStartForward = 0x9c0; // entity2::CEntityIOOutput  | Schema_DeclaredClass | Size: 0x28
				constexpr std::ptrdiff_t m_OnStartReverse = 0x9e8; // entity2::CEntityIOOutput  | Schema_DeclaredClass | Size: 0x28
				constexpr std::ptrdiff_t m_OnStop = 0xa10; // entity2::CEntityIOOutput  | Schema_DeclaredClass | Size: 0x28
				constexpr std::ptrdiff_t m_OnStopped = 0xa38; // entity2::CEntityIOOutput  | Schema_DeclaredClass | Size: 0x28
				constexpr std::ptrdiff_t m_bNextNodeReturnsCurrent = 0xa60; // bool m_bNextNodeReturnsCurrent; |  0xa60 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bStartedMoving = 0xa61; // bool m_bStartedMoving; |  0xa61 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_eFollowEntityDirection = 0xa80; // server::CFuncMover::FollowEntityDirection_t  | Schema_DeclaredEnum | Size: 0x4
			}
		}
	}
}
