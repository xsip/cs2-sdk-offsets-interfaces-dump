// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace server {
			// Class size: 0x510
			namespace CPointHurt /*: public CS2::server::CPointEntity*/ {
				constexpr std::ptrdiff_t m_nDamage = 0x4f0; // int32_t m_nDamage; |  0x4f0 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_bitsDamageType = 0x4f4; // client::DamageTypes_t  | Schema_DeclaredEnum | Size: 0x4
				constexpr std::ptrdiff_t m_flRadius = 0x4f8; // float32 m_flRadius; |  0x4f8 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flDelay = 0x4fc; // float32 m_flDelay; |  0x4fc | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_strTarget = 0x500; // GlobalTypes::CUtlSymbolLarge  | Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_pActivator = 0x508; // GlobalTypes::CHandle<server::CBaseEntity>  | Schema_Atomic | Size: 0x4
			}
		}
	}
}
