// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace server {
			// Class size: 0x228
			namespace CTimeline /*: public CS2::server::IntervalTimer*/ {
				constexpr std::ptrdiff_t m_flValues = 0x10; // float32 m_flValues[64]; |  0x10 | Schema_FixedArray | Size: 0x100
				constexpr std::ptrdiff_t m_nValueCounts = 0x110; // int32_t m_nValueCounts[64]; |  0x110 | Schema_FixedArray | Size: 0x100
				constexpr std::ptrdiff_t m_nBucketCount = 0x210; // int32_t m_nBucketCount; |  0x210 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flInterval = 0x214; // float32 m_flInterval; |  0x214 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flFinalValue = 0x218; // float32 m_flFinalValue; |  0x218 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nCompressionType = 0x21c; // client::TimelineCompression_t  | Schema_DeclaredEnum | Size: 0x4
				constexpr std::ptrdiff_t m_bStopped = 0x220; // bool m_bStopped; |  0x220 | Schema_Builtin | Size: 0x1
			}
		}
	}
}
