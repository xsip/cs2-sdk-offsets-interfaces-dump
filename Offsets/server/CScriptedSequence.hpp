// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace server {
			// Class size: 0x810
			namespace CScriptedSequence /*: public CS2::server::CBaseEntity*/ {
				constexpr std::ptrdiff_t m_iszEntry = 0x4f0; // GlobalTypes::CUtlSymbolLarge  | Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_iszPreIdle = 0x4f8; // GlobalTypes::CUtlSymbolLarge  | Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_iszPlay = 0x500; // GlobalTypes::CUtlSymbolLarge  | Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_iszPostIdle = 0x508; // GlobalTypes::CUtlSymbolLarge  | Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_iszModifierToAddOnPlay = 0x510; // GlobalTypes::CUtlSymbolLarge  | Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_iszNextScript = 0x518; // GlobalTypes::CUtlSymbolLarge  | Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_iszEntity = 0x520; // GlobalTypes::CUtlSymbolLarge  | Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_iszSyncGroup = 0x528; // GlobalTypes::CUtlSymbolLarge  | Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_nMoveTo = 0x530; // modellib::ScriptedMoveTo_t  | Schema_DeclaredEnum | Size: 0x4
				constexpr std::ptrdiff_t m_nMoveToGait = 0x534; // modellib::SharedMovementGait_t  | Schema_DeclaredEnum | Size: 0x1
				constexpr std::ptrdiff_t m_nHeldWeaponBehavior = 0x538; // modellib::ScriptedHeldWeaponBehavior_t  | Schema_DeclaredEnum | Size: 0x4
				constexpr std::ptrdiff_t m_nForcedCrouchState = 0x53c; // client::ForcedCrouchState_t  | Schema_DeclaredEnum | Size: 0x4
				constexpr std::ptrdiff_t m_bIsPlayingPreIdle = 0x540; // bool m_bIsPlayingPreIdle; |  0x540 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bIsPlayingEntry = 0x541; // bool m_bIsPlayingEntry; |  0x541 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bIsPlayingAction = 0x542; // bool m_bIsPlayingAction; |  0x542 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bIsPlayingPostIdle = 0x543; // bool m_bIsPlayingPostIdle; |  0x543 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bDontRotateOther = 0x544; // bool m_bDontRotateOther; |  0x544 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bIsRepeatable = 0x545; // bool m_bIsRepeatable; |  0x545 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bShouldLeaveCorpse = 0x546; // bool m_bShouldLeaveCorpse; |  0x546 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bStartOnSpawn = 0x547; // bool m_bStartOnSpawn; |  0x547 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bDisallowInterrupts = 0x548; // bool m_bDisallowInterrupts; |  0x548 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bCanOverrideNPCState = 0x549; // bool m_bCanOverrideNPCState; |  0x549 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bDontTeleportAtEnd = 0x54a; // bool m_bDontTeleportAtEnd; |  0x54a | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bHighPriority = 0x54b; // bool m_bHighPriority; |  0x54b | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bHideDebugComplaints = 0x54c; // bool m_bHideDebugComplaints; |  0x54c | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bContinueOnDeath = 0x54d; // bool m_bContinueOnDeath; |  0x54d | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bLoopPreIdleSequence = 0x54e; // bool m_bLoopPreIdleSequence; |  0x54e | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bLoopActionSequence = 0x54f; // bool m_bLoopActionSequence; |  0x54f | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bLoopPostIdleSequence = 0x550; // bool m_bLoopPostIdleSequence; |  0x550 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bSynchPostIdles = 0x551; // bool m_bSynchPostIdles; |  0x551 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bIgnoreLookAt = 0x552; // bool m_bIgnoreLookAt; |  0x552 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bIgnoreGravity = 0x553; // bool m_bIgnoreGravity; |  0x553 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bDisableNPCCollisions = 0x554; // bool m_bDisableNPCCollisions; |  0x554 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bKeepAnimgraphLockedPost = 0x555; // bool m_bKeepAnimgraphLockedPost; |  0x555 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bDontAddModifiers = 0x556; // bool m_bDontAddModifiers; |  0x556 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bDisableAimingWhileMoving = 0x557; // bool m_bDisableAimingWhileMoving; |  0x557 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bIgnoreRotation = 0x558; // bool m_bIgnoreRotation; |  0x558 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_flRadius = 0x55c; // float32 m_flRadius; |  0x55c | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flRepeat = 0x560; // float32 m_flRepeat; |  0x560 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flPlayAnimFadeInTime = 0x564; // float32 m_flPlayAnimFadeInTime; |  0x564 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flMoveInterpTime = 0x568; // float32 m_flMoveInterpTime; |  0x568 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flAngRate = 0x56c; // float32 m_flAngRate; |  0x56c | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flMoveSpeed = 0x570; // float32 m_flMoveSpeed; |  0x570 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_bWaitUntilMoveCompletesToStartAnimation = 0x574; // bool m_bWaitUntilMoveCompletesToStartAnimation; |  0x574 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_nNotReadySequenceCount = 0x578; // int32_t m_nNotReadySequenceCount; |  0x578 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_startTime = 0x57c; // entity2::GameTime_t  | Schema_DeclaredClass | Size: 0x4
				constexpr std::ptrdiff_t m_bWaitForBeginSequence = 0x580; // bool m_bWaitForBeginSequence; |  0x580 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_saved_effects = 0x584; // int32_t m_saved_effects; |  0x584 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_savedFlags = 0x588; // int32_t m_savedFlags; |  0x588 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_savedCollisionGroup = 0x58c; // int32_t m_savedCollisionGroup; |  0x58c | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_bInterruptable = 0x590; // bool m_bInterruptable; |  0x590 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_sequenceStarted = 0x591; // bool m_sequenceStarted; |  0x591 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bPositionRelativeToOtherEntity = 0x592; // bool m_bPositionRelativeToOtherEntity; |  0x592 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_hTargetEnt = 0x594; // GlobalTypes::CHandle<server::CBaseEntity>  | Schema_Atomic | Size: 0x4
				constexpr std::ptrdiff_t m_hNextCine = 0x598; // GlobalTypes::CHandle<server::CScriptedSequence>  | Schema_Atomic | Size: 0x4
				constexpr std::ptrdiff_t m_bThinking = 0x59c; // bool m_bThinking; |  0x59c | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bInitiatedSelfDelete = 0x59d; // bool m_bInitiatedSelfDelete; |  0x59d | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bIsTeleportingDueToMoveTo = 0x59e; // bool m_bIsTeleportingDueToMoveTo; |  0x59e | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bAllowCustomInterruptConditions = 0x59f; // bool m_bAllowCustomInterruptConditions; |  0x59f | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_hForcedTarget = 0x5a0; // GlobalTypes::CHandle<server::CBaseAnimGraph>  | Schema_Atomic | Size: 0x4
				constexpr std::ptrdiff_t m_bDontCancelOtherSequences = 0x5a4; // bool m_bDontCancelOtherSequences; |  0x5a4 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bForceSynch = 0x5a5; // bool m_bForceSynch; |  0x5a5 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bPreventUpdateYawOnFinish = 0x5a6; // bool m_bPreventUpdateYawOnFinish; |  0x5a6 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bEnsureOnNavmeshOnFinish = 0x5a7; // bool m_bEnsureOnNavmeshOnFinish; |  0x5a7 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_onDeathBehavior = 0x5a8; // client::ScriptedOnDeath_t  | Schema_DeclaredEnum | Size: 0x4
				constexpr std::ptrdiff_t m_ConflictResponse = 0x5ac; // server::ScriptedConflictResponse_t  | Schema_DeclaredEnum | Size: 0x4
				constexpr std::ptrdiff_t m_OnBeginSequence = 0x5b0; // entity2::CEntityIOOutput  | Schema_DeclaredClass | Size: 0x28
				constexpr std::ptrdiff_t m_OnActionStartOrLoop = 0x5d8; // entity2::CEntityIOOutput  | Schema_DeclaredClass | Size: 0x28
				constexpr std::ptrdiff_t m_OnEndSequence = 0x600; // entity2::CEntityIOOutput  | Schema_DeclaredClass | Size: 0x28
				constexpr std::ptrdiff_t m_OnPostIdleEndSequence = 0x628; // entity2::CEntityIOOutput  | Schema_DeclaredClass | Size: 0x28
				constexpr std::ptrdiff_t m_OnCancelSequence = 0x650; // entity2::CEntityIOOutput  | Schema_DeclaredClass | Size: 0x28
				constexpr std::ptrdiff_t m_OnCancelFailedSequence = 0x678; // entity2::CEntityIOOutput  | Schema_DeclaredClass | Size: 0x28
				constexpr std::ptrdiff_t m_OnScriptEvent = 0x6a0; // GlobalTypes::CEntityIOOutput[8]  | Schema_FixedArray | Size: 0xa00
				constexpr std::ptrdiff_t m_matOtherToMain = 0x7e0; // GlobalTypes::CTransform  | Schema_Atomic | Size: 0x20
				constexpr std::ptrdiff_t m_hInteractionMainEntity = 0x800; // GlobalTypes::CHandle<server::CBaseEntity>  | Schema_Atomic | Size: 0x4
				constexpr std::ptrdiff_t m_iPlayerDeathBehavior = 0x804; // int32_t m_iPlayerDeathBehavior; |  0x804 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_bSkipFadeIn = 0x808; // bool m_bSkipFadeIn; |  0x808 | Schema_Builtin | Size: 0x1
			}
		}
	}
}
