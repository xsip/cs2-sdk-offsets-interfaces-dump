// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace server {
			// Class size: 0xB00
			namespace CBarnLight /*: public CS2::server::CBaseModelEntity*/ {
				constexpr std::ptrdiff_t m_bEnabled = 0x7d8; // bool m_bEnabled; |  0x7d8 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_nColorMode = 0x7dc; // int32_t m_nColorMode; |  0x7dc | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_Color = 0x7e0; // GlobalTypes::Color  | Schema_Atomic | Size: 0x4
				constexpr std::ptrdiff_t m_flColorTemperature = 0x7e4; // float32 m_flColorTemperature; |  0x7e4 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flBrightness = 0x7e8; // float32 m_flBrightness; |  0x7e8 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flBrightnessScale = 0x7ec; // float32 m_flBrightnessScale; |  0x7ec | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nDirectLight = 0x7f0; // int32_t m_nDirectLight; |  0x7f0 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nBakedShadowIndex = 0x7f4; // int32_t m_nBakedShadowIndex; |  0x7f4 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nLightPathUniqueId = 0x7f8; // int32_t m_nLightPathUniqueId; |  0x7f8 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nLightMapUniqueId = 0x7fc; // int32_t m_nLightMapUniqueId; |  0x7fc | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nLuminaireShape = 0x800; // int32_t m_nLuminaireShape; |  0x800 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flLuminaireSize = 0x804; // float32 m_flLuminaireSize; |  0x804 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flLuminaireAnisotropy = 0x808; // float32 m_flLuminaireAnisotropy; |  0x808 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_LightStyleString = 0x810; // GlobalTypes::CUtlString  | Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_flLightStyleStartTime = 0x818; // entity2::GameTime_t  | Schema_DeclaredClass | Size: 0x4
				constexpr std::ptrdiff_t m_QueuedLightStyleStrings = 0x820; // GlobalTypes::CNetworkUtlVectorBase<GlobalTypes::CUtlString>  | Schema_Atomic | Size: 0x18
				constexpr std::ptrdiff_t m_LightStyleEvents = 0x838; // GlobalTypes::CNetworkUtlVectorBase<GlobalTypes::CUtlString>  | Schema_Atomic | Size: 0x18
				constexpr std::ptrdiff_t m_LightStyleTargets = 0x850; // server::CNetworkUtlVectorBase<GlobalTypes::CHandle<server::CBaseModelEntity>>  | Schema_Atomic | Size: 0x18
				constexpr std::ptrdiff_t m_StyleEvent = 0x868; // GlobalTypes::CEntityIOOutput[4]  | Schema_FixedArray | Size: 0x280
				constexpr std::ptrdiff_t m_hLightCookie = 0x928; // GlobalTypes::CStrongHandle<resourcesystem::InfoForResourceTypeCTextureBase>  | Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_flShape = 0x930; // float32 m_flShape; |  0x930 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flSoftX = 0x934; // float32 m_flSoftX; |  0x934 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flSoftY = 0x938; // float32 m_flSoftY; |  0x938 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flSkirt = 0x93c; // float32 m_flSkirt; |  0x93c | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flSkirtNear = 0x940; // float32 m_flSkirtNear; |  0x940 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_vSizeParams = 0x944; // GlobalTypes::Vector  | Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_flRange = 0x950; // float32 m_flRange; |  0x950 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_vShear = 0x954; // GlobalTypes::Vector  | Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_nBakeSpecularToCubemaps = 0x960; // int32_t m_nBakeSpecularToCubemaps; |  0x960 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_vBakeSpecularToCubemapsSize = 0x964; // GlobalTypes::Vector  | Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_nCastShadows = 0x970; // int32_t m_nCastShadows; |  0x970 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nShadowMapSize = 0x974; // int32_t m_nShadowMapSize; |  0x974 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nShadowPriority = 0x978; // int32_t m_nShadowPriority; |  0x978 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_bContactShadow = 0x97c; // bool m_bContactShadow; |  0x97c | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bForceShadowsEnabled = 0x97d; // bool m_bForceShadowsEnabled; |  0x97d | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_nBounceLight = 0x980; // int32_t m_nBounceLight; |  0x980 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flBounceScale = 0x984; // float32 m_flBounceScale; |  0x984 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flMinRoughness = 0x988; // float32 m_flMinRoughness; |  0x988 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_vAlternateColor = 0x98c; // GlobalTypes::Vector  | Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_fAlternateColorBrightness = 0x998; // float32 m_fAlternateColorBrightness; |  0x998 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nFog = 0x99c; // int32_t m_nFog; |  0x99c | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flFogStrength = 0x9a0; // float32 m_flFogStrength; |  0x9a0 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nFogShadows = 0x9a4; // int32_t m_nFogShadows; |  0x9a4 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flFogScale = 0x9a8; // float32 m_flFogScale; |  0x9a8 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_bFogMixedShadows = 0x9ac; // bool m_bFogMixedShadows; |  0x9ac | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_flFadeSizeStart = 0x9b0; // float32 m_flFadeSizeStart; |  0x9b0 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flFadeSizeEnd = 0x9b4; // float32 m_flFadeSizeEnd; |  0x9b4 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flShadowFadeSizeStart = 0x9b8; // float32 m_flShadowFadeSizeStart; |  0x9b8 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flShadowFadeSizeEnd = 0x9bc; // float32 m_flShadowFadeSizeEnd; |  0x9bc | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_bPrecomputedFieldsValid = 0x9c0; // bool m_bPrecomputedFieldsValid; |  0x9c0 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_vPrecomputedBoundsMins = 0x9c4; // GlobalTypes::Vector  | Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vPrecomputedBoundsMaxs = 0x9d0; // GlobalTypes::Vector  | Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vPrecomputedOBBOrigin = 0x9dc; // GlobalTypes::Vector  | Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vPrecomputedOBBAngles = 0x9e8; // GlobalTypes::QAngle  | Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vPrecomputedOBBExtent = 0x9f4; // GlobalTypes::Vector  | Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_nPrecomputedSubFrusta = 0xa00; // int32_t m_nPrecomputedSubFrusta; |  0xa00 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_vPrecomputedOBBOrigin0 = 0xa04; // GlobalTypes::Vector  | Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vPrecomputedOBBAngles0 = 0xa10; // GlobalTypes::QAngle  | Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vPrecomputedOBBExtent0 = 0xa1c; // GlobalTypes::Vector  | Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vPrecomputedOBBOrigin1 = 0xa28; // GlobalTypes::Vector  | Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vPrecomputedOBBAngles1 = 0xa34; // GlobalTypes::QAngle  | Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vPrecomputedOBBExtent1 = 0xa40; // GlobalTypes::Vector  | Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vPrecomputedOBBOrigin2 = 0xa4c; // GlobalTypes::Vector  | Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vPrecomputedOBBAngles2 = 0xa58; // GlobalTypes::QAngle  | Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vPrecomputedOBBExtent2 = 0xa64; // GlobalTypes::Vector  | Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vPrecomputedOBBOrigin3 = 0xa70; // GlobalTypes::Vector  | Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vPrecomputedOBBAngles3 = 0xa7c; // GlobalTypes::QAngle  | Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vPrecomputedOBBExtent3 = 0xa88; // GlobalTypes::Vector  | Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vPrecomputedOBBOrigin4 = 0xa94; // GlobalTypes::Vector  | Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vPrecomputedOBBAngles4 = 0xaa0; // GlobalTypes::QAngle  | Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vPrecomputedOBBExtent4 = 0xaac; // GlobalTypes::Vector  | Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vPrecomputedOBBOrigin5 = 0xab8; // GlobalTypes::Vector  | Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vPrecomputedOBBAngles5 = 0xac4; // GlobalTypes::QAngle  | Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vPrecomputedOBBExtent5 = 0xad0; // GlobalTypes::Vector  | Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_bPvsModifyEntity = 0xadc; // bool m_bPvsModifyEntity; |  0xadc | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_VisClusters = 0xae0; // GlobalTypes::CNetworkUtlVectorBase  | Schema_Atomic | Size: 0x18
			}
		}
	}
}
