// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace server {
			// Class size: 0xB18
			namespace CBarnLight /*: public CS2::server::CBaseModelEntity*/ {
				constexpr std::ptrdiff_t m_bEnabled = 0x7f0; // bool m_bEnabled; |  0x7f0 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_nColorMode = 0x7f4; // int32_t m_nColorMode; |  0x7f4 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_Color = 0x7f8; // GlobalTypes::Color m_Color; |  Schema_Atomic | Size: 0x4
				constexpr std::ptrdiff_t m_flColorTemperature = 0x7fc; // float32 m_flColorTemperature; |  0x7fc | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flBrightness = 0x800; // float32 m_flBrightness; |  0x800 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flBrightnessScale = 0x804; // float32 m_flBrightnessScale; |  0x804 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nDirectLight = 0x808; // int32_t m_nDirectLight; |  0x808 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nBakedShadowIndex = 0x80c; // int32_t m_nBakedShadowIndex; |  0x80c | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nLightPathUniqueId = 0x810; // int32_t m_nLightPathUniqueId; |  0x810 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nLightMapUniqueId = 0x814; // int32_t m_nLightMapUniqueId; |  0x814 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nLuminaireShape = 0x818; // int32_t m_nLuminaireShape; |  0x818 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flLuminaireSize = 0x81c; // float32 m_flLuminaireSize; |  0x81c | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flLuminaireAnisotropy = 0x820; // float32 m_flLuminaireAnisotropy; |  0x820 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_LightStyleString = 0x828; // GlobalTypes::CUtlString m_LightStyleString; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_flLightStyleStartTime = 0x830; // entity2::GameTime_t m_flLightStyleStartTime; |  Schema_DeclaredClass | Size: 0x4
				constexpr std::ptrdiff_t m_QueuedLightStyleStrings = 0x838; // GlobalTypes::CNetworkUtlVectorBase< GlobalTypes::CUtlString > m_QueuedLightStyleStrings; |  Schema_Atomic | Size: 0x18
				constexpr std::ptrdiff_t m_LightStyleEvents = 0x850; // GlobalTypes::CNetworkUtlVectorBase< GlobalTypes::CUtlString > m_LightStyleEvents; |  Schema_Atomic | Size: 0x18
				constexpr std::ptrdiff_t m_LightStyleTargets = 0x868; // server::CNetworkUtlVectorBase< server.dll::CHandle< CBaseModelEntity > > m_LightStyleTargets; |  Schema_Atomic | Size: 0x18
				constexpr std::ptrdiff_t m_StyleEvent = 0x880; // entity2::CEntityIOOutput m_StyleEvent[4]; |  Schema_FixedArray | Size: 0x280
				constexpr std::ptrdiff_t m_hLightCookie = 0x940; // GlobalTypes::CStrongHandle< resourcesystem::InfoForResourceTypeCTextureBase > m_hLightCookie; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_flShape = 0x948; // float32 m_flShape; |  0x948 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flSoftX = 0x94c; // float32 m_flSoftX; |  0x94c | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flSoftY = 0x950; // float32 m_flSoftY; |  0x950 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flSkirt = 0x954; // float32 m_flSkirt; |  0x954 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flSkirtNear = 0x958; // float32 m_flSkirtNear; |  0x958 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_vSizeParams = 0x95c; // GlobalTypes::Vector m_vSizeParams; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_flRange = 0x968; // float32 m_flRange; |  0x968 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_vShear = 0x96c; // GlobalTypes::Vector m_vShear; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_nBakeSpecularToCubemaps = 0x978; // int32_t m_nBakeSpecularToCubemaps; |  0x978 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_vBakeSpecularToCubemapsSize = 0x97c; // GlobalTypes::Vector m_vBakeSpecularToCubemapsSize; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_nCastShadows = 0x988; // int32_t m_nCastShadows; |  0x988 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nShadowMapSize = 0x98c; // int32_t m_nShadowMapSize; |  0x98c | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nShadowPriority = 0x990; // int32_t m_nShadowPriority; |  0x990 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_bContactShadow = 0x994; // bool m_bContactShadow; |  0x994 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bForceShadowsEnabled = 0x995; // bool m_bForceShadowsEnabled; |  0x995 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_nBounceLight = 0x998; // int32_t m_nBounceLight; |  0x998 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flBounceScale = 0x99c; // float32 m_flBounceScale; |  0x99c | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flMinRoughness = 0x9a0; // float32 m_flMinRoughness; |  0x9a0 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_vAlternateColor = 0x9a4; // GlobalTypes::Vector m_vAlternateColor; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_fAlternateColorBrightness = 0x9b0; // float32 m_fAlternateColorBrightness; |  0x9b0 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nFog = 0x9b4; // int32_t m_nFog; |  0x9b4 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flFogStrength = 0x9b8; // float32 m_flFogStrength; |  0x9b8 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nFogShadows = 0x9bc; // int32_t m_nFogShadows; |  0x9bc | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flFogScale = 0x9c0; // float32 m_flFogScale; |  0x9c0 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_bFogMixedShadows = 0x9c4; // bool m_bFogMixedShadows; |  0x9c4 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_flFadeSizeStart = 0x9c8; // float32 m_flFadeSizeStart; |  0x9c8 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flFadeSizeEnd = 0x9cc; // float32 m_flFadeSizeEnd; |  0x9cc | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flShadowFadeSizeStart = 0x9d0; // float32 m_flShadowFadeSizeStart; |  0x9d0 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flShadowFadeSizeEnd = 0x9d4; // float32 m_flShadowFadeSizeEnd; |  0x9d4 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_bPrecomputedFieldsValid = 0x9d8; // bool m_bPrecomputedFieldsValid; |  0x9d8 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_vPrecomputedBoundsMins = 0x9dc; // GlobalTypes::Vector m_vPrecomputedBoundsMins; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vPrecomputedBoundsMaxs = 0x9e8; // GlobalTypes::Vector m_vPrecomputedBoundsMaxs; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vPrecomputedOBBOrigin = 0x9f4; // GlobalTypes::Vector m_vPrecomputedOBBOrigin; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vPrecomputedOBBAngles = 0xa00; // GlobalTypes::QAngle m_vPrecomputedOBBAngles; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vPrecomputedOBBExtent = 0xa0c; // GlobalTypes::Vector m_vPrecomputedOBBExtent; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_nPrecomputedSubFrusta = 0xa18; // int32_t m_nPrecomputedSubFrusta; |  0xa18 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_vPrecomputedOBBOrigin0 = 0xa1c; // GlobalTypes::Vector m_vPrecomputedOBBOrigin0; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vPrecomputedOBBAngles0 = 0xa28; // GlobalTypes::QAngle m_vPrecomputedOBBAngles0; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vPrecomputedOBBExtent0 = 0xa34; // GlobalTypes::Vector m_vPrecomputedOBBExtent0; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vPrecomputedOBBOrigin1 = 0xa40; // GlobalTypes::Vector m_vPrecomputedOBBOrigin1; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vPrecomputedOBBAngles1 = 0xa4c; // GlobalTypes::QAngle m_vPrecomputedOBBAngles1; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vPrecomputedOBBExtent1 = 0xa58; // GlobalTypes::Vector m_vPrecomputedOBBExtent1; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vPrecomputedOBBOrigin2 = 0xa64; // GlobalTypes::Vector m_vPrecomputedOBBOrigin2; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vPrecomputedOBBAngles2 = 0xa70; // GlobalTypes::QAngle m_vPrecomputedOBBAngles2; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vPrecomputedOBBExtent2 = 0xa7c; // GlobalTypes::Vector m_vPrecomputedOBBExtent2; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vPrecomputedOBBOrigin3 = 0xa88; // GlobalTypes::Vector m_vPrecomputedOBBOrigin3; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vPrecomputedOBBAngles3 = 0xa94; // GlobalTypes::QAngle m_vPrecomputedOBBAngles3; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vPrecomputedOBBExtent3 = 0xaa0; // GlobalTypes::Vector m_vPrecomputedOBBExtent3; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vPrecomputedOBBOrigin4 = 0xaac; // GlobalTypes::Vector m_vPrecomputedOBBOrigin4; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vPrecomputedOBBAngles4 = 0xab8; // GlobalTypes::QAngle m_vPrecomputedOBBAngles4; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vPrecomputedOBBExtent4 = 0xac4; // GlobalTypes::Vector m_vPrecomputedOBBExtent4; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vPrecomputedOBBOrigin5 = 0xad0; // GlobalTypes::Vector m_vPrecomputedOBBOrigin5; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vPrecomputedOBBAngles5 = 0xadc; // GlobalTypes::QAngle m_vPrecomputedOBBAngles5; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vPrecomputedOBBExtent5 = 0xae8; // GlobalTypes::Vector m_vPrecomputedOBBExtent5; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_bPvsModifyEntity = 0xaf4; // bool m_bPvsModifyEntity; |  0xaf4 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_VisClusters = 0xaf8; // GlobalTypes::CNetworkUtlVectorBase< uint16 > m_VisClusters; |  Schema_Atomic | Size: 0x18
			}
		}
	}
}
