// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace server {
			// Class size: 0x7F0
			namespace CDynamicLight /*: public CS2::server::CBaseModelEntity*/ {
				constexpr std::ptrdiff_t m_ActualFlags = 0x7d8; // uint8_t m_ActualFlags; |  0x7d8 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_Flags = 0x7d9; // uint8_t m_Flags; |  0x7d9 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_LightStyle = 0x7da; // uint8_t m_LightStyle; |  0x7da | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_On = 0x7db; // bool m_On; |  0x7db | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_Radius = 0x7dc; // float32 m_Radius; |  0x7dc | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_Exponent = 0x7e0; // int32_t m_Exponent; |  0x7e0 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_InnerAngle = 0x7e4; // float32 m_InnerAngle; |  0x7e4 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_OuterAngle = 0x7e8; // float32 m_OuterAngle; |  0x7e8 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_SpotRadius = 0x7ec; // float32 m_SpotRadius; |  0x7ec | Schema_Builtin | Size: 0x4
			}
		}
	}
}
