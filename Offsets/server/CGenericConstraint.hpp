// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace server {
			// Class size: 0x690
			namespace CGenericConstraint /*: public CS2::server::CPhysConstraint*/ {
				constexpr std::ptrdiff_t m_nLinearMotionX = 0x568; // physicslib::JointMotion_t m_nLinearMotionX; |  Schema_DeclaredEnum | Size: 0x4
				constexpr std::ptrdiff_t m_nLinearMotionY = 0x56c; // physicslib::JointMotion_t m_nLinearMotionY; |  Schema_DeclaredEnum | Size: 0x4
				constexpr std::ptrdiff_t m_nLinearMotionZ = 0x570; // physicslib::JointMotion_t m_nLinearMotionZ; |  Schema_DeclaredEnum | Size: 0x4
				constexpr std::ptrdiff_t m_flLinearFrequencyX = 0x574; // float32 m_flLinearFrequencyX; |  0x574 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flLinearFrequencyY = 0x578; // float32 m_flLinearFrequencyY; |  0x578 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flLinearFrequencyZ = 0x57c; // float32 m_flLinearFrequencyZ; |  0x57c | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flLinearDampingRatioX = 0x580; // float32 m_flLinearDampingRatioX; |  0x580 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flLinearDampingRatioY = 0x584; // float32 m_flLinearDampingRatioY; |  0x584 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flLinearDampingRatioZ = 0x588; // float32 m_flLinearDampingRatioZ; |  0x588 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flMaxLinearImpulseX = 0x58c; // float32 m_flMaxLinearImpulseX; |  0x58c | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flMaxLinearImpulseY = 0x590; // float32 m_flMaxLinearImpulseY; |  0x590 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flMaxLinearImpulseZ = 0x594; // float32 m_flMaxLinearImpulseZ; |  0x594 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flBreakAfterTimeX = 0x598; // float32 m_flBreakAfterTimeX; |  0x598 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flBreakAfterTimeY = 0x59c; // float32 m_flBreakAfterTimeY; |  0x59c | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flBreakAfterTimeZ = 0x5a0; // float32 m_flBreakAfterTimeZ; |  0x5a0 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flBreakAfterTimeStartTimeX = 0x5a4; // entity2::GameTime_t m_flBreakAfterTimeStartTimeX; |  Schema_DeclaredClass | Size: 0x4
				constexpr std::ptrdiff_t m_flBreakAfterTimeStartTimeY = 0x5a8; // entity2::GameTime_t m_flBreakAfterTimeStartTimeY; |  Schema_DeclaredClass | Size: 0x4
				constexpr std::ptrdiff_t m_flBreakAfterTimeStartTimeZ = 0x5ac; // entity2::GameTime_t m_flBreakAfterTimeStartTimeZ; |  Schema_DeclaredClass | Size: 0x4
				constexpr std::ptrdiff_t m_flBreakAfterTimeThresholdX = 0x5b0; // float32 m_flBreakAfterTimeThresholdX; |  0x5b0 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flBreakAfterTimeThresholdY = 0x5b4; // float32 m_flBreakAfterTimeThresholdY; |  0x5b4 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flBreakAfterTimeThresholdZ = 0x5b8; // float32 m_flBreakAfterTimeThresholdZ; |  0x5b8 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flNotifyForceX = 0x5bc; // float32 m_flNotifyForceX; |  0x5bc | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flNotifyForceY = 0x5c0; // float32 m_flNotifyForceY; |  0x5c0 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flNotifyForceZ = 0x5c4; // float32 m_flNotifyForceZ; |  0x5c4 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flNotifyForceMinTimeX = 0x5c8; // float32 m_flNotifyForceMinTimeX; |  0x5c8 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flNotifyForceMinTimeY = 0x5cc; // float32 m_flNotifyForceMinTimeY; |  0x5cc | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flNotifyForceMinTimeZ = 0x5d0; // float32 m_flNotifyForceMinTimeZ; |  0x5d0 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flNotifyForceLastTimeX = 0x5d4; // entity2::GameTime_t m_flNotifyForceLastTimeX; |  Schema_DeclaredClass | Size: 0x4
				constexpr std::ptrdiff_t m_flNotifyForceLastTimeY = 0x5d8; // entity2::GameTime_t m_flNotifyForceLastTimeY; |  Schema_DeclaredClass | Size: 0x4
				constexpr std::ptrdiff_t m_flNotifyForceLastTimeZ = 0x5dc; // entity2::GameTime_t m_flNotifyForceLastTimeZ; |  Schema_DeclaredClass | Size: 0x4
				constexpr std::ptrdiff_t m_bAxisNotifiedX = 0x5e0; // bool m_bAxisNotifiedX; |  0x5e0 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bAxisNotifiedY = 0x5e1; // bool m_bAxisNotifiedY; |  0x5e1 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bAxisNotifiedZ = 0x5e2; // bool m_bAxisNotifiedZ; |  0x5e2 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_nAngularMotionX = 0x5e4; // physicslib::JointMotion_t m_nAngularMotionX; |  Schema_DeclaredEnum | Size: 0x4
				constexpr std::ptrdiff_t m_nAngularMotionY = 0x5e8; // physicslib::JointMotion_t m_nAngularMotionY; |  Schema_DeclaredEnum | Size: 0x4
				constexpr std::ptrdiff_t m_nAngularMotionZ = 0x5ec; // physicslib::JointMotion_t m_nAngularMotionZ; |  Schema_DeclaredEnum | Size: 0x4
				constexpr std::ptrdiff_t m_flAngularFrequencyX = 0x5f0; // float32 m_flAngularFrequencyX; |  0x5f0 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flAngularFrequencyY = 0x5f4; // float32 m_flAngularFrequencyY; |  0x5f4 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flAngularFrequencyZ = 0x5f8; // float32 m_flAngularFrequencyZ; |  0x5f8 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flAngularDampingRatioX = 0x5fc; // float32 m_flAngularDampingRatioX; |  0x5fc | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flAngularDampingRatioY = 0x600; // float32 m_flAngularDampingRatioY; |  0x600 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flAngularDampingRatioZ = 0x604; // float32 m_flAngularDampingRatioZ; |  0x604 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flMaxAngularImpulseX = 0x608; // float32 m_flMaxAngularImpulseX; |  0x608 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flMaxAngularImpulseY = 0x60c; // float32 m_flMaxAngularImpulseY; |  0x60c | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flMaxAngularImpulseZ = 0x610; // float32 m_flMaxAngularImpulseZ; |  0x610 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_NotifyForceReachedX = 0x618; // entity2::CEntityIOOutput m_NotifyForceReachedX; |  Schema_DeclaredClass | Size: 0x28
				constexpr std::ptrdiff_t m_NotifyForceReachedY = 0x640; // entity2::CEntityIOOutput m_NotifyForceReachedY; |  Schema_DeclaredClass | Size: 0x28
				constexpr std::ptrdiff_t m_NotifyForceReachedZ = 0x668; // entity2::CEntityIOOutput m_NotifyForceReachedZ; |  Schema_DeclaredClass | Size: 0x28
			}
		}
	}
}
