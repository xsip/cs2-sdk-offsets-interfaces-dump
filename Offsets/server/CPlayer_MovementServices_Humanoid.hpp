// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace server {
			// Class size: 0x288
			namespace CPlayer_MovementServices_Humanoid /*: public CS2::server::CPlayer_MovementServices*/ {
				constexpr std::ptrdiff_t m_flStepSoundTime = 0x240; // float32 m_flStepSoundTime; |  0x240 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flFallVelocity = 0x244; // float32 m_flFallVelocity; |  0x244 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_bInCrouch = 0x248; // bool m_bInCrouch; |  0x248 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_nCrouchState = 0x24c; // uint32_t m_nCrouchState; |  0x24c | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flCrouchTransitionStartTime = 0x250; // entity2::GameTime_t m_flCrouchTransitionStartTime; |  Schema_DeclaredClass | Size: 0x4
				constexpr std::ptrdiff_t m_bDucked = 0x254; // bool m_bDucked; |  0x254 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bDucking = 0x255; // bool m_bDucking; |  0x255 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bInDuckJump = 0x256; // bool m_bInDuckJump; |  0x256 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_groundNormal = 0x258; // GlobalTypes::Vector m_groundNormal; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_flSurfaceFriction = 0x264; // float32 m_flSurfaceFriction; |  0x264 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_surfaceProps = 0x268; // GlobalTypes::CUtlStringToken m_surfaceProps; |  Schema_Atomic | Size: 0x4
				constexpr std::ptrdiff_t m_nStepside = 0x278; // int32_t m_nStepside; |  0x278 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_vecSmoothedVelocity = 0x27c; // GlobalTypes::Vector m_vecSmoothedVelocity; |  Schema_Atomic | Size: 0xc
			}
		}
	}
}
