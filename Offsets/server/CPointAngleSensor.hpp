// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace server {
			// Class size: 0x5B8
			namespace CPointAngleSensor /*: public CS2::server::CPointEntity*/ {
				constexpr std::ptrdiff_t m_bDisabled = 0x4f0; // bool m_bDisabled; |  0x4f0 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_nLookAtName = 0x4f8; // GlobalTypes::CUtlSymbolLarge m_nLookAtName; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_hTargetEntity = 0x500; // server::CHandle< server::CBaseEntity > m_hTargetEntity; |  Schema_Atomic | Size: 0x4
				constexpr std::ptrdiff_t m_hLookAtEntity = 0x504; // server::CHandle< server::CBaseEntity > m_hLookAtEntity; |  Schema_Atomic | Size: 0x4
				constexpr std::ptrdiff_t m_flDuration = 0x508; // float32 m_flDuration; |  0x508 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flDotTolerance = 0x50c; // float32 m_flDotTolerance; |  0x50c | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flFacingTime = 0x510; // entity2::GameTime_t m_flFacingTime; |  Schema_DeclaredClass | Size: 0x4
				constexpr std::ptrdiff_t m_bFired = 0x514; // bool m_bFired; |  0x514 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_OnFacingLookat = 0x518; // entity2::CEntityIOOutput m_OnFacingLookat; |  Schema_DeclaredClass | Size: 0x28
				constexpr std::ptrdiff_t m_OnNotFacingLookat = 0x540; // entity2::CEntityIOOutput m_OnNotFacingLookat; |  Schema_DeclaredClass | Size: 0x28
				constexpr std::ptrdiff_t m_TargetDir = 0x568; // GlobalTypes::CEntityOutputTemplate< GlobalTypes::Vector > m_TargetDir; |  Schema_Atomic | Size: 0x28
				constexpr std::ptrdiff_t m_FacingPercentage = 0x590; // GlobalTypes::CEntityOutputTemplate< float32 > m_FacingPercentage; |  Schema_Atomic | Size: 0x28
			}
		}
	}
}
