// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace server {
			// Class size: 0xA50
			namespace CSceneEntity /*: public CS2::server::CPointEntity*/ {
				constexpr std::ptrdiff_t m_iszSceneFile = 0x4f8; // GlobalTypes::CUtlSymbolLarge  | Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_iszResumeSceneFile = 0x500; // GlobalTypes::CUtlSymbolLarge  | Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_iszTarget1 = 0x508; // GlobalTypes::CUtlSymbolLarge  | Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_iszTarget2 = 0x510; // GlobalTypes::CUtlSymbolLarge  | Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_iszTarget3 = 0x518; // GlobalTypes::CUtlSymbolLarge  | Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_iszTarget4 = 0x520; // GlobalTypes::CUtlSymbolLarge  | Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_iszTarget5 = 0x528; // GlobalTypes::CUtlSymbolLarge  | Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_iszTarget6 = 0x530; // GlobalTypes::CUtlSymbolLarge  | Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_iszTarget7 = 0x538; // GlobalTypes::CUtlSymbolLarge  | Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_iszTarget8 = 0x540; // GlobalTypes::CUtlSymbolLarge  | Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_hTarget1 = 0x548; // GlobalTypes::CHandle<server::CBaseEntity>  | Schema_Atomic | Size: 0x4
				constexpr std::ptrdiff_t m_hTarget2 = 0x54c; // GlobalTypes::CHandle<server::CBaseEntity>  | Schema_Atomic | Size: 0x4
				constexpr std::ptrdiff_t m_hTarget3 = 0x550; // GlobalTypes::CHandle<server::CBaseEntity>  | Schema_Atomic | Size: 0x4
				constexpr std::ptrdiff_t m_hTarget4 = 0x554; // GlobalTypes::CHandle<server::CBaseEntity>  | Schema_Atomic | Size: 0x4
				constexpr std::ptrdiff_t m_hTarget5 = 0x558; // GlobalTypes::CHandle<server::CBaseEntity>  | Schema_Atomic | Size: 0x4
				constexpr std::ptrdiff_t m_hTarget6 = 0x55c; // GlobalTypes::CHandle<server::CBaseEntity>  | Schema_Atomic | Size: 0x4
				constexpr std::ptrdiff_t m_hTarget7 = 0x560; // GlobalTypes::CHandle<server::CBaseEntity>  | Schema_Atomic | Size: 0x4
				constexpr std::ptrdiff_t m_hTarget8 = 0x564; // GlobalTypes::CHandle<server::CBaseEntity>  | Schema_Atomic | Size: 0x4
				constexpr std::ptrdiff_t m_sTargetAttachment = 0x568; // GlobalTypes::CUtlSymbolLarge  | Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_bIsPlayingBack = 0x570; // bool m_bIsPlayingBack; |  0x570 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bPaused = 0x571; // bool m_bPaused; |  0x571 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bMultiplayer = 0x572; // bool m_bMultiplayer; |  0x572 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bAutogenerated = 0x573; // bool m_bAutogenerated; |  0x573 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_flForceClientTime = 0x574; // float32 m_flForceClientTime; |  0x574 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flCurrentTime = 0x578; // float32 m_flCurrentTime; |  0x578 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flFrameTime = 0x57c; // float32 m_flFrameTime; |  0x57c | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_bCancelAtNextInterrupt = 0x580; // bool m_bCancelAtNextInterrupt; |  0x580 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_fPitch = 0x584; // float32 m_fPitch; |  0x584 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_bAutomated = 0x588; // bool m_bAutomated; |  0x588 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_nAutomatedAction = 0x58c; // int32_t m_nAutomatedAction; |  0x58c | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flAutomationDelay = 0x590; // float32 m_flAutomationDelay; |  0x590 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flAutomationTime = 0x594; // float32 m_flAutomationTime; |  0x594 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nSpeechPriority = 0x598; // int32_t m_nSpeechPriority; |  0x598 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_hWaitingForThisResumeScene = 0x59c; // GlobalTypes::CHandle<server::CBaseEntity>  | Schema_Atomic | Size: 0x4
				constexpr std::ptrdiff_t m_bWaitingForResumeScene = 0x5a0; // bool m_bWaitingForResumeScene; |  0x5a0 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bPausedViaInput = 0x5a1; // bool m_bPausedViaInput; |  0x5a1 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bPauseAtNextInterrupt = 0x5a2; // bool m_bPauseAtNextInterrupt; |  0x5a2 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bWaitingForActor = 0x5a3; // bool m_bWaitingForActor; |  0x5a3 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bWaitingForInterrupt = 0x5a4; // bool m_bWaitingForInterrupt; |  0x5a4 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bInterruptedActorsScenes = 0x5a5; // bool m_bInterruptedActorsScenes; |  0x5a5 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bBreakOnNonIdle = 0x5a6; // bool m_bBreakOnNonIdle; |  0x5a6 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bSceneFinished = 0x5a7; // bool m_bSceneFinished; |  0x5a7 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_hActorList = 0x5a8; // server::CNetworkUtlVectorBase<GlobalTypes::CHandle<server::CBaseFlex>>  | Schema_Atomic | Size: 0x18
				constexpr std::ptrdiff_t m_hRemoveActorList = 0x5c0; // server::CUtlVector<GlobalTypes::CHandle<server::CBaseEntity>>  | Schema_Atomic | Size: 0x18
				constexpr std::ptrdiff_t m_nSceneFlushCounter = 0x608; // int32_t m_nSceneFlushCounter; |  0x608 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nSceneStringIndex = 0x60c; // uint16_t m_nSceneStringIndex; |  0x60c | Schema_Builtin | Size: 0x2
				constexpr std::ptrdiff_t m_OnStart = 0x610; // entity2::CEntityIOOutput  | Schema_DeclaredClass | Size: 0x28
				constexpr std::ptrdiff_t m_OnCompletion = 0x638; // entity2::CEntityIOOutput  | Schema_DeclaredClass | Size: 0x28
				constexpr std::ptrdiff_t m_OnCanceled = 0x660; // entity2::CEntityIOOutput  | Schema_DeclaredClass | Size: 0x28
				constexpr std::ptrdiff_t m_OnPaused = 0x688; // entity2::CEntityIOOutput  | Schema_DeclaredClass | Size: 0x28
				constexpr std::ptrdiff_t m_OnResumed = 0x6b0; // entity2::CEntityIOOutput  | Schema_DeclaredClass | Size: 0x28
				constexpr std::ptrdiff_t m_OnTrigger = 0x6d8; // GlobalTypes::CEntityIOOutput[16]  | Schema_FixedArray | Size: 0x2800
				constexpr std::ptrdiff_t m_hInterruptScene = 0x9e8; // GlobalTypes::CHandle<server::CSceneEntity>  | Schema_Atomic | Size: 0x4
				constexpr std::ptrdiff_t m_nInterruptCount = 0x9ec; // int32_t m_nInterruptCount; |  0x9ec | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_bSceneMissing = 0x9f0; // bool m_bSceneMissing; |  0x9f0 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bInterrupted = 0x9f1; // bool m_bInterrupted; |  0x9f1 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bCompletedEarly = 0x9f2; // bool m_bCompletedEarly; |  0x9f2 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bInterruptSceneFinished = 0x9f3; // bool m_bInterruptSceneFinished; |  0x9f3 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bRestoring = 0x9f4; // bool m_bRestoring; |  0x9f4 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_hNotifySceneCompletion = 0x9f8; // server::CUtlVector<GlobalTypes::CHandle<server::CSceneEntity>>  | Schema_Atomic | Size: 0x18
				constexpr std::ptrdiff_t m_hListManagers = 0xa10; // server::CUtlVector<GlobalTypes::CHandle<server::CSceneListManager>>  | Schema_Atomic | Size: 0x18
				constexpr std::ptrdiff_t m_iszSoundName = 0xa28; // GlobalTypes::CUtlSymbolLarge  | Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_iszSequenceName = 0xa30; // GlobalTypes::CUtlSymbolLarge  | Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_hActor = 0xa38; // GlobalTypes::CHandle<server::CBaseFlex>  | Schema_Atomic | Size: 0x4
				constexpr std::ptrdiff_t m_hActivator = 0xa3c; // GlobalTypes::CHandle<server::CBaseEntity>  | Schema_Atomic | Size: 0x4
				constexpr std::ptrdiff_t m_BusyActor = 0xa40; // int32_t m_BusyActor; |  0xa40 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_iPlayerDeathBehavior = 0xa44; // server::SceneOnPlayerDeath_t  | Schema_DeclaredEnum | Size: 0x4
			}
		}
	}
}
