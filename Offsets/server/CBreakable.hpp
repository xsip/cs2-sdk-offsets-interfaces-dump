// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace server {
			// Class size: 0x8C8
			namespace CBreakable /*: public CS2::server::CBaseModelEntity*/ {
				constexpr std::ptrdiff_t m_CPropDataComponent = 0x7f8; // server::CPropDataComponent m_CPropDataComponent; |  Schema_DeclaredClass | Size: 0x40
				constexpr std::ptrdiff_t m_Material = 0x838; // server::Materials m_Material; |  Schema_DeclaredEnum | Size: 0x4
				constexpr std::ptrdiff_t m_hBreaker = 0x83c; // server::CHandle< server::CBaseEntity > m_hBreaker; |  Schema_Atomic | Size: 0x4
				constexpr std::ptrdiff_t m_Explosion = 0x840; // server::Explosions m_Explosion; |  Schema_DeclaredEnum | Size: 0x4
				constexpr std::ptrdiff_t m_iszSpawnObject = 0x848; // GlobalTypes::CUtlSymbolLarge m_iszSpawnObject; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_flPressureDelay = 0x850; // float32 m_flPressureDelay; |  0x850 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_iMinHealthDmg = 0x854; // int32_t m_iMinHealthDmg; |  0x854 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_iszPropData = 0x858; // GlobalTypes::CUtlSymbolLarge m_iszPropData; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_impactEnergyScale = 0x860; // float32 m_impactEnergyScale; |  0x860 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nOverrideBlockLOS = 0x864; // server::EOverrideBlockLOS_t m_nOverrideBlockLOS; |  Schema_DeclaredEnum | Size: 0x4
				constexpr std::ptrdiff_t m_OnBreak = 0x868; // entity2::CEntityIOOutput m_OnBreak; |  Schema_DeclaredClass | Size: 0x28
				constexpr std::ptrdiff_t m_OnHealthChanged = 0x890; // GlobalTypes::CEntityOutputTemplate< float32 > m_OnHealthChanged; |  Schema_Atomic | Size: 0x28
				constexpr std::ptrdiff_t m_PerformanceMode = 0x8b8; // client::PerformanceMode_t m_PerformanceMode; |  Schema_DeclaredEnum | Size: 0x4
				constexpr std::ptrdiff_t m_hPhysicsAttacker = 0x8bc; // server::CHandle< server::CBasePlayerPawn > m_hPhysicsAttacker; |  Schema_Atomic | Size: 0x4
				constexpr std::ptrdiff_t m_flLastPhysicsInfluenceTime = 0x8c0; // entity2::GameTime_t m_flLastPhysicsInfluenceTime; |  Schema_DeclaredClass | Size: 0x4
			}
		}
	}
}
