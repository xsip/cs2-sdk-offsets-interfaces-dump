// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace server {
			// Class size: 0xE8
			namespace CBtActionMoveTo /*: public CS2::server::CBtNode*/ {
				constexpr std::ptrdiff_t m_szDestinationInputKey = 0x60; // GlobalTypes::CUtlString m_szDestinationInputKey; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_szHidingSpotInputKey = 0x68; // GlobalTypes::CUtlString m_szHidingSpotInputKey; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_szThreatInputKey = 0x70; // GlobalTypes::CUtlString m_szThreatInputKey; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_vecDestination = 0x78; // GlobalTypes::Vector m_vecDestination; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_bAutoLookAdjust = 0x84; // bool m_bAutoLookAdjust; |  0x84 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bComputePath = 0x85; // bool m_bComputePath; |  0x85 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_flDamagingAreasPenaltyCost = 0x88; // float32 m_flDamagingAreasPenaltyCost; |  0x88 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_CheckApproximateCornersTimer = 0x90; // server::CountdownTimer m_CheckApproximateCornersTimer; |  Schema_DeclaredClass | Size: 0x18
				constexpr std::ptrdiff_t m_CheckHighPriorityItem = 0xa8; // server::CountdownTimer m_CheckHighPriorityItem; |  Schema_DeclaredClass | Size: 0x18
				constexpr std::ptrdiff_t m_RepathTimer = 0xc0; // server::CountdownTimer m_RepathTimer; |  Schema_DeclaredClass | Size: 0x18
				constexpr std::ptrdiff_t m_flArrivalEpsilon = 0xd8; // float32 m_flArrivalEpsilon; |  0xd8 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flAdditionalArrivalEpsilon2D = 0xdc; // float32 m_flAdditionalArrivalEpsilon2D; |  0xdc | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flHidingSpotCheckDistanceThreshold = 0xe0; // float32 m_flHidingSpotCheckDistanceThreshold; |  0xe0 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flNearestAreaDistanceThreshold = 0xe4; // float32 m_flNearestAreaDistanceThreshold; |  0xe4 | Schema_Builtin | Size: 0x4
			}
		}
	}
}
