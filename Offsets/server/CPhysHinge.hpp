// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace server {
			// Class size: 0x710
			namespace CPhysHinge /*: public CS2::server::CPhysConstraint*/ {
				constexpr std::ptrdiff_t m_soundInfo = 0x568; // server::ConstraintSoundInfo m_soundInfo; |  Schema_DeclaredClass | Size: 0x98
				constexpr std::ptrdiff_t m_NotifyMinLimitReached = 0x600; // entity2::CEntityIOOutput m_NotifyMinLimitReached; |  Schema_DeclaredClass | Size: 0x28
				constexpr std::ptrdiff_t m_NotifyMaxLimitReached = 0x628; // entity2::CEntityIOOutput m_NotifyMaxLimitReached; |  Schema_DeclaredClass | Size: 0x28
				constexpr std::ptrdiff_t m_bAtMinLimit = 0x650; // bool m_bAtMinLimit; |  0x650 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bAtMaxLimit = 0x651; // bool m_bAtMaxLimit; |  0x651 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_hinge = 0x654; // vphysics2::constraint_hingeparams_t m_hinge; |  Schema_DeclaredClass | Size: 0x40
				constexpr std::ptrdiff_t m_hingeFriction = 0x694; // float32 m_hingeFriction; |  0x694 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_systemLoadScale = 0x698; // float32 m_systemLoadScale; |  0x698 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_bIsAxisLocal = 0x69c; // bool m_bIsAxisLocal; |  0x69c | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_flMinRotation = 0x6a0; // float32 m_flMinRotation; |  0x6a0 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flMaxRotation = 0x6a4; // float32 m_flMaxRotation; |  0x6a4 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flInitialRotation = 0x6a8; // float32 m_flInitialRotation; |  0x6a8 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flMotorFrequency = 0x6ac; // float32 m_flMotorFrequency; |  0x6ac | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flMotorDampingRatio = 0x6b0; // float32 m_flMotorDampingRatio; |  0x6b0 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flAngleSpeed = 0x6b4; // float32 m_flAngleSpeed; |  0x6b4 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flAngleSpeedThreshold = 0x6b8; // float32 m_flAngleSpeedThreshold; |  0x6b8 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_OnStartMoving = 0x6c0; // entity2::CEntityIOOutput m_OnStartMoving; |  Schema_DeclaredClass | Size: 0x28
				constexpr std::ptrdiff_t m_OnStopMoving = 0x6e8; // entity2::CEntityIOOutput m_OnStopMoving; |  Schema_DeclaredClass | Size: 0x28
			}
		}
	}
}
