// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace server {
			// Class size: 0xCD0
			namespace CItemGeneric /*: public CS2::server::CItem*/ {
				constexpr std::ptrdiff_t m_bHasTriggerRadius = 0xb6c; // bool m_bHasTriggerRadius; |  0xb6c | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bHasPickupRadius = 0xb6d; // bool m_bHasPickupRadius; |  0xb6d | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_flPickupRadiusSqr = 0xb70; // float32 m_flPickupRadiusSqr; |  0xb70 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flTriggerRadiusSqr = 0xb74; // float32 m_flTriggerRadiusSqr; |  0xb74 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flLastPickupCheck = 0xb78; // entity2::GameTime_t m_flLastPickupCheck; |  Schema_DeclaredClass | Size: 0x4
				constexpr std::ptrdiff_t m_bPlayerCounterListenerAdded = 0xb7c; // bool m_bPlayerCounterListenerAdded; |  0xb7c | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bPlayerInTriggerRadius = 0xb7d; // bool m_bPlayerInTriggerRadius; |  0xb7d | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_hSpawnParticleEffect = 0xb80; // GlobalTypes::CStrongHandle< resourcesystem::InfoForResourceTypeIParticleSystemDefinition > m_hSpawnParticleEffect; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_pAmbientSoundEffect = 0xb88; // GlobalTypes::CUtlSymbolLarge m_pAmbientSoundEffect; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_bAutoStartAmbientSound = 0xb90; // bool m_bAutoStartAmbientSound; |  0xb90 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_pSpawnScriptFunction = 0xb98; // GlobalTypes::CUtlSymbolLarge m_pSpawnScriptFunction; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_hPickupParticleEffect = 0xba0; // GlobalTypes::CStrongHandle< resourcesystem::InfoForResourceTypeIParticleSystemDefinition > m_hPickupParticleEffect; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_pPickupSoundEffect = 0xba8; // GlobalTypes::CUtlSymbolLarge m_pPickupSoundEffect; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_pPickupScriptFunction = 0xbb0; // GlobalTypes::CUtlSymbolLarge m_pPickupScriptFunction; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_hTimeoutParticleEffect = 0xbb8; // GlobalTypes::CStrongHandle< resourcesystem::InfoForResourceTypeIParticleSystemDefinition > m_hTimeoutParticleEffect; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_pTimeoutSoundEffect = 0xbc0; // GlobalTypes::CUtlSymbolLarge m_pTimeoutSoundEffect; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_pTimeoutScriptFunction = 0xbc8; // GlobalTypes::CUtlSymbolLarge m_pTimeoutScriptFunction; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_pPickupFilterName = 0xbd0; // GlobalTypes::CUtlSymbolLarge m_pPickupFilterName; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_hPickupFilter = 0xbd8; // server::CHandle< server::CBaseFilter > m_hPickupFilter; |  Schema_Atomic | Size: 0x4
				constexpr std::ptrdiff_t m_OnPickup = 0xbe0; // entity2::CEntityIOOutput m_OnPickup; |  Schema_DeclaredClass | Size: 0x28
				constexpr std::ptrdiff_t m_OnTimeout = 0xc08; // entity2::CEntityIOOutput m_OnTimeout; |  Schema_DeclaredClass | Size: 0x28
				constexpr std::ptrdiff_t m_OnTriggerStartTouch = 0xc30; // entity2::CEntityIOOutput m_OnTriggerStartTouch; |  Schema_DeclaredClass | Size: 0x28
				constexpr std::ptrdiff_t m_OnTriggerTouch = 0xc58; // entity2::CEntityIOOutput m_OnTriggerTouch; |  Schema_DeclaredClass | Size: 0x28
				constexpr std::ptrdiff_t m_OnTriggerEndTouch = 0xc80; // entity2::CEntityIOOutput m_OnTriggerEndTouch; |  Schema_DeclaredClass | Size: 0x28
				constexpr std::ptrdiff_t m_pAllowPickupScriptFunction = 0xca8; // GlobalTypes::CUtlSymbolLarge m_pAllowPickupScriptFunction; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_flPickupRadius = 0xcb0; // float32 m_flPickupRadius; |  0xcb0 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flTriggerRadius = 0xcb4; // float32 m_flTriggerRadius; |  0xcb4 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_pTriggerSoundEffect = 0xcb8; // GlobalTypes::CUtlSymbolLarge m_pTriggerSoundEffect; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_bGlowWhenInTrigger = 0xcc0; // bool m_bGlowWhenInTrigger; |  0xcc0 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_glowColor = 0xcc1; // GlobalTypes::Color m_glowColor; |  Schema_Atomic | Size: 0x4
				constexpr std::ptrdiff_t m_bUseable = 0xcc5; // bool m_bUseable; |  0xcc5 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_hTriggerHelper = 0xcc8; // server::CHandle< server::CItemGenericTriggerHelper > m_hTriggerHelper; |  Schema_Atomic | Size: 0x4
			}
		}
	}
}
