// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace server {
			// Class size: 0xBD8
			namespace CBaseCombatCharacter /*: public CS2::server::CBaseFlex*/ {
				constexpr std::ptrdiff_t m_bForceServerRagdoll = 0xb10; // bool m_bForceServerRagdoll; |  0xb10 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_hMyWearables = 0xb18; // server::CNetworkUtlVectorBase< server.dll::CHandle< CEconWearable > > m_hMyWearables; |  Schema_Atomic | Size: 0x18
				constexpr std::ptrdiff_t m_impactEnergyScale = 0xb30; // float32 m_impactEnergyScale; |  0xb30 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nMinVehicleDamageToTempRagdoll = 0xb34; // int32_t m_nMinVehicleDamageToTempRagdoll; |  0xb34 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_bApplyStressDamage = 0xb38; // bool m_bApplyStressDamage; |  0xb38 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bDeathEventsDispatched = 0xb39; // bool m_bDeathEventsDispatched; |  0xb39 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_pVecRelationships = 0xb80; // GlobalTypes::CUtlVector< RelationshipOverride_t >* m_pVecRelationships; |  Schema_Ptr | Size: 0x8
				constexpr std::ptrdiff_t m_strRelationships = 0xb88; // GlobalTypes::CUtlSymbolLarge m_strRelationships; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_eHull = 0xb90; // client::Hull_t m_eHull; |  Schema_DeclaredEnum | Size: 0x4
				constexpr std::ptrdiff_t m_nNavHullIdx = 0xb94; // uint32_t m_nNavHullIdx; |  0xb94 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_movementStats = 0xb98; // server::CMovementStatsProperty m_movementStats; |  Schema_DeclaredClass | Size: 0x40
			}
		}
	}
}
