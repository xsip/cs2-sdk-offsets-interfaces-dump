// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace server {
			// Class size: 0xB10
			namespace CBaseFlex /*: public CS2::server::CBaseAnimGraph*/ {
				constexpr std::ptrdiff_t m_flexWeight = 0xa80; // GlobalTypes::CNetworkUtlVectorBase< float32 > m_flexWeight; |  Schema_Atomic | Size: 0x18
				constexpr std::ptrdiff_t m_vLookTargetPosition = 0xa98; // GlobalTypes::Vector m_vLookTargetPosition; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_blinktoggle = 0xaa4; // bool m_blinktoggle; |  0xaa4 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_flAllowResponsesEndTime = 0xaf8; // entity2::GameTime_t m_flAllowResponsesEndTime; |  Schema_DeclaredClass | Size: 0x4
				constexpr std::ptrdiff_t m_flLastFlexAnimationTime = 0xafc; // entity2::GameTime_t m_flLastFlexAnimationTime; |  Schema_DeclaredClass | Size: 0x4
				constexpr std::ptrdiff_t m_nNextSceneEventId = 0xb00; // client::SceneEventId_t m_nNextSceneEventId; |  Schema_DeclaredClass | Size: 0x4
				constexpr std::ptrdiff_t m_bUpdateLayerPriorities = 0xb04; // bool m_bUpdateLayerPriorities; |  0xb04 | Schema_Builtin | Size: 0x1
			}
		}
	}
}
