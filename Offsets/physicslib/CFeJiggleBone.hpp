// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace physicslib {
			// Class size: 0x9C
			namespace CFeJiggleBone /**/ {
				constexpr std::ptrdiff_t m_nFlags = 0x0; // uint32_t m_nFlags; |  0x0 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flLength = 0x4; // float32 m_flLength; |  0x4 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flTipMass = 0x8; // float32 m_flTipMass; |  0x8 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flYawStiffness = 0xc; // float32 m_flYawStiffness; |  0xc | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flYawDamping = 0x10; // float32 m_flYawDamping; |  0x10 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flPitchStiffness = 0x14; // float32 m_flPitchStiffness; |  0x14 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flPitchDamping = 0x18; // float32 m_flPitchDamping; |  0x18 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flAlongStiffness = 0x1c; // float32 m_flAlongStiffness; |  0x1c | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flAlongDamping = 0x20; // float32 m_flAlongDamping; |  0x20 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flAngleLimit = 0x24; // float32 m_flAngleLimit; |  0x24 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flMinYaw = 0x28; // float32 m_flMinYaw; |  0x28 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flMaxYaw = 0x2c; // float32 m_flMaxYaw; |  0x2c | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flYawFriction = 0x30; // float32 m_flYawFriction; |  0x30 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flYawBounce = 0x34; // float32 m_flYawBounce; |  0x34 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flMinPitch = 0x38; // float32 m_flMinPitch; |  0x38 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flMaxPitch = 0x3c; // float32 m_flMaxPitch; |  0x3c | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flPitchFriction = 0x40; // float32 m_flPitchFriction; |  0x40 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flPitchBounce = 0x44; // float32 m_flPitchBounce; |  0x44 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flBaseMass = 0x48; // float32 m_flBaseMass; |  0x48 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flBaseStiffness = 0x4c; // float32 m_flBaseStiffness; |  0x4c | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flBaseDamping = 0x50; // float32 m_flBaseDamping; |  0x50 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flBaseMinLeft = 0x54; // float32 m_flBaseMinLeft; |  0x54 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flBaseMaxLeft = 0x58; // float32 m_flBaseMaxLeft; |  0x58 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flBaseLeftFriction = 0x5c; // float32 m_flBaseLeftFriction; |  0x5c | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flBaseMinUp = 0x60; // float32 m_flBaseMinUp; |  0x60 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flBaseMaxUp = 0x64; // float32 m_flBaseMaxUp; |  0x64 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flBaseUpFriction = 0x68; // float32 m_flBaseUpFriction; |  0x68 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flBaseMinForward = 0x6c; // float32 m_flBaseMinForward; |  0x6c | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flBaseMaxForward = 0x70; // float32 m_flBaseMaxForward; |  0x70 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flBaseForwardFriction = 0x74; // float32 m_flBaseForwardFriction; |  0x74 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flRadius0 = 0x78; // float32 m_flRadius0; |  0x78 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flRadius1 = 0x7c; // float32 m_flRadius1; |  0x7c | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_vPoint0 = 0x80; // GlobalTypes::Vector m_vPoint0; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vPoint1 = 0x8c; // GlobalTypes::Vector m_vPoint1; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_nCollisionMask = 0x98; // uint16_t m_nCollisionMask; |  0x98 | Schema_Builtin | Size: 0x2
			}
		}
	}
}
