// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace compositematerialslib {
			// Class size: 0x288
			namespace CompositeMaterialInputLooseVariable_t /**/ {
				constexpr std::ptrdiff_t m_strName = 0x0; // GlobalTypes::CUtlString  | Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_bExposeExternally = 0x8; // bool m_bExposeExternally; |  0x8 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_strExposedFriendlyName = 0x10; // GlobalTypes::CUtlString  | Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_strExposedFriendlyGroupName = 0x18; // GlobalTypes::CUtlString  | Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_bExposedVariableIsFixedRange = 0x20; // bool m_bExposedVariableIsFixedRange; |  0x20 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_strExposedVisibleWhenTrue = 0x28; // GlobalTypes::CUtlString  | Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_strExposedHiddenWhenTrue = 0x30; // GlobalTypes::CUtlString  | Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_strExposedValueList = 0x38; // GlobalTypes::CUtlString  | Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_nVariableType = 0x40; // compositematerialslib::CompositeMaterialInputLooseVariableType_t  | Schema_DeclaredEnum | Size: 0x4
				constexpr std::ptrdiff_t m_bValueBoolean = 0x44; // bool m_bValueBoolean; |  0x44 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_nValueIntX = 0x48; // int32_t m_nValueIntX; |  0x48 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nValueIntY = 0x4c; // int32_t m_nValueIntY; |  0x4c | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nValueIntZ = 0x50; // int32_t m_nValueIntZ; |  0x50 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nValueIntW = 0x54; // int32_t m_nValueIntW; |  0x54 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_bHasFloatBounds = 0x58; // bool m_bHasFloatBounds; |  0x58 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_flValueFloatX = 0x5c; // float32 m_flValueFloatX; |  0x5c | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flValueFloatX_Min = 0x60; // float32 m_flValueFloatX_Min; |  0x60 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flValueFloatX_Max = 0x64; // float32 m_flValueFloatX_Max; |  0x64 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flValueFloatY = 0x68; // float32 m_flValueFloatY; |  0x68 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flValueFloatY_Min = 0x6c; // float32 m_flValueFloatY_Min; |  0x6c | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flValueFloatY_Max = 0x70; // float32 m_flValueFloatY_Max; |  0x70 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flValueFloatZ = 0x74; // float32 m_flValueFloatZ; |  0x74 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flValueFloatZ_Min = 0x78; // float32 m_flValueFloatZ_Min; |  0x78 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flValueFloatZ_Max = 0x7c; // float32 m_flValueFloatZ_Max; |  0x7c | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flValueFloatW = 0x80; // float32 m_flValueFloatW; |  0x80 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flValueFloatW_Min = 0x84; // float32 m_flValueFloatW_Min; |  0x84 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flValueFloatW_Max = 0x88; // float32 m_flValueFloatW_Max; |  0x88 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_cValueColor4 = 0x8c; // GlobalTypes::Color  | Schema_Atomic | Size: 0x4
				constexpr std::ptrdiff_t m_nValueSystemVar = 0x90; // compositematerialslib::CompositeMaterialVarSystemVar_t  | Schema_DeclaredEnum | Size: 0x4
				constexpr std::ptrdiff_t m_strResourceMaterial = 0x98; // GlobalTypes::CResourceNameTyped<GlobalTypes::CWeakHandle<resourcesystem::InfoForResourceTypeIMaterial2>>  | Schema_Atomic | Size: 0xe0
				constexpr std::ptrdiff_t m_strTextureContentAssetPath = 0x178; // GlobalTypes::CUtlString  | Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_strTextureRuntimeResourcePath = 0x180; // GlobalTypes::CResourceNameTyped<GlobalTypes::CWeakHandle<resourcesystem::InfoForResourceTypeCTextureBase>>  | Schema_Atomic | Size: 0xe0
				constexpr std::ptrdiff_t m_strTextureCompilationVtexTemplate = 0x260; // GlobalTypes::CUtlString  | Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_nTextureType = 0x268; // compositematerialslib::CompositeMaterialInputTextureType_t  | Schema_DeclaredEnum | Size: 0x4
				constexpr std::ptrdiff_t m_strString = 0x270; // GlobalTypes::CUtlString  | Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_strPanoramaPanelPath = 0x278; // GlobalTypes::CUtlString  | Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_nPanoramaRenderRes = 0x280; // int32_t m_nPanoramaRenderRes; |  0x280 | Schema_Builtin | Size: 0x4
			}
		}
	}
}
