// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace worldrenderer {
			// Class size: 0x78
			namespace AggregateSceneObject_t /**/ {
				constexpr std::ptrdiff_t m_allFlags = 0x0; // worldrenderer::ObjectTypeFlags_t m_allFlags; |  Schema_DeclaredEnum | Size: 0x4
				constexpr std::ptrdiff_t m_anyFlags = 0x4; // worldrenderer::ObjectTypeFlags_t m_anyFlags; |  Schema_DeclaredEnum | Size: 0x4
				constexpr std::ptrdiff_t m_nLayer = 0x8; // int16_t m_nLayer; |  0x8 | Schema_Builtin | Size: 0x2
				constexpr std::ptrdiff_t m_instanceStream = 0xa; // int16_t m_instanceStream; |  0xa | Schema_Builtin | Size: 0x2
				constexpr std::ptrdiff_t m_vertexAlbedoStream = 0xc; // int16_t m_vertexAlbedoStream; |  0xc | Schema_Builtin | Size: 0x2
				constexpr std::ptrdiff_t m_aggregateMeshes = 0x10; // GlobalTypes::CUtlVector< worldrenderer::AggregateMeshInfo_t > m_aggregateMeshes; |  Schema_Atomic | Size: 0x18
				constexpr std::ptrdiff_t m_lodSetups = 0x28; // GlobalTypes::CUtlVector< worldrenderer::AggregateLODSetup_t > m_lodSetups; |  Schema_Atomic | Size: 0x18
				constexpr std::ptrdiff_t m_visClusterMembership = 0x40; // GlobalTypes::CUtlVector< uint16 > m_visClusterMembership; |  Schema_Atomic | Size: 0x18
				constexpr std::ptrdiff_t m_fragmentTransforms = 0x58; // GlobalTypes::CUtlVector< GlobalTypes::matrix3x4_t > m_fragmentTransforms; |  Schema_Atomic | Size: 0x18
				constexpr std::ptrdiff_t m_renderableModel = 0x70; // GlobalTypes::CStrongHandle< resourcesystem::InfoForResourceTypeCModel > m_renderableModel; |  Schema_Atomic | Size: 0x8
			}
		}
	}
}
