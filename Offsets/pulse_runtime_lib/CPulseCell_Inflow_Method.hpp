// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace pulse_runtime_lib {
			// Class size: 0xC8
			namespace CPulseCell_Inflow_Method /*: public CS2::pulse_runtime_lib::CPulseCell_Inflow_BaseEntrypoint*/ {
				constexpr std::ptrdiff_t m_MethodName = 0x80; // GlobalTypes::PulseSymbol_t  | Schema_Atomic | Size: 0x10
				constexpr std::ptrdiff_t m_Description = 0x90; // GlobalTypes::CUtlString  | Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_bIsPublic = 0x98; // bool m_bIsPublic; |  0x98 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_ReturnType = 0xa0; // GlobalTypes::CPulseValueFullType  | Schema_Atomic | Size: 0x18
				constexpr std::ptrdiff_t m_Args = 0xb8; // GlobalTypes::CUtlLeanVector<pulse_runtime_lib::CPulseRuntimeMethodArg>  | Schema_Atomic | Size: 0x10
			}
		}
	}
}
