// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace modellib {
			// Class size: 0xA8
			namespace ModelSkeletonData_t /**/ {
				constexpr std::ptrdiff_t m_boneName = 0x0; // GlobalTypes::CUtlVector<GlobalTypes::CUtlString>  | Schema_Atomic | Size: 0x18
				constexpr std::ptrdiff_t m_nParent = 0x18; // GlobalTypes::CUtlVector  | Schema_Atomic | Size: 0x18
				constexpr std::ptrdiff_t m_boneSphere = 0x30; // GlobalTypes::CUtlVector  | Schema_Atomic | Size: 0x18
				constexpr std::ptrdiff_t m_nFlag = 0x48; // GlobalTypes::CUtlVector  | Schema_Atomic | Size: 0x18
				constexpr std::ptrdiff_t m_bonePosParent = 0x60; // GlobalTypes::CUtlVector<GlobalTypes::Vector>  | Schema_Atomic | Size: 0x18
				constexpr std::ptrdiff_t m_boneRotParent = 0x78; // GlobalTypes::CUtlVector<GlobalTypes::QuaternionStorage>  | Schema_Atomic | Size: 0x18
				constexpr std::ptrdiff_t m_boneScaleParent = 0x90; // GlobalTypes::CUtlVector  | Schema_Atomic | Size: 0x18
			}
		}
	}
}
