// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace modellib {
			// Class size: 0xA8
			namespace VPhysXBodyPart_t /**/ {
				constexpr std::ptrdiff_t m_nFlags = 0x0; // uint32_t m_nFlags; |  0x0 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flMass = 0x4; // float32 m_flMass; |  0x4 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_rnShape = 0x8; // modellib::VPhysics2ShapeDef_t m_rnShape; |  Schema_DeclaredClass | Size: 0x78
				constexpr std::ptrdiff_t m_nCollisionAttributeIndex = 0x80; // uint16_t m_nCollisionAttributeIndex; |  0x80 | Schema_Builtin | Size: 0x2
				constexpr std::ptrdiff_t m_nReserved = 0x82; // uint16_t m_nReserved; |  0x82 | Schema_Builtin | Size: 0x2
				constexpr std::ptrdiff_t m_flInertiaScale = 0x84; // float32 m_flInertiaScale; |  0x84 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flLinearDamping = 0x88; // float32 m_flLinearDamping; |  0x88 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flAngularDamping = 0x8c; // float32 m_flAngularDamping; |  0x8c | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flLinearDrag = 0x90; // float32 m_flLinearDrag; |  0x90 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flAngularDrag = 0x94; // float32 m_flAngularDrag; |  0x94 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_bOverrideMassCenter = 0x98; // bool m_bOverrideMassCenter; |  0x98 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_vMassCenterOverride = 0x9c; // GlobalTypes::Vector m_vMassCenterOverride; |  Schema_Atomic | Size: 0xc
			}
		}
	}
}
