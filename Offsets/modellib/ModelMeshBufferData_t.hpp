// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace modellib {
			// Class size: 0x30
			namespace ModelMeshBufferData_t /**/ {
				constexpr std::ptrdiff_t m_nBlockIndex = 0x0; // int32_t m_nBlockIndex; |  0x0 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nElementCount = 0x4; // uint32_t m_nElementCount; |  0x4 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nElementSizeInBytes = 0x8; // uint32_t m_nElementSizeInBytes; |  0x8 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_bMeshoptCompressed = 0xc; // bool m_bMeshoptCompressed; |  0xc | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bMeshoptIndexSequence = 0xd; // bool m_bMeshoptIndexSequence; |  0xd | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bCompressedZSTD = 0xe; // bool m_bCompressedZSTD; |  0xe | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bCreateBufferSRV = 0xf; // bool m_bCreateBufferSRV; |  0xf | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bCreateBufferUAV = 0x10; // bool m_bCreateBufferUAV; |  0x10 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bCreateRawBuffer = 0x11; // bool m_bCreateRawBuffer; |  0x11 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bCreatePooledBuffer = 0x12; // bool m_bCreatePooledBuffer; |  0x12 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_inputLayoutFields = 0x18; // GlobalTypes::CUtlVector< modellib::RenderInputLayoutField_t > m_inputLayoutFields; |  Schema_Atomic | Size: 0x18
			}
		}
	}
}
