// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace modellib {
			// Class size: 0xF8
			namespace VPhysXConstraintParams_t /**/ {
				constexpr std::ptrdiff_t m_nType = 0x0; // int8_t m_nType; |  0x0 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_nTranslateMotion = 0x1; // int8_t m_nTranslateMotion; |  0x1 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_nRotateMotion = 0x2; // int8_t m_nRotateMotion; |  0x2 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_nFlags = 0x3; // int8_t m_nFlags; |  0x3 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_anchor = 0x4; // GlobalTypes::Vector m_anchor[2]; |  Schema_FixedArray | Size: 0x18
				constexpr std::ptrdiff_t m_axes = 0x1c; // GlobalTypes::QuaternionStorage m_axes[2]; |  Schema_FixedArray | Size: 0x20
				constexpr std::ptrdiff_t m_maxForce = 0x3c; // float32 m_maxForce; |  0x3c | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_maxTorque = 0x40; // float32 m_maxTorque; |  0x40 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_linearLimitValue = 0x44; // float32 m_linearLimitValue; |  0x44 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_linearLimitRestitution = 0x48; // float32 m_linearLimitRestitution; |  0x48 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_linearLimitSpring = 0x4c; // float32 m_linearLimitSpring; |  0x4c | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_linearLimitDamping = 0x50; // float32 m_linearLimitDamping; |  0x50 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_twistLowLimitValue = 0x54; // float32 m_twistLowLimitValue; |  0x54 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_twistLowLimitRestitution = 0x58; // float32 m_twistLowLimitRestitution; |  0x58 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_twistLowLimitSpring = 0x5c; // float32 m_twistLowLimitSpring; |  0x5c | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_twistLowLimitDamping = 0x60; // float32 m_twistLowLimitDamping; |  0x60 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_twistHighLimitValue = 0x64; // float32 m_twistHighLimitValue; |  0x64 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_twistHighLimitRestitution = 0x68; // float32 m_twistHighLimitRestitution; |  0x68 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_twistHighLimitSpring = 0x6c; // float32 m_twistHighLimitSpring; |  0x6c | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_twistHighLimitDamping = 0x70; // float32 m_twistHighLimitDamping; |  0x70 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_swing1LimitValue = 0x74; // float32 m_swing1LimitValue; |  0x74 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_swing1LimitRestitution = 0x78; // float32 m_swing1LimitRestitution; |  0x78 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_swing1LimitSpring = 0x7c; // float32 m_swing1LimitSpring; |  0x7c | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_swing1LimitDamping = 0x80; // float32 m_swing1LimitDamping; |  0x80 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_swing2LimitValue = 0x84; // float32 m_swing2LimitValue; |  0x84 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_swing2LimitRestitution = 0x88; // float32 m_swing2LimitRestitution; |  0x88 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_swing2LimitSpring = 0x8c; // float32 m_swing2LimitSpring; |  0x8c | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_swing2LimitDamping = 0x90; // float32 m_swing2LimitDamping; |  0x90 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_goalPosition = 0x94; // GlobalTypes::Vector m_goalPosition; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_goalOrientation = 0xa0; // GlobalTypes::QuaternionStorage m_goalOrientation; |  Schema_Atomic | Size: 0x10
				constexpr std::ptrdiff_t m_goalAngularVelocity = 0xb0; // GlobalTypes::Vector m_goalAngularVelocity; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_driveSpringX = 0xbc; // float32 m_driveSpringX; |  0xbc | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_driveSpringY = 0xc0; // float32 m_driveSpringY; |  0xc0 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_driveSpringZ = 0xc4; // float32 m_driveSpringZ; |  0xc4 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_driveDampingX = 0xc8; // float32 m_driveDampingX; |  0xc8 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_driveDampingY = 0xcc; // float32 m_driveDampingY; |  0xcc | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_driveDampingZ = 0xd0; // float32 m_driveDampingZ; |  0xd0 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_driveSpringTwist = 0xd4; // float32 m_driveSpringTwist; |  0xd4 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_driveSpringSwing = 0xd8; // float32 m_driveSpringSwing; |  0xd8 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_driveSpringSlerp = 0xdc; // float32 m_driveSpringSlerp; |  0xdc | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_driveDampingTwist = 0xe0; // float32 m_driveDampingTwist; |  0xe0 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_driveDampingSwing = 0xe4; // float32 m_driveDampingSwing; |  0xe4 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_driveDampingSlerp = 0xe8; // float32 m_driveDampingSlerp; |  0xe8 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_solverIterationCount = 0xec; // int32_t m_solverIterationCount; |  0xec | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_projectionLinearTolerance = 0xf0; // float32 m_projectionLinearTolerance; |  0xf0 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_projectionAngularTolerance = 0xf4; // float32 m_projectionAngularTolerance; |  0xf4 | Schema_Builtin | Size: 0x4
			}
		}
	}
}
