// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace modellib {
			// Class size: 0x28
			namespace RenderHairStrandInfo_t /**/ {
				constexpr std::ptrdiff_t m_nGuideHairIndices_nSurfaceTriIndex = 0x0; // uint32_t m_nGuideHairIndices_nSurfaceTriIndex[2]; |  0x0 | Schema_FixedArray | Size: 0x8
				constexpr std::ptrdiff_t m_vGuideBary_vBaseBary = 0x8; // uint16_t m_vGuideBary_vBaseBary[4]; |  0x8 | Schema_FixedArray | Size: 0x8
				constexpr std::ptrdiff_t m_vRootOffset_flLengthScale = 0x10; // uint16_t m_vRootOffset_flLengthScale[4]; |  0x10 | Schema_FixedArray | Size: 0x8
				constexpr std::ptrdiff_t m_nPackedBaseUv = 0x18; // uint16_t m_nPackedBaseUv[2]; |  0x18 | Schema_FixedArray | Size: 0x4
				constexpr std::ptrdiff_t m_nPackedSurfaceNormalOs = 0x1c; // uint32_t m_nPackedSurfaceNormalOs; |  0x1c | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nPackedSurfaceTangentOs = 0x20; // uint32_t m_nPackedSurfaceTangentOs; |  0x20 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nDataOffset_Segments = 0x24; // uint32_t m_nDataOffset_Segments; |  0x24 | Schema_Builtin | Size: 0x4
			}
		}
	}
}
