// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace modellib {
			// Class size: 0x108
			namespace CMaterialDrawDescriptor /**/ {
				constexpr std::ptrdiff_t m_flUvDensity = 0x0; // float32 m_flUvDensity; |  0x0 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_vTintColor = 0x4; // GlobalTypes::Vector m_vTintColor; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_flAlpha = 0x10; // float32 m_flAlpha; |  0x10 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nNumMeshlets = 0x16; // uint16_t m_nNumMeshlets; |  0x16 | Schema_Builtin | Size: 0x2
				constexpr std::ptrdiff_t m_nFirstMeshlet = 0x1c; // uint32_t m_nFirstMeshlet; |  0x1c | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nAppliedIndexOffset = 0x20; // uint32_t m_nAppliedIndexOffset; |  0x20 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nDepthVertexBufferIndex = 0x24; // uint8_t m_nDepthVertexBufferIndex; |  0x24 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_nMeshletPackedIVBIndex = 0x25; // uint8_t m_nMeshletPackedIVBIndex; |  0x25 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_rigidMeshParts = 0x28; // GlobalTypes::RigidMeshPart_t > m_rigidMeshParts; |  Schema_Atomic | Size: 0x10
				constexpr std::ptrdiff_t m_nPrimitiveType = 0x38; // modellib::RenderPrimitiveType_t m_nPrimitiveType; |  Schema_DeclaredEnum | Size: 0x4
				constexpr std::ptrdiff_t m_nBaseVertex = 0x3c; // int32_t m_nBaseVertex; |  0x3c | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nVertexCount = 0x40; // int32_t m_nVertexCount; |  0x40 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nStartIndex = 0x44; // int32_t m_nStartIndex; |  0x44 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nIndexCount = 0x48; // int32_t m_nIndexCount; |  0x48 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_indexBuffer = 0xb0; // modellib::CRenderBufferBinding m_indexBuffer; |  Schema_DeclaredClass | Size: 0x20
				constexpr std::ptrdiff_t m_meshletPackedIVB = 0xd0; // modellib::CRenderBufferBinding m_meshletPackedIVB; |  Schema_DeclaredClass | Size: 0x20
				constexpr std::ptrdiff_t m_material = 0x100; // GlobalTypes::CStrongHandle< resourcesystem::InfoForResourceTypeIMaterial2 > m_material; |  Schema_Atomic | Size: 0x8
			}
		}
	}
}
