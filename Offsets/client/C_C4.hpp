// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace client {
			// Class size: 0x1FD0
			namespace C_C4 /*: public CS2::client::C_CSWeaponBase*/ {
				constexpr std::ptrdiff_t m_activeLightParticleIndex = 0x1f90; // client::ParticleIndex_t m_activeLightParticleIndex; |  Schema_DeclaredClass | Size: 0x4
				constexpr std::ptrdiff_t m_eActiveLightEffect = 0x1f94; // client::C4LightEffect_t m_eActiveLightEffect; |  Schema_DeclaredEnum | Size: 0x4
				constexpr std::ptrdiff_t m_bStartedArming = 0x1f98; // bool m_bStartedArming; |  0x1f98 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_fArmedTime = 0x1f9c; // entity2::GameTime_t m_fArmedTime; |  Schema_DeclaredClass | Size: 0x4
				constexpr std::ptrdiff_t m_bBombPlacedAnimation = 0x1fa0; // bool m_bBombPlacedAnimation; |  0x1fa0 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bIsPlantingViaUse = 0x1fa1; // bool m_bIsPlantingViaUse; |  0x1fa1 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_entitySpottedState = 0x1fa8; // client::EntitySpottedState_t m_entitySpottedState; |  Schema_DeclaredClass | Size: 0x18
				constexpr std::ptrdiff_t m_nSpotRules = 0x1fc0; // int32_t m_nSpotRules; |  0x1fc0 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_bPlayedArmingBeeps = 0x1fc4; // bool m_bPlayedArmingBeeps[7]; |  0x1fc4 | Schema_FixedArray | Size: 0x7
				constexpr std::ptrdiff_t m_bBombPlanted = 0x1fcb; // bool m_bBombPlanted; |  0x1fcb | Schema_Builtin | Size: 0x1
			}
		}
	}
}
