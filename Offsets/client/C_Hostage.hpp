// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace client {
			// Class size: 0x14D8
			namespace C_Hostage /*: public CS2::client::C_BaseCombatCharacter*/ {
				constexpr std::ptrdiff_t m_entitySpottedState = 0x1408; // client::EntitySpottedState_t m_entitySpottedState; |  Schema_DeclaredClass | Size: 0x18
				constexpr std::ptrdiff_t m_leader = 0x1420; // client::CHandle< client::C_BaseEntity > m_leader; |  Schema_Atomic | Size: 0x4
				constexpr std::ptrdiff_t m_reuseTimer = 0x1428; // client::CountdownTimer m_reuseTimer; |  Schema_DeclaredClass | Size: 0x18
				constexpr std::ptrdiff_t m_vel = 0x1440; // GlobalTypes::Vector m_vel; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_isRescued = 0x144c; // bool m_isRescued; |  0x144c | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_jumpedThisFrame = 0x144d; // bool m_jumpedThisFrame; |  0x144d | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_nHostageState = 0x1450; // int32_t m_nHostageState; |  0x1450 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_bHandsHaveBeenCut = 0x1454; // bool m_bHandsHaveBeenCut; |  0x1454 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_hHostageGrabber = 0x1458; // client::CHandle< client::C_CSPlayerPawn > m_hHostageGrabber; |  Schema_Atomic | Size: 0x4
				constexpr std::ptrdiff_t m_fLastGrabTime = 0x145c; // entity2::GameTime_t m_fLastGrabTime; |  Schema_DeclaredClass | Size: 0x4
				constexpr std::ptrdiff_t m_vecGrabbedPos = 0x1460; // GlobalTypes::Vector m_vecGrabbedPos; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_flRescueStartTime = 0x146c; // entity2::GameTime_t m_flRescueStartTime; |  Schema_DeclaredClass | Size: 0x4
				constexpr std::ptrdiff_t m_flGrabSuccessTime = 0x1470; // entity2::GameTime_t m_flGrabSuccessTime; |  Schema_DeclaredClass | Size: 0x4
				constexpr std::ptrdiff_t m_flDropStartTime = 0x1474; // entity2::GameTime_t m_flDropStartTime; |  Schema_DeclaredClass | Size: 0x4
				constexpr std::ptrdiff_t m_flDeadOrRescuedTime = 0x1478; // entity2::GameTime_t m_flDeadOrRescuedTime; |  Schema_DeclaredClass | Size: 0x4
				constexpr std::ptrdiff_t m_blinkTimer = 0x1480; // client::CountdownTimer m_blinkTimer; |  Schema_DeclaredClass | Size: 0x18
				constexpr std::ptrdiff_t m_lookAt = 0x1498; // GlobalTypes::Vector m_lookAt; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_lookAroundTimer = 0x14a8; // client::CountdownTimer m_lookAroundTimer; |  Schema_DeclaredClass | Size: 0x18
				constexpr std::ptrdiff_t m_isInit = 0x14c0; // bool m_isInit; |  0x14c0 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_eyeAttachment = 0x14c1; // modellib::AttachmentHandle_t m_eyeAttachment; |  Schema_DeclaredClass | Size: 0x1
				constexpr std::ptrdiff_t m_chestAttachment = 0x14c2; // modellib::AttachmentHandle_t m_chestAttachment; |  Schema_DeclaredClass | Size: 0x1
				constexpr std::ptrdiff_t m_pPredictionOwner = 0x14c8; // client::CBasePlayerController* m_pPredictionOwner; |  Schema_Ptr | Size: 0x8
				constexpr std::ptrdiff_t m_fNewestAlphaThinkTime = 0x14d0; // entity2::GameTime_t m_fNewestAlphaThinkTime; |  Schema_DeclaredClass | Size: 0x4
			}
		}
	}
}
