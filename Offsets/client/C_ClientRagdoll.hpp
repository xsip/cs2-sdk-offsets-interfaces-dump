// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace client {
			// Class size: 0x1208
			namespace C_ClientRagdoll /*: public CS2::client::CBaseAnimGraph*/ {
				constexpr std::ptrdiff_t m_bFadeOut = 0x1170; // bool m_bFadeOut; |  0x1170 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bImportant = 0x1171; // bool m_bImportant; |  0x1171 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_flEffectTime = 0x1174; // entity2::GameTime_t m_flEffectTime; |  Schema_DeclaredClass | Size: 0x4
				constexpr std::ptrdiff_t m_gibDespawnTime = 0x1178; // entity2::GameTime_t m_gibDespawnTime; |  Schema_DeclaredClass | Size: 0x4
				constexpr std::ptrdiff_t m_iCurrentFriction = 0x117c; // int32_t m_iCurrentFriction; |  0x117c | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_iMinFriction = 0x1180; // int32_t m_iMinFriction; |  0x1180 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_iMaxFriction = 0x1184; // int32_t m_iMaxFriction; |  0x1184 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_iFrictionAnimState = 0x1188; // int32_t m_iFrictionAnimState; |  0x1188 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_bReleaseRagdoll = 0x118c; // bool m_bReleaseRagdoll; |  0x118c | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_iEyeAttachment = 0x118d; // modellib::AttachmentHandle_t m_iEyeAttachment; |  Schema_DeclaredClass | Size: 0x1
				constexpr std::ptrdiff_t m_bFadingOut = 0x118e; // bool m_bFadingOut; |  0x118e | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_flScaleEnd = 0x1190; // float32 m_flScaleEnd[10]; |  0x1190 | Schema_FixedArray | Size: 0x28
				constexpr std::ptrdiff_t m_flScaleTimeStart = 0x11b8; // entity2::GameTime_t m_flScaleTimeStart[10]; |  Schema_FixedArray | Size: 0x190
				constexpr std::ptrdiff_t m_flScaleTimeEnd = 0x11e0; // entity2::GameTime_t m_flScaleTimeEnd[10]; |  Schema_FixedArray | Size: 0x190
			}
		}
	}
}
