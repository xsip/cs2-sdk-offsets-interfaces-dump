// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace client {
			// Class size: 0x1380
			namespace C_FuncMonitor /*: public CS2::client::C_FuncBrush*/ {
				constexpr std::ptrdiff_t m_targetCamera = 0xec8; // GlobalTypes::CUtlString m_targetCamera; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_nResolutionEnum = 0xed0; // int32_t m_nResolutionEnum; |  0xed0 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_bRenderShadows = 0xed4; // bool m_bRenderShadows; |  0xed4 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bUseUniqueColorTarget = 0xed5; // bool m_bUseUniqueColorTarget; |  0xed5 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_brushModelName = 0xed8; // GlobalTypes::CUtlString m_brushModelName; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_hTargetCamera = 0xee0; // client::CHandle< client::C_BaseEntity > m_hTargetCamera; |  Schema_Atomic | Size: 0x4
				constexpr std::ptrdiff_t m_bEnabled = 0xee4; // bool m_bEnabled; |  0xee4 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bDraw3DSkybox = 0xee5; // bool m_bDraw3DSkybox; |  0xee5 | Schema_Builtin | Size: 0x1
			}
		}
	}
}
