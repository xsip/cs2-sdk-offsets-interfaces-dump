// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace client {
			// Class size: 0x658
			namespace C_SceneEntity /*: public CS2::client::C_PointEntity*/ {
				constexpr std::ptrdiff_t m_bIsPlayingBack = 0x600; // bool m_bIsPlayingBack; |  0x600 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bPaused = 0x601; // bool m_bPaused; |  0x601 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bMultiplayer = 0x602; // bool m_bMultiplayer; |  0x602 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bAutogenerated = 0x603; // bool m_bAutogenerated; |  0x603 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_flForceClientTime = 0x604; // float32 m_flForceClientTime; |  0x604 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nSceneStringIndex = 0x608; // uint16_t m_nSceneStringIndex; |  0x608 | Schema_Builtin | Size: 0x2
				constexpr std::ptrdiff_t m_bClientOnly = 0x60a; // bool m_bClientOnly; |  0x60a | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_hOwner = 0x60c; // GlobalTypes::CHandle<client::C_BaseFlex>  | Schema_Atomic | Size: 0x4
				constexpr std::ptrdiff_t m_hActorList = 0x610; // client::C_NetworkUtlVectorBase<GlobalTypes::CHandle<client::C_BaseFlex>>  | Schema_Atomic | Size: 0x18
				constexpr std::ptrdiff_t m_bWasPlaying = 0x628; // bool m_bWasPlaying; |  0x628 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_QueuedEvents = 0x638; // GlobalTypes::CUtlVector<client::C_SceneEntity::QueuedEvents_t>  | Schema_Atomic | Size: 0x18
				constexpr std::ptrdiff_t m_flCurrentTime = 0x650; // float32 m_flCurrentTime; |  0x650 | Schema_Builtin | Size: 0x4
			}
		}
	}
}
