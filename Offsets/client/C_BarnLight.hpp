// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace client {
			// Class size: 0x1218
			namespace C_BarnLight /*: public CS2::client::C_BaseModelEntity*/ {
				constexpr std::ptrdiff_t m_bEnabled = 0xec8; // bool m_bEnabled; |  0xec8 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_nColorMode = 0xecc; // int32_t m_nColorMode; |  0xecc | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_Color = 0xed0; // GlobalTypes::Color m_Color; |  Schema_Atomic | Size: 0x4
				constexpr std::ptrdiff_t m_flColorTemperature = 0xed4; // float32 m_flColorTemperature; |  0xed4 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flBrightness = 0xed8; // float32 m_flBrightness; |  0xed8 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flBrightnessScale = 0xedc; // float32 m_flBrightnessScale; |  0xedc | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nDirectLight = 0xee0; // int32_t m_nDirectLight; |  0xee0 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nBakedShadowIndex = 0xee4; // int32_t m_nBakedShadowIndex; |  0xee4 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nLightPathUniqueId = 0xee8; // int32_t m_nLightPathUniqueId; |  0xee8 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nLightMapUniqueId = 0xeec; // int32_t m_nLightMapUniqueId; |  0xeec | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nLuminaireShape = 0xef0; // int32_t m_nLuminaireShape; |  0xef0 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flLuminaireSize = 0xef4; // float32 m_flLuminaireSize; |  0xef4 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flLuminaireAnisotropy = 0xef8; // float32 m_flLuminaireAnisotropy; |  0xef8 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_LightStyleString = 0xf00; // GlobalTypes::CUtlString m_LightStyleString; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_flLightStyleStartTime = 0xf08; // entity2::GameTime_t m_flLightStyleStartTime; |  Schema_DeclaredClass | Size: 0x4
				constexpr std::ptrdiff_t m_QueuedLightStyleStrings = 0xf10; // GlobalTypes::C_NetworkUtlVectorBase< GlobalTypes::CUtlString > m_QueuedLightStyleStrings; |  Schema_Atomic | Size: 0x18
				constexpr std::ptrdiff_t m_LightStyleEvents = 0xf28; // GlobalTypes::C_NetworkUtlVectorBase< GlobalTypes::CUtlString > m_LightStyleEvents; |  Schema_Atomic | Size: 0x18
				constexpr std::ptrdiff_t m_LightStyleTargets = 0xf40; // client::C_NetworkUtlVectorBase< client.dll::CHandle< C_BaseModelEntity > > m_LightStyleTargets; |  Schema_Atomic | Size: 0x18
				constexpr std::ptrdiff_t m_StyleEvent = 0xf58; // entity2::CEntityIOOutput m_StyleEvent[4]; |  Schema_FixedArray | Size: 0x280
				constexpr std::ptrdiff_t m_hLightCookie = 0xff8; // GlobalTypes::CStrongHandle< resourcesystem::InfoForResourceTypeCTextureBase > m_hLightCookie; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_flShape = 0x1000; // float32 m_flShape; |  0x1000 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flSoftX = 0x1004; // float32 m_flSoftX; |  0x1004 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flSoftY = 0x1008; // float32 m_flSoftY; |  0x1008 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flSkirt = 0x100c; // float32 m_flSkirt; |  0x100c | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flSkirtNear = 0x1010; // float32 m_flSkirtNear; |  0x1010 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_vSizeParams = 0x1014; // GlobalTypes::Vector m_vSizeParams; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_flRange = 0x1020; // float32 m_flRange; |  0x1020 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_vShear = 0x1024; // GlobalTypes::Vector m_vShear; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_nBakeSpecularToCubemaps = 0x1030; // int32_t m_nBakeSpecularToCubemaps; |  0x1030 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_vBakeSpecularToCubemapsSize = 0x1034; // GlobalTypes::Vector m_vBakeSpecularToCubemapsSize; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_nCastShadows = 0x1040; // int32_t m_nCastShadows; |  0x1040 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nShadowMapSize = 0x1044; // int32_t m_nShadowMapSize; |  0x1044 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nShadowPriority = 0x1048; // int32_t m_nShadowPriority; |  0x1048 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_bContactShadow = 0x104c; // bool m_bContactShadow; |  0x104c | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bForceShadowsEnabled = 0x104d; // bool m_bForceShadowsEnabled; |  0x104d | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_nBounceLight = 0x1050; // int32_t m_nBounceLight; |  0x1050 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flBounceScale = 0x1054; // float32 m_flBounceScale; |  0x1054 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flMinRoughness = 0x1058; // float32 m_flMinRoughness; |  0x1058 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_vAlternateColor = 0x105c; // GlobalTypes::Vector m_vAlternateColor; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_fAlternateColorBrightness = 0x1068; // float32 m_fAlternateColorBrightness; |  0x1068 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nFog = 0x106c; // int32_t m_nFog; |  0x106c | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flFogStrength = 0x1070; // float32 m_flFogStrength; |  0x1070 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nFogShadows = 0x1074; // int32_t m_nFogShadows; |  0x1074 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flFogScale = 0x1078; // float32 m_flFogScale; |  0x1078 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_bFogMixedShadows = 0x107c; // bool m_bFogMixedShadows; |  0x107c | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_flFadeSizeStart = 0x1080; // float32 m_flFadeSizeStart; |  0x1080 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flFadeSizeEnd = 0x1084; // float32 m_flFadeSizeEnd; |  0x1084 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flShadowFadeSizeStart = 0x1088; // float32 m_flShadowFadeSizeStart; |  0x1088 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flShadowFadeSizeEnd = 0x108c; // float32 m_flShadowFadeSizeEnd; |  0x108c | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_bPrecomputedFieldsValid = 0x1090; // bool m_bPrecomputedFieldsValid; |  0x1090 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_vPrecomputedBoundsMins = 0x1094; // GlobalTypes::Vector m_vPrecomputedBoundsMins; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vPrecomputedBoundsMaxs = 0x10a0; // GlobalTypes::Vector m_vPrecomputedBoundsMaxs; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vPrecomputedOBBOrigin = 0x10ac; // GlobalTypes::Vector m_vPrecomputedOBBOrigin; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vPrecomputedOBBAngles = 0x10b8; // GlobalTypes::QAngle m_vPrecomputedOBBAngles; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vPrecomputedOBBExtent = 0x10c4; // GlobalTypes::Vector m_vPrecomputedOBBExtent; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_nPrecomputedSubFrusta = 0x10d0; // int32_t m_nPrecomputedSubFrusta; |  0x10d0 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_vPrecomputedOBBOrigin0 = 0x10d4; // GlobalTypes::Vector m_vPrecomputedOBBOrigin0; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vPrecomputedOBBAngles0 = 0x10e0; // GlobalTypes::QAngle m_vPrecomputedOBBAngles0; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vPrecomputedOBBExtent0 = 0x10ec; // GlobalTypes::Vector m_vPrecomputedOBBExtent0; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vPrecomputedOBBOrigin1 = 0x10f8; // GlobalTypes::Vector m_vPrecomputedOBBOrigin1; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vPrecomputedOBBAngles1 = 0x1104; // GlobalTypes::QAngle m_vPrecomputedOBBAngles1; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vPrecomputedOBBExtent1 = 0x1110; // GlobalTypes::Vector m_vPrecomputedOBBExtent1; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vPrecomputedOBBOrigin2 = 0x111c; // GlobalTypes::Vector m_vPrecomputedOBBOrigin2; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vPrecomputedOBBAngles2 = 0x1128; // GlobalTypes::QAngle m_vPrecomputedOBBAngles2; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vPrecomputedOBBExtent2 = 0x1134; // GlobalTypes::Vector m_vPrecomputedOBBExtent2; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vPrecomputedOBBOrigin3 = 0x1140; // GlobalTypes::Vector m_vPrecomputedOBBOrigin3; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vPrecomputedOBBAngles3 = 0x114c; // GlobalTypes::QAngle m_vPrecomputedOBBAngles3; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vPrecomputedOBBExtent3 = 0x1158; // GlobalTypes::Vector m_vPrecomputedOBBExtent3; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vPrecomputedOBBOrigin4 = 0x1164; // GlobalTypes::Vector m_vPrecomputedOBBOrigin4; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vPrecomputedOBBAngles4 = 0x1170; // GlobalTypes::QAngle m_vPrecomputedOBBAngles4; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vPrecomputedOBBExtent4 = 0x117c; // GlobalTypes::Vector m_vPrecomputedOBBExtent4; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vPrecomputedOBBOrigin5 = 0x1188; // GlobalTypes::Vector m_vPrecomputedOBBOrigin5; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vPrecomputedOBBAngles5 = 0x1194; // GlobalTypes::QAngle m_vPrecomputedOBBAngles5; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vPrecomputedOBBExtent5 = 0x11a0; // GlobalTypes::Vector m_vPrecomputedOBBExtent5; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_bInitialBoneSetup = 0x11f0; // bool m_bInitialBoneSetup; |  0x11f0 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_VisClusters = 0x11f8; // GlobalTypes::C_NetworkUtlVectorBase< uint16 > m_VisClusters; |  Schema_Atomic | Size: 0x18
			}
		}
	}
}
