// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace client {
			// Class size: 0x1200
			namespace C_BarnLight /*: public CS2::client::C_BaseModelEntity*/ {
				constexpr std::ptrdiff_t m_bEnabled = 0xeb0; // bool m_bEnabled; |  0xeb0 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_nColorMode = 0xeb4; // int32_t m_nColorMode; |  0xeb4 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_Color = 0xeb8; // GlobalTypes::Color  | Schema_Atomic | Size: 0x4
				constexpr std::ptrdiff_t m_flColorTemperature = 0xebc; // float32 m_flColorTemperature; |  0xebc | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flBrightness = 0xec0; // float32 m_flBrightness; |  0xec0 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flBrightnessScale = 0xec4; // float32 m_flBrightnessScale; |  0xec4 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nDirectLight = 0xec8; // int32_t m_nDirectLight; |  0xec8 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nBakedShadowIndex = 0xecc; // int32_t m_nBakedShadowIndex; |  0xecc | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nLightPathUniqueId = 0xed0; // int32_t m_nLightPathUniqueId; |  0xed0 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nLightMapUniqueId = 0xed4; // int32_t m_nLightMapUniqueId; |  0xed4 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nLuminaireShape = 0xed8; // int32_t m_nLuminaireShape; |  0xed8 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flLuminaireSize = 0xedc; // float32 m_flLuminaireSize; |  0xedc | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flLuminaireAnisotropy = 0xee0; // float32 m_flLuminaireAnisotropy; |  0xee0 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_LightStyleString = 0xee8; // GlobalTypes::CUtlString  | Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_flLightStyleStartTime = 0xef0; // entity2::GameTime_t  | Schema_DeclaredClass | Size: 0x4
				constexpr std::ptrdiff_t m_QueuedLightStyleStrings = 0xef8; // GlobalTypes::C_NetworkUtlVectorBase<GlobalTypes::CUtlString>  | Schema_Atomic | Size: 0x18
				constexpr std::ptrdiff_t m_LightStyleEvents = 0xf10; // GlobalTypes::C_NetworkUtlVectorBase<GlobalTypes::CUtlString>  | Schema_Atomic | Size: 0x18
				constexpr std::ptrdiff_t m_LightStyleTargets = 0xf28; // client::C_NetworkUtlVectorBase<GlobalTypes::CHandle<client::C_BaseModelEntity>>  | Schema_Atomic | Size: 0x18
				constexpr std::ptrdiff_t m_StyleEvent = 0xf40; // GlobalTypes::CEntityIOOutput[4]  | Schema_FixedArray | Size: 0x280
				constexpr std::ptrdiff_t m_hLightCookie = 0xfe0; // GlobalTypes::CStrongHandle<resourcesystem::InfoForResourceTypeCTextureBase>  | Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_flShape = 0xfe8; // float32 m_flShape; |  0xfe8 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flSoftX = 0xfec; // float32 m_flSoftX; |  0xfec | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flSoftY = 0xff0; // float32 m_flSoftY; |  0xff0 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flSkirt = 0xff4; // float32 m_flSkirt; |  0xff4 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flSkirtNear = 0xff8; // float32 m_flSkirtNear; |  0xff8 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_vSizeParams = 0xffc; // GlobalTypes::Vector  | Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_flRange = 0x1008; // float32 m_flRange; |  0x1008 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_vShear = 0x100c; // GlobalTypes::Vector  | Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_nBakeSpecularToCubemaps = 0x1018; // int32_t m_nBakeSpecularToCubemaps; |  0x1018 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_vBakeSpecularToCubemapsSize = 0x101c; // GlobalTypes::Vector  | Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_nCastShadows = 0x1028; // int32_t m_nCastShadows; |  0x1028 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nShadowMapSize = 0x102c; // int32_t m_nShadowMapSize; |  0x102c | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nShadowPriority = 0x1030; // int32_t m_nShadowPriority; |  0x1030 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_bContactShadow = 0x1034; // bool m_bContactShadow; |  0x1034 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bForceShadowsEnabled = 0x1035; // bool m_bForceShadowsEnabled; |  0x1035 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_nBounceLight = 0x1038; // int32_t m_nBounceLight; |  0x1038 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flBounceScale = 0x103c; // float32 m_flBounceScale; |  0x103c | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flMinRoughness = 0x1040; // float32 m_flMinRoughness; |  0x1040 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_vAlternateColor = 0x1044; // GlobalTypes::Vector  | Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_fAlternateColorBrightness = 0x1050; // float32 m_fAlternateColorBrightness; |  0x1050 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nFog = 0x1054; // int32_t m_nFog; |  0x1054 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flFogStrength = 0x1058; // float32 m_flFogStrength; |  0x1058 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nFogShadows = 0x105c; // int32_t m_nFogShadows; |  0x105c | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flFogScale = 0x1060; // float32 m_flFogScale; |  0x1060 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_bFogMixedShadows = 0x1064; // bool m_bFogMixedShadows; |  0x1064 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_flFadeSizeStart = 0x1068; // float32 m_flFadeSizeStart; |  0x1068 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flFadeSizeEnd = 0x106c; // float32 m_flFadeSizeEnd; |  0x106c | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flShadowFadeSizeStart = 0x1070; // float32 m_flShadowFadeSizeStart; |  0x1070 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flShadowFadeSizeEnd = 0x1074; // float32 m_flShadowFadeSizeEnd; |  0x1074 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_bPrecomputedFieldsValid = 0x1078; // bool m_bPrecomputedFieldsValid; |  0x1078 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_vPrecomputedBoundsMins = 0x107c; // GlobalTypes::Vector  | Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vPrecomputedBoundsMaxs = 0x1088; // GlobalTypes::Vector  | Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vPrecomputedOBBOrigin = 0x1094; // GlobalTypes::Vector  | Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vPrecomputedOBBAngles = 0x10a0; // GlobalTypes::QAngle  | Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vPrecomputedOBBExtent = 0x10ac; // GlobalTypes::Vector  | Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_nPrecomputedSubFrusta = 0x10b8; // int32_t m_nPrecomputedSubFrusta; |  0x10b8 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_vPrecomputedOBBOrigin0 = 0x10bc; // GlobalTypes::Vector  | Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vPrecomputedOBBAngles0 = 0x10c8; // GlobalTypes::QAngle  | Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vPrecomputedOBBExtent0 = 0x10d4; // GlobalTypes::Vector  | Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vPrecomputedOBBOrigin1 = 0x10e0; // GlobalTypes::Vector  | Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vPrecomputedOBBAngles1 = 0x10ec; // GlobalTypes::QAngle  | Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vPrecomputedOBBExtent1 = 0x10f8; // GlobalTypes::Vector  | Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vPrecomputedOBBOrigin2 = 0x1104; // GlobalTypes::Vector  | Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vPrecomputedOBBAngles2 = 0x1110; // GlobalTypes::QAngle  | Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vPrecomputedOBBExtent2 = 0x111c; // GlobalTypes::Vector  | Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vPrecomputedOBBOrigin3 = 0x1128; // GlobalTypes::Vector  | Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vPrecomputedOBBAngles3 = 0x1134; // GlobalTypes::QAngle  | Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vPrecomputedOBBExtent3 = 0x1140; // GlobalTypes::Vector  | Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vPrecomputedOBBOrigin4 = 0x114c; // GlobalTypes::Vector  | Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vPrecomputedOBBAngles4 = 0x1158; // GlobalTypes::QAngle  | Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vPrecomputedOBBExtent4 = 0x1164; // GlobalTypes::Vector  | Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vPrecomputedOBBOrigin5 = 0x1170; // GlobalTypes::Vector  | Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vPrecomputedOBBAngles5 = 0x117c; // GlobalTypes::QAngle  | Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vPrecomputedOBBExtent5 = 0x1188; // GlobalTypes::Vector  | Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_bInitialBoneSetup = 0x11d8; // bool m_bInitialBoneSetup; |  0x11d8 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_VisClusters = 0x11e0; // GlobalTypes::C_NetworkUtlVectorBase  | Schema_Atomic | Size: 0x18
			}
		}
	}
}
