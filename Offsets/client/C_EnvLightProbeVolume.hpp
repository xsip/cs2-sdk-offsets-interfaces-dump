// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace client {
			// Class size: 0x1688
			namespace C_EnvLightProbeVolume /*: public CS2::client::C_BaseEntity*/ {
				constexpr std::ptrdiff_t m_Entity_hLightProbeTexture_AmbientCube = 0x15f0; // GlobalTypes::CStrongHandle<resourcesystem::InfoForResourceTypeCTextureBase>  | Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_Entity_hLightProbeTexture_SDF = 0x15f8; // GlobalTypes::CStrongHandle<resourcesystem::InfoForResourceTypeCTextureBase>  | Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_Entity_hLightProbeTexture_SH2_DC = 0x1600; // GlobalTypes::CStrongHandle<resourcesystem::InfoForResourceTypeCTextureBase>  | Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_Entity_hLightProbeTexture_SH2_R = 0x1608; // GlobalTypes::CStrongHandle<resourcesystem::InfoForResourceTypeCTextureBase>  | Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_Entity_hLightProbeTexture_SH2_G = 0x1610; // GlobalTypes::CStrongHandle<resourcesystem::InfoForResourceTypeCTextureBase>  | Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_Entity_hLightProbeTexture_SH2_B = 0x1618; // GlobalTypes::CStrongHandle<resourcesystem::InfoForResourceTypeCTextureBase>  | Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_Entity_hLightProbeDirectLightIndicesTexture = 0x1620; // GlobalTypes::CStrongHandle<resourcesystem::InfoForResourceTypeCTextureBase>  | Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_Entity_hLightProbeDirectLightScalarsTexture = 0x1628; // GlobalTypes::CStrongHandle<resourcesystem::InfoForResourceTypeCTextureBase>  | Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_Entity_hLightProbeDirectLightShadowsTexture = 0x1630; // GlobalTypes::CStrongHandle<resourcesystem::InfoForResourceTypeCTextureBase>  | Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_Entity_vBoxMins = 0x1638; // GlobalTypes::Vector  | Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_Entity_vBoxMaxs = 0x1644; // GlobalTypes::Vector  | Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_Entity_bMoveable = 0x1650; // bool m_Entity_bMoveable; |  0x1650 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_Entity_nHandshake = 0x1654; // int32_t m_Entity_nHandshake; |  0x1654 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_Entity_nPriority = 0x1658; // int32_t m_Entity_nPriority; |  0x1658 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_Entity_bStartDisabled = 0x165c; // bool m_Entity_bStartDisabled; |  0x165c | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_Entity_nLightProbeSizeX = 0x1660; // int32_t m_Entity_nLightProbeSizeX; |  0x1660 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_Entity_nLightProbeSizeY = 0x1664; // int32_t m_Entity_nLightProbeSizeY; |  0x1664 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_Entity_nLightProbeSizeZ = 0x1668; // int32_t m_Entity_nLightProbeSizeZ; |  0x1668 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_Entity_nLightProbeAtlasX = 0x166c; // int32_t m_Entity_nLightProbeAtlasX; |  0x166c | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_Entity_nLightProbeAtlasY = 0x1670; // int32_t m_Entity_nLightProbeAtlasY; |  0x1670 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_Entity_nLightProbeAtlasZ = 0x1674; // int32_t m_Entity_nLightProbeAtlasZ; |  0x1674 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_Entity_bEnabled = 0x1681; // bool m_Entity_bEnabled; |  0x1681 | Schema_Builtin | Size: 0x1
			}
		}
	}
}
