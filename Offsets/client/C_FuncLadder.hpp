// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace client {
			// Class size: 0xF08
			namespace C_FuncLadder /*: public CS2::client::C_BaseModelEntity*/ {
				constexpr std::ptrdiff_t m_vecLadderDir = 0xeb0; // GlobalTypes::Vector  | Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_Dismounts = 0xec0; // GlobalTypes::CUtlVector<GlobalTypes::CHandle<client::C_InfoLadderDismount>>  | Schema_Atomic | Size: 0x18
				constexpr std::ptrdiff_t m_vecLocalTop = 0xed8; // GlobalTypes::Vector  | Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vecPlayerMountPositionTop = 0xee4; // GlobalTypes::VectorWS  | Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vecPlayerMountPositionBottom = 0xef0; // GlobalTypes::VectorWS  | Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_flAutoRideSpeed = 0xefc; // float32 m_flAutoRideSpeed; |  0xefc | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_bDisabled = 0xf00; // bool m_bDisabled; |  0xf00 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bFakeLadder = 0xf01; // bool m_bFakeLadder; |  0xf01 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bHasSlack = 0xf02; // bool m_bHasSlack; |  0xf02 | Schema_Builtin | Size: 0x1
			}
		}
	}
}
