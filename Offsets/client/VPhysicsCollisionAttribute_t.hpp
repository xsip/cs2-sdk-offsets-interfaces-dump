// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace client {
			// Class size: 0x30
			namespace VPhysicsCollisionAttribute_t /**/ {
				constexpr std::ptrdiff_t m_nInteractsAs = 0x8; // uint64_t m_nInteractsAs; |  0x8 | Schema_Builtin | Size: 0x8
				constexpr std::ptrdiff_t m_nInteractsWith = 0x10; // uint64_t m_nInteractsWith; |  0x10 | Schema_Builtin | Size: 0x8
				constexpr std::ptrdiff_t m_nInteractsExclude = 0x18; // uint64_t m_nInteractsExclude; |  0x18 | Schema_Builtin | Size: 0x8
				constexpr std::ptrdiff_t m_nEntityId = 0x20; // uint32_t m_nEntityId; |  0x20 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nOwnerId = 0x24; // uint32_t m_nOwnerId; |  0x24 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nHierarchyId = 0x28; // uint16_t m_nHierarchyId; |  0x28 | Schema_Builtin | Size: 0x2
				constexpr std::ptrdiff_t m_nCollisionGroup = 0x2a; // uint8_t m_nCollisionGroup; |  0x2a | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_nCollisionFunctionMask = 0x2b; // uint8_t m_nCollisionFunctionMask; |  0x2b | Schema_Builtin | Size: 0x1
			}
		}
	}
}
