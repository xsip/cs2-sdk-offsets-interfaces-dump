// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace client {
			// Class size: 0x1218
			namespace C_LocalTempEntity /*: public CS2::client::CBaseAnimGraph*/ {
				constexpr std::ptrdiff_t flags = 0x1170; // int32_t flags; |  0x1170 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t die = 0x1174; // entity2::GameTime_t die; |  Schema_DeclaredClass | Size: 0x4
				constexpr std::ptrdiff_t m_flFrameMax = 0x1178; // float32 m_flFrameMax; |  0x1178 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t x = 0x117c; // float32 x; |  0x117c | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t y = 0x1180; // float32 y; |  0x1180 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t fadeSpeed = 0x1184; // float32 fadeSpeed; |  0x1184 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t bounceFactor = 0x1188; // float32 bounceFactor; |  0x1188 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t hitSound = 0x118c; // int32_t hitSound; |  0x118c | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t priority = 0x1190; // int32_t priority; |  0x1190 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t tentOffset = 0x1194; // GlobalTypes::Vector tentOffset; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vecTempEntAngVelocity = 0x11a0; // GlobalTypes::QAngle m_vecTempEntAngVelocity; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t tempent_renderamt = 0x11ac; // int32_t tempent_renderamt; |  0x11ac | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_vecNormal = 0x11b0; // GlobalTypes::Vector m_vecNormal; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_flSpriteScale = 0x11bc; // float32 m_flSpriteScale; |  0x11bc | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nFlickerFrame = 0x11c0; // int32_t m_nFlickerFrame; |  0x11c0 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flFrameRate = 0x11c4; // float32 m_flFrameRate; |  0x11c4 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flFrame = 0x11c8; // float32 m_flFrame; |  0x11c8 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_pszImpactEffect = 0x11d0; // char* m_pszImpactEffect; |  0x11d0 | Schema_Ptr | Size: 0x8
				constexpr std::ptrdiff_t m_pszParticleEffect = 0x11d8; // char* m_pszParticleEffect; |  0x11d8 | Schema_Ptr | Size: 0x8
				constexpr std::ptrdiff_t m_bParticleCollision = 0x11e0; // bool m_bParticleCollision; |  0x11e0 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_iLastCollisionFrame = 0x11e4; // int32_t m_iLastCollisionFrame; |  0x11e4 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_vLastCollisionOrigin = 0x11e8; // GlobalTypes::Vector m_vLastCollisionOrigin; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vecTempEntVelocity = 0x11f4; // GlobalTypes::Vector m_vecTempEntVelocity; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vecPrevAbsOrigin = 0x1200; // GlobalTypes::Vector m_vecPrevAbsOrigin; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vecTempEntAcceleration = 0x120c; // GlobalTypes::Vector m_vecTempEntAcceleration; |  Schema_Atomic | Size: 0xc
			}
		}
	}
}
