// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace client {
			// Class size: 0x1200
			namespace C_LocalTempEntity /*: public CS2::client::CBaseAnimGraph*/ {
				constexpr std::ptrdiff_t flags = 0x1158; // int32_t flags; |  0x1158 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t die = 0x115c; // entity2::GameTime_t  | Schema_DeclaredClass | Size: 0x4
				constexpr std::ptrdiff_t m_flFrameMax = 0x1160; // float32 m_flFrameMax; |  0x1160 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t x = 0x1164; // float32 x; |  0x1164 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t y = 0x1168; // float32 y; |  0x1168 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t fadeSpeed = 0x116c; // float32 fadeSpeed; |  0x116c | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t bounceFactor = 0x1170; // float32 bounceFactor; |  0x1170 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t hitSound = 0x1174; // int32_t hitSound; |  0x1174 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t priority = 0x1178; // int32_t priority; |  0x1178 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t tentOffset = 0x117c; // GlobalTypes::Vector  | Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vecTempEntAngVelocity = 0x1188; // GlobalTypes::QAngle  | Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t tempent_renderamt = 0x1194; // int32_t tempent_renderamt; |  0x1194 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_vecNormal = 0x1198; // GlobalTypes::Vector  | Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_flSpriteScale = 0x11a4; // float32 m_flSpriteScale; |  0x11a4 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nFlickerFrame = 0x11a8; // int32_t m_nFlickerFrame; |  0x11a8 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flFrameRate = 0x11ac; // float32 m_flFrameRate; |  0x11ac | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flFrame = 0x11b0; // float32 m_flFrame; |  0x11b0 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_pszImpactEffect = 0x11b8; // char* m_pszImpactEffect; |  0x11b8 | Schema_Ptr | Size: 0x8
				constexpr std::ptrdiff_t m_pszParticleEffect = 0x11c0; // char* m_pszParticleEffect; |  0x11c0 | Schema_Ptr | Size: 0x8
				constexpr std::ptrdiff_t m_bParticleCollision = 0x11c8; // bool m_bParticleCollision; |  0x11c8 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_iLastCollisionFrame = 0x11cc; // int32_t m_iLastCollisionFrame; |  0x11cc | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_vLastCollisionOrigin = 0x11d0; // GlobalTypes::Vector  | Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vecTempEntVelocity = 0x11dc; // GlobalTypes::Vector  | Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vecPrevAbsOrigin = 0x11e8; // GlobalTypes::Vector  | Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vecTempEntAcceleration = 0x11f4; // GlobalTypes::Vector  | Schema_Atomic | Size: 0xc
			}
		}
	}
}
