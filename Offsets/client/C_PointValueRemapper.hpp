// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace client {
			// Class size: 0x670
			namespace C_PointValueRemapper /*: public CS2::client::C_BaseEntity*/ {
				constexpr std::ptrdiff_t m_bDisabled = 0x5f8; // bool m_bDisabled; |  0x5f8 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bDisabledOld = 0x5f9; // bool m_bDisabledOld; |  0x5f9 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bUpdateOnClient = 0x5fa; // bool m_bUpdateOnClient; |  0x5fa | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_nInputType = 0x5fc; // client::ValueRemapperInputType_t  | Schema_DeclaredEnum | Size: 0x4
				constexpr std::ptrdiff_t m_hRemapLineStart = 0x600; // GlobalTypes::CHandle<client::C_BaseEntity>  | Schema_Atomic | Size: 0x4
				constexpr std::ptrdiff_t m_hRemapLineEnd = 0x604; // GlobalTypes::CHandle<client::C_BaseEntity>  | Schema_Atomic | Size: 0x4
				constexpr std::ptrdiff_t m_flMaximumChangePerSecond = 0x608; // float32 m_flMaximumChangePerSecond; |  0x608 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flDisengageDistance = 0x60c; // float32 m_flDisengageDistance; |  0x60c | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flEngageDistance = 0x610; // float32 m_flEngageDistance; |  0x610 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_bRequiresUseKey = 0x614; // bool m_bRequiresUseKey; |  0x614 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_nOutputType = 0x618; // client::ValueRemapperOutputType_t  | Schema_DeclaredEnum | Size: 0x4
				constexpr std::ptrdiff_t m_hOutputEntities = 0x620; // client::C_NetworkUtlVectorBase<GlobalTypes::CHandle<client::C_BaseEntity>>  | Schema_Atomic | Size: 0x18
				constexpr std::ptrdiff_t m_nHapticsType = 0x638; // client::ValueRemapperHapticsType_t  | Schema_DeclaredEnum | Size: 0x4
				constexpr std::ptrdiff_t m_nMomentumType = 0x63c; // client::ValueRemapperMomentumType_t  | Schema_DeclaredEnum | Size: 0x4
				constexpr std::ptrdiff_t m_flMomentumModifier = 0x640; // float32 m_flMomentumModifier; |  0x640 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flSnapValue = 0x644; // float32 m_flSnapValue; |  0x644 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flCurrentMomentum = 0x648; // float32 m_flCurrentMomentum; |  0x648 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nRatchetType = 0x64c; // client::ValueRemapperRatchetType_t  | Schema_DeclaredEnum | Size: 0x4
				constexpr std::ptrdiff_t m_flRatchetOffset = 0x650; // float32 m_flRatchetOffset; |  0x650 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flInputOffset = 0x654; // float32 m_flInputOffset; |  0x654 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_bEngaged = 0x658; // bool m_bEngaged; |  0x658 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bFirstUpdate = 0x659; // bool m_bFirstUpdate; |  0x659 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_flPreviousValue = 0x65c; // float32 m_flPreviousValue; |  0x65c | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flPreviousUpdateTickTime = 0x660; // entity2::GameTime_t  | Schema_DeclaredClass | Size: 0x4
				constexpr std::ptrdiff_t m_vecPreviousTestPoint = 0x664; // GlobalTypes::Vector  | Schema_Atomic | Size: 0xc
			}
		}
	}
}
