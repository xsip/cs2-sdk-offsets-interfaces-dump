// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace client {
			// Class size: 0x1200
			namespace C_RagdollProp /*: public CS2::client::CBaseAnimGraph*/ {
				constexpr std::ptrdiff_t m_ragEnabled = 0x1178; // GlobalTypes::C_NetworkUtlVectorBase< bool > m_ragEnabled; |  Schema_Atomic | Size: 0x18
				constexpr std::ptrdiff_t m_ragPos = 0x1190; // GlobalTypes::C_NetworkUtlGlobalTypes::VectorBase< Vector > m_ragPos; |  Schema_Atomic | Size: 0x18
				constexpr std::ptrdiff_t m_ragAngles = 0x11a8; // GlobalTypes::C_NetworkUtlVectorBase< GlobalTypes::QAngle > m_ragAngles; |  Schema_Atomic | Size: 0x18
				constexpr std::ptrdiff_t m_flBlendWeight = 0x11c0; // float32 m_flBlendWeight; |  0x11c0 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_hRagdollSource = 0x11c4; // client::CHandle< client::C_BaseEntity > m_hRagdollSource; |  Schema_Atomic | Size: 0x4
				constexpr std::ptrdiff_t m_iEyeAttachment = 0x11c8; // modellib::AttachmentHandle_t m_iEyeAttachment; |  Schema_DeclaredClass | Size: 0x1
				constexpr std::ptrdiff_t m_flBlendWeightCurrent = 0x11cc; // float32 m_flBlendWeightCurrent; |  0x11cc | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_parentPhysicsBoneIndices = 0x11d0; // GlobalTypes::CUtlVector< int32 > m_parentPhysicsBoneIndices; |  Schema_Atomic | Size: 0x18
				constexpr std::ptrdiff_t m_worldSpaceBoneComputationOrder = 0x11e8; // GlobalTypes::CUtlVector< int32 > m_worldSpaceBoneComputationOrder; |  Schema_Atomic | Size: 0x18
			}
		}
	}
}
