// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace client {
			// Class size: 0x28
			namespace CNetworkedSequenceOperation /**/ {
				constexpr std::ptrdiff_t m_hSequence = 0x8; // animationsystem::HSequence m_hSequence; |  Schema_DeclaredClass | Size: 0x4
				constexpr std::ptrdiff_t m_flPrevCycle = 0xc; // float32 m_flPrevCycle; |  0xc | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flCycle = 0x10; // float32 m_flCycle; |  0x10 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flWeight = 0x14; // GlobalTypes::CNetworkedQuantizedFloat m_flWeight; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_bSequenceChangeNetworked = 0x1c; // bool m_bSequenceChangeNetworked; |  0x1c | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bDiscontinuity = 0x1d; // bool m_bDiscontinuity; |  0x1d | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_flPrevCycleFromDiscontinuity = 0x20; // float32 m_flPrevCycleFromDiscontinuity; |  0x20 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flPrevCycleForAnimEventDetection = 0x24; // float32 m_flPrevCycleForAnimEventDetection; |  0x24 | Schema_Builtin | Size: 0x4
			}
		}
	}
}
