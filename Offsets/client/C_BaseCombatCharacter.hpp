// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace client {
			// Class size: 0x1408
			namespace C_BaseCombatCharacter /*: public CS2::client::C_BaseFlex*/ {
				constexpr std::ptrdiff_t m_hMyWearables = 0x1380; // client::C_NetworkUtlVectorBase< client.dll::CHandle< C_EconWearable > > m_hMyWearables; |  Schema_Atomic | Size: 0x18
				constexpr std::ptrdiff_t m_leftFootAttachment = 0x1398; // modellib::AttachmentHandle_t m_leftFootAttachment; |  Schema_DeclaredClass | Size: 0x1
				constexpr std::ptrdiff_t m_rightFootAttachment = 0x1399; // modellib::AttachmentHandle_t m_rightFootAttachment; |  Schema_DeclaredClass | Size: 0x1
				constexpr std::ptrdiff_t m_nWaterWakeMode = 0x139c; // client::WaterWakeMode_t m_nWaterWakeMode; |  Schema_DeclaredEnum | Size: 0x4
				constexpr std::ptrdiff_t m_flWaterWorldZ = 0x13a0; // float32 m_flWaterWorldZ; |  0x13a0 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flWaterNextTraceTime = 0x13a4; // float32 m_flWaterNextTraceTime; |  0x13a4 | Schema_Builtin | Size: 0x4
			}
		}
	}
}
