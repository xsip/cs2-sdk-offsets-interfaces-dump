// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace client {
			// Class size: 0x2050
			namespace C_BaseCSGrenade /*: public CS2::client::C_CSWeaponBase*/ {
				constexpr std::ptrdiff_t m_bClientPredictDelete = 0x1f90; // bool m_bClientPredictDelete; |  0x1f90 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bRedraw = 0x1f91; // bool m_bRedraw; |  0x1f91 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bIsHeldByPlayer = 0x1f92; // bool m_bIsHeldByPlayer; |  0x1f92 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bPinPulled = 0x1f93; // bool m_bPinPulled; |  0x1f93 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bJumpThrow = 0x1f94; // bool m_bJumpThrow; |  0x1f94 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bThrowAnimating = 0x1f95; // bool m_bThrowAnimating; |  0x1f95 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_fThrowTime = 0x1f98; // entity2::GameTime_t m_fThrowTime; |  Schema_DeclaredClass | Size: 0x4
				constexpr std::ptrdiff_t m_flThrowStrength = 0x1fa0; // float32 m_flThrowStrength; |  0x1fa0 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_fDropTime = 0x2018; // entity2::GameTime_t m_fDropTime; |  Schema_DeclaredClass | Size: 0x4
				constexpr std::ptrdiff_t m_fPinPullTime = 0x201c; // entity2::GameTime_t m_fPinPullTime; |  Schema_DeclaredClass | Size: 0x4
				constexpr std::ptrdiff_t m_bJustPulledPin = 0x2020; // bool m_bJustPulledPin; |  0x2020 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_nNextHoldTick = 0x2024; // entity2::GameTick_t m_nNextHoldTick; |  Schema_DeclaredClass | Size: 0x4
				constexpr std::ptrdiff_t m_flNextHoldFrac = 0x2028; // float32 m_flNextHoldFrac; |  0x2028 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_hSwitchToWeaponAfterThrow = 0x202c; // client::CHandle< client::C_CSWeaponBase > m_hSwitchToWeaponAfterThrow; |  Schema_Atomic | Size: 0x4
			}
		}
	}
}
