// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace client {
			// Class size: 0x88
			namespace CDecalInstance /**/ {
				constexpr std::ptrdiff_t m_sDecalGroup = 0x0; // GlobalTypes::CGlobalSymbol m_sDecalGroup; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_hMaterial = 0x8; // GlobalTypes::CStrongHandle< resourcesystem::InfoForResourceTypeIMaterial2 > m_hMaterial; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_sSequenceName = 0x10; // GlobalTypes::CUtlStringToken m_sSequenceName; |  Schema_Atomic | Size: 0x4
				constexpr std::ptrdiff_t m_hEntity = 0x14; // client::CHandle< client::C_BaseEntity > m_hEntity; |  Schema_Atomic | Size: 0x4
				constexpr std::ptrdiff_t m_nBoneIndex = 0x18; // int32_t m_nBoneIndex; |  0x18 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_vPositionLS = 0x1c; // GlobalTypes::Vector m_vPositionLS; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vNormalLS = 0x28; // GlobalTypes::Vector m_vNormalLS; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vSAxisLS = 0x34; // GlobalTypes::Vector m_vSAxisLS; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_nFlags = 0x40; // client::DecalFlags_t m_nFlags; |  Schema_DeclaredEnum | Size: 0x4
				constexpr std::ptrdiff_t m_Color = 0x44; // GlobalTypes::Color m_Color; |  Schema_Atomic | Size: 0x4
				constexpr std::ptrdiff_t m_flWidth = 0x48; // float32 m_flWidth; |  0x48 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flHeight = 0x4c; // float32 m_flHeight; |  0x4c | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flDepth = 0x50; // float32 m_flDepth; |  0x50 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flAnimationScale = 0x54; // float32 m_flAnimationScale; |  0x54 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flPlaceTime = 0x58; // entity2::GameTime_t m_flPlaceTime; |  Schema_DeclaredClass | Size: 0x4
				constexpr std::ptrdiff_t m_flFadeStartTime = 0x5c; // float32 m_flFadeStartTime; |  0x5c | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flFadeDuration = 0x60; // float32 m_flFadeDuration; |  0x60 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flLightingOriginOffset = 0x64; // float32 m_flLightingOriginOffset; |  0x64 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flBoundingRadiusSqr = 0x70; // float32 m_flBoundingRadiusSqr; |  0x70 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nSequenceIndex = 0x74; // int16_t m_nSequenceIndex; |  0x74 | Schema_Builtin | Size: 0x2
				constexpr std::ptrdiff_t m_bIsAdjacent = 0x76; // bool m_bIsAdjacent; |  0x76 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bDoDecalLightmapping = 0x77; // bool m_bDoDecalLightmapping; |  0x77 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_pNext = 0x78; // client::CDecalInstance* m_pNext; |  Schema_Ptr | Size: 0x8
				constexpr std::ptrdiff_t m_pPrev = 0x80; // client::CDecalInstance* m_pPrev; |  Schema_Ptr | Size: 0x8
			}
		}
	}
}
