// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace client {
			// Class size: 0x718
			namespace C_EnvWindController /*: public CS2::client::C_BaseEntity*/ {
				constexpr std::ptrdiff_t m_EnvWindShared = 0x5f8; // client::C_EnvWindShared m_EnvWindShared; |  Schema_DeclaredClass | Size: 0xf8
				constexpr std::ptrdiff_t m_fDirectionVariation = 0x6f0; // float32 m_fDirectionVariation; |  0x6f0 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_fSpeedVariation = 0x6f4; // float32 m_fSpeedVariation; |  0x6f4 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_fTurbulence = 0x6f8; // float32 m_fTurbulence; |  0x6f8 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_fVolumeHalfExtentXY = 0x6fc; // float32 m_fVolumeHalfExtentXY; |  0x6fc | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_fVolumeHalfExtentZ = 0x700; // float32 m_fVolumeHalfExtentZ; |  0x700 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nVolumeResolutionXY = 0x704; // int32_t m_nVolumeResolutionXY; |  0x704 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nVolumeResolutionZ = 0x708; // int32_t m_nVolumeResolutionZ; |  0x708 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nClipmapLevels = 0x70c; // int32_t m_nClipmapLevels; |  0x70c | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_bIsMaster = 0x710; // bool m_bIsMaster; |  0x710 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bFirstTime = 0x711; // bool m_bFirstTime; |  0x711 | Schema_Builtin | Size: 0x1
			}
		}
	}
}
