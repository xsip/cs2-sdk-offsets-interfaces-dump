// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace client {
			// Class size: 0x478
			namespace C_EconItemView /*: public CS2::client::IEconItemInterface*/ {
				constexpr std::ptrdiff_t m_bInventoryImageRgbaRequested = 0x60; // bool m_bInventoryImageRgbaRequested; |  0x60 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bInventoryImageTriedCache = 0x61; // bool m_bInventoryImageTriedCache; |  0x61 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_nInventoryImageRgbaWidth = 0x80; // int32_t m_nInventoryImageRgbaWidth; |  0x80 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nInventoryImageRgbaHeight = 0x84; // int32_t m_nInventoryImageRgbaHeight; |  0x84 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_szCurrentLoadCachedFileName = 0x88; // char m_szCurrentLoadCachedFileName[260]; |  0x88 | Schema_FixedArray | Size: 0x104
				constexpr std::ptrdiff_t m_bRestoreCustomMaterialAfterPrecache = 0x1b8; // bool m_bRestoreCustomMaterialAfterPrecache; |  0x1b8 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_iItemDefinitionIndex = 0x1ba; // uint16_t m_iItemDefinitionIndex; |  0x1ba | Schema_Builtin | Size: 0x2
				constexpr std::ptrdiff_t m_iEntityQuality = 0x1bc; // int32_t m_iEntityQuality; |  0x1bc | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_iEntityLevel = 0x1c0; // uint32_t m_iEntityLevel; |  0x1c0 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_iItemID = 0x1c8; // uint64_t m_iItemID; |  0x1c8 | Schema_Builtin | Size: 0x8
				constexpr std::ptrdiff_t m_iItemIDHigh = 0x1d0; // uint32_t m_iItemIDHigh; |  0x1d0 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_iItemIDLow = 0x1d4; // uint32_t m_iItemIDLow; |  0x1d4 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_iAccountID = 0x1d8; // uint32_t m_iAccountID; |  0x1d8 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_iInventoryPosition = 0x1dc; // uint32_t m_iInventoryPosition; |  0x1dc | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_bInitialized = 0x1e8; // bool m_bInitialized; |  0x1e8 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bDisallowSOC = 0x1e9; // bool m_bDisallowSOC; |  0x1e9 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bIsStoreItem = 0x1ea; // bool m_bIsStoreItem; |  0x1ea | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bIsTradeItem = 0x1eb; // bool m_bIsTradeItem; |  0x1eb | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_iEntityQuantity = 0x1ec; // int32_t m_iEntityQuantity; |  0x1ec | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_iRarityOverride = 0x1f0; // int32_t m_iRarityOverride; |  0x1f0 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_iQualityOverride = 0x1f4; // int32_t m_iQualityOverride; |  0x1f4 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_iOriginOverride = 0x1f8; // int32_t m_iOriginOverride; |  0x1f8 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_ubStyleOverride = 0x1fc; // uint8_t m_ubStyleOverride; |  0x1fc | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_unClientFlags = 0x1fd; // uint8_t m_unClientFlags; |  0x1fd | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_AttributeList = 0x210; // client::CAttributeList m_AttributeList; |  Schema_DeclaredClass | Size: 0x78
				constexpr std::ptrdiff_t m_NetworkedDynamicAttributes = 0x288; // client::CAttributeList m_NetworkedDynamicAttributes; |  Schema_DeclaredClass | Size: 0x78
				constexpr std::ptrdiff_t m_szCustomName = 0x300; // char m_szCustomName[161]; |  0x300 | Schema_FixedArray | Size: 0xa1
				constexpr std::ptrdiff_t m_szCustomNameOverride = 0x3a1; // char m_szCustomNameOverride[161]; |  0x3a1 | Schema_FixedArray | Size: 0xa1
				constexpr std::ptrdiff_t m_bInitializedTags = 0x470; // bool m_bInitializedTags; |  0x470 | Schema_Builtin | Size: 0x1
			}
		}
	}
}
