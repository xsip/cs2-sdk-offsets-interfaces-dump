// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace client {
			// Class size: 0x1D0
			namespace CRR_Response /**/ {
				constexpr std::ptrdiff_t m_Type = 0x0; // uint8_t m_Type; |  0x0 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_szResponseName = 0x1; // char m_szResponseName[192]; |  0x1 | Schema_FixedArray | Size: 0xc0
				constexpr std::ptrdiff_t m_szMatchingRule = 0xc1; // char m_szMatchingRule[128]; |  0xc1 | Schema_FixedArray | Size: 0x80
				constexpr std::ptrdiff_t m_Params = 0x160; // client::ResponseParams  | Schema_DeclaredClass | Size: 0x20
				constexpr std::ptrdiff_t m_fMatchScore = 0x180; // float32 m_fMatchScore; |  0x180 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_bAnyMatchingRulesInCooldown = 0x184; // bool m_bAnyMatchingRulesInCooldown; |  0x184 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_szSpeakerContext = 0x188; // char* m_szSpeakerContext; |  0x188 | Schema_Ptr | Size: 0x8
				constexpr std::ptrdiff_t m_szWorldContext = 0x190; // char* m_szWorldContext; |  0x190 | Schema_Ptr | Size: 0x8
				constexpr std::ptrdiff_t m_Followup = 0x198; // client::ResponseFollowup  | Schema_DeclaredClass | Size: 0x31
				constexpr std::ptrdiff_t m_recipientFilter = 0x1ca; // GlobalTypes::CUtlSymbol  | Schema_Atomic | Size: 0x2
			}
		}
	}
}
