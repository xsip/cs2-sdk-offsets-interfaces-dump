// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace particles {
			// Class size: 0x13F0
			namespace C_OP_RenderStandardLight /*: public CS2::particles::CParticleFunctionRenderer*/ {
				constexpr std::ptrdiff_t m_nLightType = 0x210; // particles::ParticleLightTypeChoiceList_t m_nLightType; |  Schema_DeclaredEnum | Size: 0x4
				constexpr std::ptrdiff_t m_vecColorScale = 0x218; // particleslib::CParticleCollectionVecInput m_vecColorScale; |  Schema_DeclaredClass | Size: 0x678
				constexpr std::ptrdiff_t m_nColorBlendType = 0x890; // particles::ParticleColorBlendType_t m_nColorBlendType; |  Schema_DeclaredEnum | Size: 0x4
				constexpr std::ptrdiff_t m_flIntensity = 0x898; // particleslib::CParticleCollectionFloatInput m_flIntensity; |  Schema_DeclaredClass | Size: 0x160
				constexpr std::ptrdiff_t m_bCastShadows = 0x9f8; // bool m_bCastShadows; |  0x9f8 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_flTheta = 0xa00; // particleslib::CParticleCollectionFloatInput m_flTheta; |  Schema_DeclaredClass | Size: 0x160
				constexpr std::ptrdiff_t m_flPhi = 0xb60; // particleslib::CParticleCollectionFloatInput m_flPhi; |  Schema_DeclaredClass | Size: 0x160
				constexpr std::ptrdiff_t m_flRadiusMultiplier = 0xcc0; // particleslib::CParticleCollectionFloatInput m_flRadiusMultiplier; |  Schema_DeclaredClass | Size: 0x160
				constexpr std::ptrdiff_t m_nAttenuationStyle = 0xe20; // particles::StandardLightingAttenuationStyle_t m_nAttenuationStyle; |  Schema_DeclaredEnum | Size: 0x4
				constexpr std::ptrdiff_t m_flFalloffLinearity = 0xe28; // particleslib::CParticleCollectionFloatInput m_flFalloffLinearity; |  Schema_DeclaredClass | Size: 0x160
				constexpr std::ptrdiff_t m_flFiftyPercentFalloff = 0xf88; // particleslib::CParticleCollectionFloatInput m_flFiftyPercentFalloff; |  Schema_DeclaredClass | Size: 0x160
				constexpr std::ptrdiff_t m_flZeroPercentFalloff = 0x10e8; // particleslib::CParticleCollectionFloatInput m_flZeroPercentFalloff; |  Schema_DeclaredClass | Size: 0x160
				constexpr std::ptrdiff_t m_bRenderDiffuse = 0x1248; // bool m_bRenderDiffuse; |  0x1248 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bRenderSpecular = 0x1249; // bool m_bRenderSpecular; |  0x1249 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_lightCookie = 0x1250; // GlobalTypes::CUtlString m_lightCookie; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_nPriority = 0x1258; // int32_t m_nPriority; |  0x1258 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nFogLightingMode = 0x125c; // particles::ParticleLightFogLightingMode_t m_nFogLightingMode; |  Schema_DeclaredEnum | Size: 0x4
				constexpr std::ptrdiff_t m_flFogContribution = 0x1260; // particleslib::CParticleCollectionRendererFloatInput m_flFogContribution; |  Schema_DeclaredClass | Size: 0x160
				constexpr std::ptrdiff_t m_nCapsuleLightBehavior = 0x13c0; // particles::ParticleLightBehaviorChoiceList_t m_nCapsuleLightBehavior; |  Schema_DeclaredEnum | Size: 0x4
				constexpr std::ptrdiff_t m_flCapsuleLength = 0x13c4; // float32 m_flCapsuleLength; |  0x13c4 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_bReverseOrder = 0x13c8; // bool m_bReverseOrder; |  0x13c8 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bClosedLoop = 0x13c9; // bool m_bClosedLoop; |  0x13c9 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_nPrevPntSource = 0x13cc; // particles::ParticleAttributeIndex_t m_nPrevPntSource; |  Schema_DeclaredClass | Size: 0x4
				constexpr std::ptrdiff_t m_flMaxLength = 0x13d0; // float32 m_flMaxLength; |  0x13d0 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flMinLength = 0x13d4; // float32 m_flMinLength; |  0x13d4 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_bIgnoreDT = 0x13d8; // bool m_bIgnoreDT; |  0x13d8 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_flConstrainRadiusToLengthRatio = 0x13dc; // float32 m_flConstrainRadiusToLengthRatio; |  0x13dc | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flLengthScale = 0x13e0; // float32 m_flLengthScale; |  0x13e0 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flLengthFadeInTime = 0x13e4; // float32 m_flLengthFadeInTime; |  0x13e4 | Schema_Builtin | Size: 0x4
			}
		}
	}
}
