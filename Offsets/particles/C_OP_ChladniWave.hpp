// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace particles {
			// Class size: 0x1448
			namespace C_OP_ChladniWave /*: public CS2::particles::CParticleFunctionOperator*/ {
				constexpr std::ptrdiff_t m_nFieldOutput = 0x1c0; // particles::ParticleAttributeIndex_t m_nFieldOutput; |  Schema_DeclaredClass | Size: 0x4
				constexpr std::ptrdiff_t m_flInputMin = 0x1c8; // particleslib::CPerParticleFloatInput m_flInputMin; |  Schema_DeclaredClass | Size: 0x160
				constexpr std::ptrdiff_t m_flInputMax = 0x328; // particleslib::CPerParticleFloatInput m_flInputMax; |  Schema_DeclaredClass | Size: 0x160
				constexpr std::ptrdiff_t m_flOutputMin = 0x488; // particleslib::CPerParticleFloatInput m_flOutputMin; |  Schema_DeclaredClass | Size: 0x160
				constexpr std::ptrdiff_t m_flOutputMax = 0x5e8; // particleslib::CPerParticleFloatInput m_flOutputMax; |  Schema_DeclaredClass | Size: 0x160
				constexpr std::ptrdiff_t m_vecWaveLength = 0x748; // particleslib::CPerParticleVecInput m_vecWaveLength; |  Schema_DeclaredClass | Size: 0x678
				constexpr std::ptrdiff_t m_vecHarmonics = 0xdc0; // particleslib::CPerParticleVecInput m_vecHarmonics; |  Schema_DeclaredClass | Size: 0x678
				constexpr std::ptrdiff_t m_nSetMethod = 0x1438; // particles::ParticleSetMethod_t m_nSetMethod; |  Schema_DeclaredEnum | Size: 0x4
				constexpr std::ptrdiff_t m_nLocalSpaceControlPoint = 0x143c; // int32_t m_nLocalSpaceControlPoint; |  0x143c | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_b3D = 0x1440; // bool m_b3D; |  0x1440 | Schema_Builtin | Size: 0x1
			}
		}
	}
}
