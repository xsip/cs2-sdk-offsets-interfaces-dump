// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace particles {
			// Class size: 0x3E0
			namespace CParticleSystemDefinition /*: public CS2::particles::IParticleSystemDefinition*/ {
				constexpr std::ptrdiff_t m_nBehaviorVersion = 0x8; // int32_t m_nBehaviorVersion; |  0x8 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_PreEmissionOperators = 0x10; // GlobalTypes::CUtlVector< CParticleFunctionPreEmission >* m_PreEmissionOperators; |  Schema_Atomic | Size: 0x18
				constexpr std::ptrdiff_t m_Emitters = 0x28; // GlobalTypes::CUtlVector< CParticleFunctionEmitter >* m_Emitters; |  Schema_Atomic | Size: 0x18
				constexpr std::ptrdiff_t m_Initializers = 0x40; // GlobalTypes::CUtlVector< CParticleFunctionInitializer >* m_Initializers; |  Schema_Atomic | Size: 0x18
				constexpr std::ptrdiff_t m_Operators = 0x58; // GlobalTypes::CUtlVector< CParticleFunctionOperator >* m_Operators; |  Schema_Atomic | Size: 0x18
				constexpr std::ptrdiff_t m_ForceGenerators = 0x70; // GlobalTypes::CUtlVector< CParticleFunctionForce >* m_ForceGenerators; |  Schema_Atomic | Size: 0x18
				constexpr std::ptrdiff_t m_Constraints = 0x88; // GlobalTypes::CUtlVector< CParticleFunctionConstraint >* m_Constraints; |  Schema_Atomic | Size: 0x18
				constexpr std::ptrdiff_t m_Renderers = 0xa0; // GlobalTypes::CUtlVector< CParticleFunctionRenderer >* m_Renderers; |  Schema_Atomic | Size: 0x18
				constexpr std::ptrdiff_t m_Children = 0xb8; // GlobalTypes::CUtlVector< particles::ParticleChildrenInfo_t > m_Children; |  Schema_Atomic | Size: 0x18
				constexpr std::ptrdiff_t m_nFirstMultipleOverride_BackwardCompat = 0x178; // int32_t m_nFirstMultipleOverride_BackwardCompat; |  0x178 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nInitialParticles = 0x210; // int32_t m_nInitialParticles; |  0x210 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nMaxParticles = 0x214; // int32_t m_nMaxParticles; |  0x214 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nGroupID = 0x218; // int32_t m_nGroupID; |  0x218 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_BoundingBoxMin = 0x21c; // GlobalTypes::Vector m_BoundingBoxMin; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_BoundingBoxMax = 0x228; // GlobalTypes::Vector m_BoundingBoxMax; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_flDepthSortBias = 0x234; // float32 m_flDepthSortBias; |  0x234 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nSortOverridePositionCP = 0x238; // int32_t m_nSortOverridePositionCP; |  0x238 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_bInfiniteBounds = 0x23c; // bool m_bInfiniteBounds; |  0x23c | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bEnableNamedValues = 0x23d; // bool m_bEnableNamedValues; |  0x23d | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_NamedValueDomain = 0x240; // GlobalTypes::CUtlString m_NamedValueDomain; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_NamedValueLocals = 0x248; // GlobalTypes::CUtlVector< ParticleNamedValueSource_t >* m_NamedValueLocals; |  Schema_Atomic | Size: 0x18
				constexpr std::ptrdiff_t m_ConstantColor = 0x260; // GlobalTypes::Color m_ConstantColor; |  Schema_Atomic | Size: 0x4
				constexpr std::ptrdiff_t m_ConstantNormal = 0x264; // GlobalTypes::Vector m_ConstantNormal; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_flConstantRadius = 0x270; // float32 m_flConstantRadius; |  0x270 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flConstantRotation = 0x274; // float32 m_flConstantRotation; |  0x274 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flConstantRotationSpeed = 0x278; // float32 m_flConstantRotationSpeed; |  0x278 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flConstantLifespan = 0x27c; // float32 m_flConstantLifespan; |  0x27c | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nConstantSequenceNumber = 0x280; // int32_t m_nConstantSequenceNumber; |  0x280 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nConstantSequenceNumber1 = 0x284; // int32_t m_nConstantSequenceNumber1; |  0x284 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nSnapshotControlPoint = 0x288; // int32_t m_nSnapshotControlPoint; |  0x288 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_hSnapshot = 0x290; // GlobalTypes::CStrongHandle< resourcesystem::InfoForResourceTypeIParticleSnapshot > m_hSnapshot; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_pszCullReplacementName = 0x298; // GlobalTypes::CStrongHandle< resourcesystem::InfoForResourceTypeIParticleSystemDefinition > m_pszCullReplacementName; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_flCullRadius = 0x2a0; // float32 m_flCullRadius; |  0x2a0 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flCullFillCost = 0x2a4; // float32 m_flCullFillCost; |  0x2a4 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nCullControlPoint = 0x2a8; // int32_t m_nCullControlPoint; |  0x2a8 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_hFallback = 0x2b0; // GlobalTypes::CStrongHandle< resourcesystem::InfoForResourceTypeIParticleSystemDefinition > m_hFallback; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_nFallbackMaxCount = 0x2b8; // int32_t m_nFallbackMaxCount; |  0x2b8 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_hLowViolenceDef = 0x2c0; // GlobalTypes::CStrongHandle< resourcesystem::InfoForResourceTypeIParticleSystemDefinition > m_hLowViolenceDef; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_hReferenceReplacement = 0x2c8; // GlobalTypes::CStrongHandle< resourcesystem::InfoForResourceTypeIParticleSystemDefinition > m_hReferenceReplacement; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_flPreSimulationTime = 0x2d0; // float32 m_flPreSimulationTime; |  0x2d0 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flStopSimulationAfterTime = 0x2d4; // float32 m_flStopSimulationAfterTime; |  0x2d4 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flMaximumTimeStep = 0x2d8; // float32 m_flMaximumTimeStep; |  0x2d8 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flMaximumSimTime = 0x2dc; // float32 m_flMaximumSimTime; |  0x2dc | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flMinimumSimTime = 0x2e0; // float32 m_flMinimumSimTime; |  0x2e0 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flMinimumTimeStep = 0x2e4; // float32 m_flMinimumTimeStep; |  0x2e4 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nMinimumFrames = 0x2e8; // int32_t m_nMinimumFrames; |  0x2e8 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nMinCPULevel = 0x2ec; // int32_t m_nMinCPULevel; |  0x2ec | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nMinGPULevel = 0x2f0; // int32_t m_nMinGPULevel; |  0x2f0 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flNoDrawTimeToGoToSleep = 0x2f4; // float32 m_flNoDrawTimeToGoToSleep; |  0x2f4 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flMaxDrawDistance = 0x2f8; // float32 m_flMaxDrawDistance; |  0x2f8 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flStartFadeDistance = 0x2fc; // float32 m_flStartFadeDistance; |  0x2fc | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flMaxCreationDistance = 0x300; // float32 m_flMaxCreationDistance; |  0x300 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nAggregationMinAvailableParticles = 0x304; // int32_t m_nAggregationMinAvailableParticles; |  0x304 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flAggregateRadius = 0x308; // float32 m_flAggregateRadius; |  0x308 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_bShouldBatch = 0x30c; // bool m_bShouldBatch; |  0x30c | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bShouldHitboxesFallbackToRenderBounds = 0x30d; // bool m_bShouldHitboxesFallbackToRenderBounds; |  0x30d | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bShouldHitboxesFallbackToSnapshot = 0x30e; // bool m_bShouldHitboxesFallbackToSnapshot; |  0x30e | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bShouldHitboxesFallbackToCollisionHulls = 0x30f; // bool m_bShouldHitboxesFallbackToCollisionHulls; |  0x30f | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_nViewModelEffect = 0x310; // particles::InheritableBoolType_t m_nViewModelEffect; |  Schema_DeclaredEnum | Size: 0x4
				constexpr std::ptrdiff_t m_bScreenSpaceEffect = 0x314; // bool m_bScreenSpaceEffect; |  0x314 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_pszTargetLayerID = 0x318; // GlobalTypes::CUtlSymbolLarge m_pszTargetLayerID; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_nSkipRenderControlPoint = 0x320; // int32_t m_nSkipRenderControlPoint; |  0x320 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nAllowRenderControlPoint = 0x324; // int32_t m_nAllowRenderControlPoint; |  0x324 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_bShouldSort = 0x328; // bool m_bShouldSort; |  0x328 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_controlPointConfigurations = 0x370; // GlobalTypes::CUtlVector< particles::ParticleControlPointConfiguration_t > m_controlPointConfigurations; |  Schema_Atomic | Size: 0x18
			}
		}
	}
}
