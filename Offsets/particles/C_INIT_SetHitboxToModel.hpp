// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace particles {
			// Class size: 0xA40
			namespace C_INIT_SetHitboxToModel /*: public CS2::particles::CParticleFunctionInitializer*/ {
				constexpr std::ptrdiff_t m_nControlPointNumber = 0x1c8; // int32_t m_nControlPointNumber; |  0x1c8 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nForceInModel = 0x1cc; // int32_t m_nForceInModel; |  0x1cc | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_bEvenDistribution = 0x1d0; // bool m_bEvenDistribution; |  0x1d0 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_nDesiredHitbox = 0x1d4; // int32_t m_nDesiredHitbox; |  0x1d4 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_vecHitBoxScale = 0x1d8; // particleslib::CParticleCollectionVecInput m_vecHitBoxScale; |  Schema_DeclaredClass | Size: 0x678
				constexpr std::ptrdiff_t m_vecDirectionBias = 0x850; // GlobalTypes::Vector m_vecDirectionBias; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_bMaintainHitbox = 0x85c; // bool m_bMaintainHitbox; |  0x85c | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bUseBones = 0x85d; // bool m_bUseBones; |  0x85d | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_HitboxSetName = 0x85e; // char m_HitboxSetName[128]; |  0x85e | Schema_FixedArray | Size: 0x80
				constexpr std::ptrdiff_t m_flShellSize = 0x8e0; // particleslib::CParticleCollectionFloatInput m_flShellSize; |  Schema_DeclaredClass | Size: 0x160
			}
		}
	}
}
