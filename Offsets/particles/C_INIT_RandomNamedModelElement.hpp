// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace particles {
			// Class size: 0x1F0
			namespace C_INIT_RandomNamedModelElement /*: public CS2::particles::CParticleFunctionInitializer*/ {
				constexpr std::ptrdiff_t m_hModel = 0x1c8; // GlobalTypes::CStrongHandle< resourcesystem::InfoForResourceTypeCModel > m_hModel; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_names = 0x1d0; // GlobalTypes::CUtlVector< GlobalTypes::CUtlString > m_names; |  Schema_Atomic | Size: 0x18
				constexpr std::ptrdiff_t m_bShuffle = 0x1e8; // bool m_bShuffle; |  0x1e8 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bLinear = 0x1e9; // bool m_bLinear; |  0x1e9 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bModelFromRenderer = 0x1ea; // bool m_bModelFromRenderer; |  0x1ea | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_nFieldOutput = 0x1ec; // particles::ParticleAttributeIndex_t m_nFieldOutput; |  Schema_DeclaredClass | Size: 0x4
			}
		}
	}
}
