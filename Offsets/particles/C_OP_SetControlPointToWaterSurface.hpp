// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace particles {
			// Class size: 0x348
			namespace C_OP_SetControlPointToWaterSurface /*: public CS2::particles::CParticleFunctionPreEmission*/ {
				constexpr std::ptrdiff_t m_nSourceCP = 0x1c8; // int32_t m_nSourceCP; |  0x1c8 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nDestCP = 0x1cc; // int32_t m_nDestCP; |  0x1cc | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nFlowCP = 0x1d0; // int32_t m_nFlowCP; |  0x1d0 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nActiveCP = 0x1d4; // int32_t m_nActiveCP; |  0x1d4 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nActiveCPField = 0x1d8; // int32_t m_nActiveCPField; |  0x1d8 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flRetestRate = 0x1e0; // particleslib::CParticleCollectionFloatInput m_flRetestRate; |  Schema_DeclaredClass | Size: 0x160
				constexpr std::ptrdiff_t m_bAdaptiveThreshold = 0x340; // bool m_bAdaptiveThreshold; |  0x340 | Schema_Builtin | Size: 0x1
			}
		}
	}
}
