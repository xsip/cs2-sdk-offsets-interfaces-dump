// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace particles {
			// Class size: 0x1F8
			namespace C_INIT_RandomSequence /*: public CS2::particles::CParticleFunctionInitializer*/ {
				constexpr std::ptrdiff_t m_nSequenceMin = 0x1c8; // int32_t m_nSequenceMin; |  0x1c8 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nSequenceMax = 0x1cc; // int32_t m_nSequenceMax; |  0x1cc | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_bShuffle = 0x1d0; // bool m_bShuffle; |  0x1d0 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bLinear = 0x1d1; // bool m_bLinear; |  0x1d1 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_WeightedList = 0x1d8; // GlobalTypes::CUtlVector< particles::SequenceWeightedList_t > m_WeightedList; |  Schema_Atomic | Size: 0x18
			}
		}
	}
}
