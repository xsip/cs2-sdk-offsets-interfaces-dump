// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace particles {
			// Class size: 0x2CA0
			namespace C_OP_RenderModels /*: public CS2::particles::CParticleFunctionRenderer*/ {
				constexpr std::ptrdiff_t m_bOnlyRenderInEffectsBloomPass = 0x220; // bool m_bOnlyRenderInEffectsBloomPass; |  0x220 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bOnlyRenderInEffectsWaterPass = 0x221; // bool m_bOnlyRenderInEffectsWaterPass; |  0x221 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bUseMixedResolutionRendering = 0x222; // bool m_bUseMixedResolutionRendering; |  0x222 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bOnlyRenderInEffecsGameOverlay = 0x223; // bool m_bOnlyRenderInEffecsGameOverlay; |  0x223 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_ModelList = 0x228; // GlobalTypes::CUtlVector< particles::ModelReference_t > m_ModelList; |  Schema_Atomic | Size: 0x18
				constexpr std::ptrdiff_t m_nBodyGroupField = 0x240; // particles::ParticleAttributeIndex_t m_nBodyGroupField; |  Schema_DeclaredClass | Size: 0x4
				constexpr std::ptrdiff_t m_nSubModelField = 0x244; // particles::ParticleAttributeIndex_t m_nSubModelField; |  Schema_DeclaredClass | Size: 0x4
				constexpr std::ptrdiff_t m_bIgnoreNormal = 0x248; // bool m_bIgnoreNormal; |  0x248 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bOrientZ = 0x249; // bool m_bOrientZ; |  0x249 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bCenterOffset = 0x24a; // bool m_bCenterOffset; |  0x24a | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_vecLocalOffset = 0x250; // particleslib::CPerParticleVecInput m_vecLocalOffset; |  Schema_DeclaredClass | Size: 0x6b8
				constexpr std::ptrdiff_t m_vecLocalRotation = 0x908; // particleslib::CPerParticleVecInput m_vecLocalRotation; |  Schema_DeclaredClass | Size: 0x6b8
				constexpr std::ptrdiff_t m_bIgnoreRadius = 0xfc0; // bool m_bIgnoreRadius; |  0xfc0 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_nModelScaleCP = 0xfc4; // int32_t m_nModelScaleCP; |  0xfc4 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_vecComponentScale = 0xfc8; // particleslib::CPerParticleVecInput m_vecComponentScale; |  Schema_DeclaredClass | Size: 0x6b8
				constexpr std::ptrdiff_t m_bLocalScale = 0x1680; // bool m_bLocalScale; |  0x1680 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_nSizeCullBloat = 0x1684; // int32_t m_nSizeCullBloat; |  0x1684 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_bAnimated = 0x1688; // bool m_bAnimated; |  0x1688 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_flAnimationRate = 0x1690; // particleslib::CPerParticleFloatInput m_flAnimationRate; |  Schema_DeclaredClass | Size: 0x170
				constexpr std::ptrdiff_t m_bScaleAnimationRate = 0x1800; // bool m_bScaleAnimationRate; |  0x1800 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bForceLoopingAnimation = 0x1801; // bool m_bForceLoopingAnimation; |  0x1801 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bResetAnimOnStop = 0x1802; // bool m_bResetAnimOnStop; |  0x1802 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bManualAnimFrame = 0x1803; // bool m_bManualAnimFrame; |  0x1803 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_nAnimationScaleField = 0x1804; // particles::ParticleAttributeIndex_t m_nAnimationScaleField; |  Schema_DeclaredClass | Size: 0x4
				constexpr std::ptrdiff_t m_nAnimationField = 0x1808; // particles::ParticleAttributeIndex_t m_nAnimationField; |  Schema_DeclaredClass | Size: 0x4
				constexpr std::ptrdiff_t m_nManualFrameField = 0x180c; // particles::ParticleAttributeIndex_t m_nManualFrameField; |  Schema_DeclaredClass | Size: 0x4
				constexpr std::ptrdiff_t m_ActivityName = 0x1810; // char m_ActivityName[256]; |  0x1810 | Schema_FixedArray | Size: 0x100
				constexpr std::ptrdiff_t m_SequenceName = 0x1910; // char m_SequenceName[256]; |  0x1910 | Schema_FixedArray | Size: 0x100
				constexpr std::ptrdiff_t m_bEnableClothSimulation = 0x1a10; // bool m_bEnableClothSimulation; |  0x1a10 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_ClothEffectName = 0x1a11; // char m_ClothEffectName[64]; |  0x1a11 | Schema_FixedArray | Size: 0x40
				constexpr std::ptrdiff_t m_hOverrideMaterial = 0x1a58; // GlobalTypes::CStrongHandle< resourcesystem::InfoForResourceTypeIMaterial2 > m_hOverrideMaterial; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_bOverrideTranslucentMaterials = 0x1a60; // bool m_bOverrideTranslucentMaterials; |  0x1a60 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_nSkin = 0x1a68; // particleslib::CPerParticleFloatInput m_nSkin; |  Schema_DeclaredClass | Size: 0x170
				constexpr std::ptrdiff_t m_MaterialVars = 0x1bd8; // GlobalTypes::CUtlVector< particles::MaterialVariable_t > m_MaterialVars; |  Schema_Atomic | Size: 0x18
				constexpr std::ptrdiff_t m_flRenderFilter = 0x1bf0; // particleslib::CPerParticleFloatInput m_flRenderFilter; |  Schema_DeclaredClass | Size: 0x170
				constexpr std::ptrdiff_t m_flManualModelSelection = 0x1d60; // particleslib::CPerParticleFloatInput m_flManualModelSelection; |  Schema_DeclaredClass | Size: 0x170
				constexpr std::ptrdiff_t m_modelInput = 0x1ed0; // particleslib::CParticleModelInput m_modelInput; |  Schema_DeclaredClass | Size: 0x60
				constexpr std::ptrdiff_t m_nLOD = 0x1f30; // int32_t m_nLOD; |  0x1f30 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_EconSlotName = 0x1f34; // char m_EconSlotName[256]; |  0x1f34 | Schema_FixedArray | Size: 0x100
				constexpr std::ptrdiff_t m_bOriginalModel = 0x2034; // bool m_bOriginalModel; |  0x2034 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bSuppressTint = 0x2035; // bool m_bSuppressTint; |  0x2035 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_nSubModelFieldType = 0x2038; // particles::RenderModelSubModelFieldType_t m_nSubModelFieldType; |  Schema_DeclaredEnum | Size: 0x4
				constexpr std::ptrdiff_t m_bDisableShadows = 0x203c; // bool m_bDisableShadows; |  0x203c | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bDisableDepthPrepass = 0x203d; // bool m_bDisableDepthPrepass; |  0x203d | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bAcceptsDecals = 0x203e; // bool m_bAcceptsDecals; |  0x203e | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bForceDrawInterlevedWithSiblings = 0x203f; // bool m_bForceDrawInterlevedWithSiblings; |  0x203f | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bDoNotDrawInParticlePass = 0x2040; // bool m_bDoNotDrawInParticlePass; |  0x2040 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bAllowApproximateTransforms = 0x2041; // bool m_bAllowApproximateTransforms; |  0x2041 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_szRenderAttribute = 0x2042; // char m_szRenderAttribute[260]; |  0x2042 | Schema_FixedArray | Size: 0x104
				constexpr std::ptrdiff_t m_flRadiusScale = 0x2148; // particleslib::CParticleCollectionFloatInput m_flRadiusScale; |  Schema_DeclaredClass | Size: 0x170
				constexpr std::ptrdiff_t m_flAlphaScale = 0x22b8; // particleslib::CParticleCollectionFloatInput m_flAlphaScale; |  Schema_DeclaredClass | Size: 0x170
				constexpr std::ptrdiff_t m_flRollScale = 0x2428; // particleslib::CParticleCollectionFloatInput m_flRollScale; |  Schema_DeclaredClass | Size: 0x170
				constexpr std::ptrdiff_t m_nAlpha2Field = 0x2598; // particles::ParticleAttributeIndex_t m_nAlpha2Field; |  Schema_DeclaredClass | Size: 0x4
				constexpr std::ptrdiff_t m_vecColorScale = 0x25a0; // particleslib::CParticleCollectionVecInput m_vecColorScale; |  Schema_DeclaredClass | Size: 0x6b8
				constexpr std::ptrdiff_t m_nColorBlendType = 0x2c58; // particles::ParticleColorBlendType_t m_nColorBlendType; |  Schema_DeclaredEnum | Size: 0x4
			}
		}
	}
}
