// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace particles {
			// Class size: 0x2B18
			namespace C_OP_RenderModels /*: public CS2::particles::CParticleFunctionRenderer*/ {
				constexpr std::ptrdiff_t m_bOnlyRenderInEffectsBloomPass = 0x210; // bool m_bOnlyRenderInEffectsBloomPass; |  0x210 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bOnlyRenderInEffectsWaterPass = 0x211; // bool m_bOnlyRenderInEffectsWaterPass; |  0x211 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bUseMixedResolutionRendering = 0x212; // bool m_bUseMixedResolutionRendering; |  0x212 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bOnlyRenderInEffecsGameOverlay = 0x213; // bool m_bOnlyRenderInEffecsGameOverlay; |  0x213 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_ModelList = 0x218; // GlobalTypes::CUtlVector< particles::ModelReference_t > m_ModelList; |  Schema_Atomic | Size: 0x18
				constexpr std::ptrdiff_t m_nBodyGroupField = 0x230; // particles::ParticleAttributeIndex_t m_nBodyGroupField; |  Schema_DeclaredClass | Size: 0x4
				constexpr std::ptrdiff_t m_nSubModelField = 0x234; // particles::ParticleAttributeIndex_t m_nSubModelField; |  Schema_DeclaredClass | Size: 0x4
				constexpr std::ptrdiff_t m_bIgnoreNormal = 0x238; // bool m_bIgnoreNormal; |  0x238 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bOrientZ = 0x239; // bool m_bOrientZ; |  0x239 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bCenterOffset = 0x23a; // bool m_bCenterOffset; |  0x23a | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_vecLocalOffset = 0x240; // particleslib::CPerParticleVecInput m_vecLocalOffset; |  Schema_DeclaredClass | Size: 0x678
				constexpr std::ptrdiff_t m_vecLocalRotation = 0x8b8; // particleslib::CPerParticleVecInput m_vecLocalRotation; |  Schema_DeclaredClass | Size: 0x678
				constexpr std::ptrdiff_t m_bIgnoreRadius = 0xf30; // bool m_bIgnoreRadius; |  0xf30 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_nModelScaleCP = 0xf34; // int32_t m_nModelScaleCP; |  0xf34 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_vecComponentScale = 0xf38; // particleslib::CPerParticleVecInput m_vecComponentScale; |  Schema_DeclaredClass | Size: 0x678
				constexpr std::ptrdiff_t m_bLocalScale = 0x15b0; // bool m_bLocalScale; |  0x15b0 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_nSizeCullBloat = 0x15b4; // int32_t m_nSizeCullBloat; |  0x15b4 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_bAnimated = 0x15b8; // bool m_bAnimated; |  0x15b8 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_flAnimationRate = 0x15c0; // particleslib::CPerParticleFloatInput m_flAnimationRate; |  Schema_DeclaredClass | Size: 0x160
				constexpr std::ptrdiff_t m_bScaleAnimationRate = 0x1720; // bool m_bScaleAnimationRate; |  0x1720 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bForceLoopingAnimation = 0x1721; // bool m_bForceLoopingAnimation; |  0x1721 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bResetAnimOnStop = 0x1722; // bool m_bResetAnimOnStop; |  0x1722 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bManualAnimFrame = 0x1723; // bool m_bManualAnimFrame; |  0x1723 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_nAnimationScaleField = 0x1724; // particles::ParticleAttributeIndex_t m_nAnimationScaleField; |  Schema_DeclaredClass | Size: 0x4
				constexpr std::ptrdiff_t m_nAnimationField = 0x1728; // particles::ParticleAttributeIndex_t m_nAnimationField; |  Schema_DeclaredClass | Size: 0x4
				constexpr std::ptrdiff_t m_nManualFrameField = 0x172c; // particles::ParticleAttributeIndex_t m_nManualFrameField; |  Schema_DeclaredClass | Size: 0x4
				constexpr std::ptrdiff_t m_ActivityName = 0x1730; // char m_ActivityName[256]; |  0x1730 | Schema_FixedArray | Size: 0x100
				constexpr std::ptrdiff_t m_SequenceName = 0x1830; // char m_SequenceName[256]; |  0x1830 | Schema_FixedArray | Size: 0x100
				constexpr std::ptrdiff_t m_bEnableClothSimulation = 0x1930; // bool m_bEnableClothSimulation; |  0x1930 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_ClothEffectName = 0x1931; // char m_ClothEffectName[64]; |  0x1931 | Schema_FixedArray | Size: 0x40
				constexpr std::ptrdiff_t m_hOverrideMaterial = 0x1978; // GlobalTypes::CStrongHandle< resourcesystem::InfoForResourceTypeIMaterial2 > m_hOverrideMaterial; |  Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_bOverrideTranslucentMaterials = 0x1980; // bool m_bOverrideTranslucentMaterials; |  0x1980 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_nSkin = 0x1988; // particleslib::CPerParticleFloatInput m_nSkin; |  Schema_DeclaredClass | Size: 0x160
				constexpr std::ptrdiff_t m_MaterialVars = 0x1ae8; // GlobalTypes::CUtlVector< particles::MaterialVariable_t > m_MaterialVars; |  Schema_Atomic | Size: 0x18
				constexpr std::ptrdiff_t m_flRenderFilter = 0x1b00; // particleslib::CPerParticleFloatInput m_flRenderFilter; |  Schema_DeclaredClass | Size: 0x160
				constexpr std::ptrdiff_t m_flManualModelSelection = 0x1c60; // particleslib::CPerParticleFloatInput m_flManualModelSelection; |  Schema_DeclaredClass | Size: 0x160
				constexpr std::ptrdiff_t m_modelInput = 0x1dc0; // particleslib::CParticleModelInput m_modelInput; |  Schema_DeclaredClass | Size: 0x60
				constexpr std::ptrdiff_t m_nLOD = 0x1e20; // int32_t m_nLOD; |  0x1e20 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_EconSlotName = 0x1e24; // char m_EconSlotName[256]; |  0x1e24 | Schema_FixedArray | Size: 0x100
				constexpr std::ptrdiff_t m_bOriginalModel = 0x1f24; // bool m_bOriginalModel; |  0x1f24 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bSuppressTint = 0x1f25; // bool m_bSuppressTint; |  0x1f25 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_nSubModelFieldType = 0x1f28; // particles::RenderModelSubModelFieldType_t m_nSubModelFieldType; |  Schema_DeclaredEnum | Size: 0x4
				constexpr std::ptrdiff_t m_bDisableShadows = 0x1f2c; // bool m_bDisableShadows; |  0x1f2c | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bDisableDepthPrepass = 0x1f2d; // bool m_bDisableDepthPrepass; |  0x1f2d | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bAcceptsDecals = 0x1f2e; // bool m_bAcceptsDecals; |  0x1f2e | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bForceDrawInterlevedWithSiblings = 0x1f2f; // bool m_bForceDrawInterlevedWithSiblings; |  0x1f2f | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bDoNotDrawInParticlePass = 0x1f30; // bool m_bDoNotDrawInParticlePass; |  0x1f30 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bAllowApproximateTransforms = 0x1f31; // bool m_bAllowApproximateTransforms; |  0x1f31 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_szRenderAttribute = 0x1f32; // char m_szRenderAttribute[260]; |  0x1f32 | Schema_FixedArray | Size: 0x104
				constexpr std::ptrdiff_t m_flRadiusScale = 0x2038; // particleslib::CParticleCollectionFloatInput m_flRadiusScale; |  Schema_DeclaredClass | Size: 0x160
				constexpr std::ptrdiff_t m_flAlphaScale = 0x2198; // particleslib::CParticleCollectionFloatInput m_flAlphaScale; |  Schema_DeclaredClass | Size: 0x160
				constexpr std::ptrdiff_t m_flRollScale = 0x22f8; // particleslib::CParticleCollectionFloatInput m_flRollScale; |  Schema_DeclaredClass | Size: 0x160
				constexpr std::ptrdiff_t m_nAlpha2Field = 0x2458; // particles::ParticleAttributeIndex_t m_nAlpha2Field; |  Schema_DeclaredClass | Size: 0x4
				constexpr std::ptrdiff_t m_vecColorScale = 0x2460; // particleslib::CParticleCollectionVecInput m_vecColorScale; |  Schema_DeclaredClass | Size: 0x678
				constexpr std::ptrdiff_t m_nColorBlendType = 0x2ad8; // particles::ParticleColorBlendType_t m_nColorBlendType; |  Schema_DeclaredEnum | Size: 0x4
			}
		}
	}
}
