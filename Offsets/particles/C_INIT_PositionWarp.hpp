// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace particles {
			// Class size: 0xED8
			namespace C_INIT_PositionWarp /*: public CS2::particles::CParticleFunctionInitializer*/ {
				constexpr std::ptrdiff_t m_vecWarpMin = 0x1c8; // particleslib::CParticleCollectionVecInput m_vecWarpMin; |  Schema_DeclaredClass | Size: 0x678
				constexpr std::ptrdiff_t m_vecWarpMax = 0x840; // particleslib::CParticleCollectionVecInput m_vecWarpMax; |  Schema_DeclaredClass | Size: 0x678
				constexpr std::ptrdiff_t m_nScaleControlPointNumber = 0xeb8; // int32_t m_nScaleControlPointNumber; |  0xeb8 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nControlPointNumber = 0xebc; // int32_t m_nControlPointNumber; |  0xebc | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nRadiusComponent = 0xec0; // int32_t m_nRadiusComponent; |  0xec0 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flWarpTime = 0xec4; // float32 m_flWarpTime; |  0xec4 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flWarpStartTime = 0xec8; // float32 m_flWarpStartTime; |  0xec8 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flPrevPosScale = 0xecc; // float32 m_flPrevPosScale; |  0xecc | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_bInvertWarp = 0xed0; // bool m_bInvertWarp; |  0xed0 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bUseCount = 0xed1; // bool m_bUseCount; |  0xed1 | Schema_Builtin | Size: 0x1
			}
		}
	}
}
