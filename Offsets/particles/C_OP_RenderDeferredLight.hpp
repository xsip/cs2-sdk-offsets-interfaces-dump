// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace particles {
			// Class size: 0x918
			namespace C_OP_RenderDeferredLight /*: public CS2::particles::CParticleFunctionRenderer*/ {
				constexpr std::ptrdiff_t m_bUseAlphaTestWindow = 0x220; // bool m_bUseAlphaTestWindow; |  0x220 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bUseTexture = 0x221; // bool m_bUseTexture; |  0x221 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_flRadiusScale = 0x224; // float32 m_flRadiusScale; |  0x224 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flAlphaScale = 0x228; // float32 m_flAlphaScale; |  0x228 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nAlpha2Field = 0x22c; // particles::ParticleAttributeIndex_t  | Schema_DeclaredClass | Size: 0x4
				constexpr std::ptrdiff_t m_vecColorScale = 0x230; // particleslib::CParticleCollectionVecInput  | Schema_DeclaredClass | Size: 0x6b8
				constexpr std::ptrdiff_t m_nColorBlendType = 0x8e8; // particles::ParticleColorBlendType_t  | Schema_DeclaredEnum | Size: 0x4
				constexpr std::ptrdiff_t m_flLightDistance = 0x8ec; // float32 m_flLightDistance; |  0x8ec | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flStartFalloff = 0x8f0; // float32 m_flStartFalloff; |  0x8f0 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flDistanceFalloff = 0x8f4; // float32 m_flDistanceFalloff; |  0x8f4 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flSpotFoV = 0x8f8; // float32 m_flSpotFoV; |  0x8f8 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nAlphaTestPointField = 0x8fc; // particles::ParticleAttributeIndex_t  | Schema_DeclaredClass | Size: 0x4
				constexpr std::ptrdiff_t m_nAlphaTestRangeField = 0x900; // particles::ParticleAttributeIndex_t  | Schema_DeclaredClass | Size: 0x4
				constexpr std::ptrdiff_t m_nAlphaTestSharpnessField = 0x904; // particles::ParticleAttributeIndex_t  | Schema_DeclaredClass | Size: 0x4
				constexpr std::ptrdiff_t m_hTexture = 0x908; // GlobalTypes::CStrongHandle<resourcesystem::InfoForResourceTypeCTextureBase>  | Schema_Atomic | Size: 0x8
				constexpr std::ptrdiff_t m_nHSVShiftControlPoint = 0x910; // int32_t m_nHSVShiftControlPoint; |  0x910 | Schema_Builtin | Size: 0x4
			}
		}
	}
}
