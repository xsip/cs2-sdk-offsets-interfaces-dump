// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace particles {
			// Class size: 0x1E8
			namespace C_INIT_CreateSpiralSphere /*: public CS2::particles::CParticleFunctionInitializer*/ {
				constexpr std::ptrdiff_t m_nControlPointNumber = 0x1c8; // int32_t m_nControlPointNumber; |  0x1c8 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nOverrideCP = 0x1cc; // int32_t m_nOverrideCP; |  0x1cc | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nDensity = 0x1d0; // int32_t m_nDensity; |  0x1d0 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flInitialRadius = 0x1d4; // float32 m_flInitialRadius; |  0x1d4 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flInitialSpeedMin = 0x1d8; // float32 m_flInitialSpeedMin; |  0x1d8 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flInitialSpeedMax = 0x1dc; // float32 m_flInitialSpeedMax; |  0x1dc | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_bUseParticleCount = 0x1e0; // bool m_bUseParticleCount; |  0x1e0 | Schema_Builtin | Size: 0x1
			}
		}
	}
}
