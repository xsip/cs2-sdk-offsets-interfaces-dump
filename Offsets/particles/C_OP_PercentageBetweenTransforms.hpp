// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace particles {
			// Class size: 0x2B0
			namespace C_OP_PercentageBetweenTransforms /*: public CS2::particles::CParticleFunctionOperator*/ {
				constexpr std::ptrdiff_t m_nFieldOutput = 0x1c0; // particles::ParticleAttributeIndex_t m_nFieldOutput; |  Schema_DeclaredClass | Size: 0x4
				constexpr std::ptrdiff_t m_flInputMin = 0x1c4; // float32 m_flInputMin; |  0x1c4 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flInputMax = 0x1c8; // float32 m_flInputMax; |  0x1c8 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flOutputMin = 0x1cc; // float32 m_flOutputMin; |  0x1cc | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flOutputMax = 0x1d0; // float32 m_flOutputMax; |  0x1d0 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_TransformStart = 0x1d8; // particleslib::CParticleTransformInput m_TransformStart; |  Schema_DeclaredClass | Size: 0x68
				constexpr std::ptrdiff_t m_TransformEnd = 0x240; // particleslib::CParticleTransformInput m_TransformEnd; |  Schema_DeclaredClass | Size: 0x68
				constexpr std::ptrdiff_t m_nSetMethod = 0x2a8; // particles::ParticleSetMethod_t m_nSetMethod; |  Schema_DeclaredEnum | Size: 0x4
				constexpr std::ptrdiff_t m_bActiveRange = 0x2ac; // bool m_bActiveRange; |  0x2ac | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bRadialCheck = 0x2ad; // bool m_bRadialCheck; |  0x2ad | Schema_Builtin | Size: 0x1
			}
		}
	}
}
