// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace particles {
			// Class size: 0x210
			namespace C_OP_RampScalarLinear /*: public CS2::particles::CParticleFunctionOperator*/ {
				constexpr std::ptrdiff_t m_RateMin = 0x1c0; // float32 m_RateMin; |  0x1c0 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_RateMax = 0x1c4; // float32 m_RateMax; |  0x1c4 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flStartTime_min = 0x1c8; // float32 m_flStartTime_min; |  0x1c8 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flStartTime_max = 0x1cc; // float32 m_flStartTime_max; |  0x1cc | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flEndTime_min = 0x1d0; // float32 m_flEndTime_min; |  0x1d0 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flEndTime_max = 0x1d4; // float32 m_flEndTime_max; |  0x1d4 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nField = 0x200; // particles::ParticleAttributeIndex_t m_nField; |  Schema_DeclaredClass | Size: 0x4
				constexpr std::ptrdiff_t m_bProportionalOp = 0x204; // bool m_bProportionalOp; |  0x204 | Schema_Builtin | Size: 0x1
			}
		}
	}
}
