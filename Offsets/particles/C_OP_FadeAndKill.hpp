// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace particles {
			// Class size: 0x1F0
			namespace C_OP_FadeAndKill /*: public CS2::particles::CParticleFunctionOperator*/ {
				constexpr std::ptrdiff_t m_flStartFadeInTime = 0x1d0; // float32 m_flStartFadeInTime; |  0x1d0 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flEndFadeInTime = 0x1d4; // float32 m_flEndFadeInTime; |  0x1d4 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flStartFadeOutTime = 0x1d8; // float32 m_flStartFadeOutTime; |  0x1d8 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flEndFadeOutTime = 0x1dc; // float32 m_flEndFadeOutTime; |  0x1dc | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flStartAlpha = 0x1e0; // float32 m_flStartAlpha; |  0x1e0 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flEndAlpha = 0x1e4; // float32 m_flEndAlpha; |  0x1e4 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_bForcePreserveParticleOrder = 0x1e8; // bool m_bForcePreserveParticleOrder; |  0x1e8 | Schema_Builtin | Size: 0x1
			}
		}
	}
}
