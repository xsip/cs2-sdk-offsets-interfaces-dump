// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace particles {
			// Class size: 0x210
			namespace C_OP_SetControlPointPositions /*: public CS2::particles::CParticleFunctionPreEmission*/ {
				constexpr std::ptrdiff_t m_bUseWorldLocation = 0x1c8; // bool m_bUseWorldLocation; |  0x1c8 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bOrient = 0x1c9; // bool m_bOrient; |  0x1c9 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bSetOnce = 0x1ca; // bool m_bSetOnce; |  0x1ca | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_nCP1 = 0x1cc; // int32_t m_nCP1; |  0x1cc | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nCP2 = 0x1d0; // int32_t m_nCP2; |  0x1d0 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nCP3 = 0x1d4; // int32_t m_nCP3; |  0x1d4 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nCP4 = 0x1d8; // int32_t m_nCP4; |  0x1d8 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_vecCP1Pos = 0x1dc; // GlobalTypes::Vector m_vecCP1Pos; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vecCP2Pos = 0x1e8; // GlobalTypes::Vector m_vecCP2Pos; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vecCP3Pos = 0x1f4; // GlobalTypes::Vector m_vecCP3Pos; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vecCP4Pos = 0x200; // GlobalTypes::Vector m_vecCP4Pos; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_nHeadLocation = 0x20c; // int32_t m_nHeadLocation; |  0x20c | Schema_Builtin | Size: 0x4
			}
		}
	}
}
