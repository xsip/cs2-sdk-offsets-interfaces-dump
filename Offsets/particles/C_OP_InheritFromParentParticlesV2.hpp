// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace particles {
			// Class size: 0x5F0
			namespace C_OP_InheritFromParentParticlesV2 /*: public CS2::particles::CParticleFunctionOperator*/ {
				constexpr std::ptrdiff_t m_flScale = 0x1c0; // particleslib::CPerParticleFloatInput m_flScale; |  Schema_DeclaredClass | Size: 0x160
				constexpr std::ptrdiff_t m_nFieldOutput = 0x320; // particles::ParticleAttributeIndex_t m_nFieldOutput; |  Schema_DeclaredClass | Size: 0x4
				constexpr std::ptrdiff_t m_nIncrement = 0x328; // particleslib::CPerParticleFloatInput m_nIncrement; |  Schema_DeclaredClass | Size: 0x160
				constexpr std::ptrdiff_t m_bRandomDistribution = 0x488; // bool m_bRandomDistribution; |  0x488 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bReverse = 0x489; // bool m_bReverse; |  0x489 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_nMissingParentBehavior = 0x48c; // particles::MissingParentInheritBehavior_t m_nMissingParentBehavior; |  Schema_DeclaredEnum | Size: 0x4
				constexpr std::ptrdiff_t m_flInterpolation = 0x490; // particleslib::CPerParticleFloatInput m_flInterpolation; |  Schema_DeclaredClass | Size: 0x160
			}
		}
	}
}
