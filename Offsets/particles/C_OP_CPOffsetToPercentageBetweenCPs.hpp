// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace particles {
			// Class size: 0x1F0
			namespace C_OP_CPOffsetToPercentageBetweenCPs /*: public CS2::particles::CParticleFunctionOperator*/ {
				constexpr std::ptrdiff_t m_flInputMin = 0x1c0; // float32 m_flInputMin; |  0x1c0 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flInputMax = 0x1c4; // float32 m_flInputMax; |  0x1c4 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flInputBias = 0x1c8; // float32 m_flInputBias; |  0x1c8 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nStartCP = 0x1cc; // int32_t m_nStartCP; |  0x1cc | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nEndCP = 0x1d0; // int32_t m_nEndCP; |  0x1d0 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nOffsetCP = 0x1d4; // int32_t m_nOffsetCP; |  0x1d4 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nOuputCP = 0x1d8; // int32_t m_nOuputCP; |  0x1d8 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nInputCP = 0x1dc; // int32_t m_nInputCP; |  0x1dc | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_bRadialCheck = 0x1e0; // bool m_bRadialCheck; |  0x1e0 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bScaleOffset = 0x1e1; // bool m_bScaleOffset; |  0x1e1 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_vecOffset = 0x1e4; // GlobalTypes::Vector m_vecOffset; |  Schema_Atomic | Size: 0xc
			}
		}
	}
}
