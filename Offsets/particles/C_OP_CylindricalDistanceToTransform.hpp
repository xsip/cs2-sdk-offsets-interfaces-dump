// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace particles {
			// Class size: 0x820
			namespace C_OP_CylindricalDistanceToTransform /*: public CS2::particles::CParticleFunctionOperator*/ {
				constexpr std::ptrdiff_t m_nFieldOutput = 0x1c0; // particles::ParticleAttributeIndex_t m_nFieldOutput; |  Schema_DeclaredClass | Size: 0x4
				constexpr std::ptrdiff_t m_flInputMin = 0x1c8; // particleslib::CPerParticleFloatInput m_flInputMin; |  Schema_DeclaredClass | Size: 0x160
				constexpr std::ptrdiff_t m_flInputMax = 0x328; // particleslib::CPerParticleFloatInput m_flInputMax; |  Schema_DeclaredClass | Size: 0x160
				constexpr std::ptrdiff_t m_flOutputMin = 0x488; // particleslib::CPerParticleFloatInput m_flOutputMin; |  Schema_DeclaredClass | Size: 0x160
				constexpr std::ptrdiff_t m_flOutputMax = 0x5e8; // particleslib::CPerParticleFloatInput m_flOutputMax; |  Schema_DeclaredClass | Size: 0x160
				constexpr std::ptrdiff_t m_TransformStart = 0x748; // particleslib::CParticleTransformInput m_TransformStart; |  Schema_DeclaredClass | Size: 0x68
				constexpr std::ptrdiff_t m_TransformEnd = 0x7b0; // particleslib::CParticleTransformInput m_TransformEnd; |  Schema_DeclaredClass | Size: 0x68
				constexpr std::ptrdiff_t m_nSetMethod = 0x818; // particles::ParticleSetMethod_t m_nSetMethod; |  Schema_DeclaredEnum | Size: 0x4
				constexpr std::ptrdiff_t m_bActiveRange = 0x81c; // bool m_bActiveRange; |  0x81c | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bAdditive = 0x81d; // bool m_bAdditive; |  0x81d | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bCapsule = 0x81e; // bool m_bCapsule; |  0x81e | Schema_Builtin | Size: 0x1
			}
		}
	}
}
