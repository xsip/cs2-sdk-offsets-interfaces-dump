// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace particles {
			// Class size: 0x690
			namespace C_OP_RenderGpuImplicit /*: public CS2::particles::CParticleFunctionRenderer*/ {
				constexpr std::ptrdiff_t m_bUsePerParticleRadius = 0x220; // bool m_bUsePerParticleRadius; |  0x220 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_nVertexCountKb = 0x224; // uint32_t m_nVertexCountKb; |  0x224 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nIndexCountKb = 0x228; // uint32_t m_nIndexCountKb; |  0x228 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_fGridSize = 0x230; // particleslib::CParticleCollectionRendererFloatInput  | Schema_DeclaredClass | Size: 0x170
				constexpr std::ptrdiff_t m_fRadiusScale = 0x3a0; // particleslib::CParticleCollectionRendererFloatInput  | Schema_DeclaredClass | Size: 0x170
				constexpr std::ptrdiff_t m_fIsosurfaceThreshold = 0x510; // particleslib::CParticleCollectionRendererFloatInput  | Schema_DeclaredClass | Size: 0x170
				constexpr std::ptrdiff_t m_nScaleCP = 0x680; // int32_t m_nScaleCP; |  0x680 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_hMaterial = 0x688; // GlobalTypes::CStrongHandle<resourcesystem::InfoForResourceTypeIMaterial2>  | Schema_Atomic | Size: 0x8
			}
		}
	}
}
