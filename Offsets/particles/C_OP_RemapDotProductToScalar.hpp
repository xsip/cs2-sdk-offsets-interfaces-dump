// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace particles {
			// Class size: 0x1F8
			namespace C_OP_RemapDotProductToScalar /*: public CS2::particles::CParticleFunctionOperator*/ {
				constexpr std::ptrdiff_t m_nInputCP1 = 0x1d0; // int32_t m_nInputCP1; |  0x1d0 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nInputCP2 = 0x1d4; // int32_t m_nInputCP2; |  0x1d4 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nFieldOutput = 0x1d8; // particles::ParticleAttributeIndex_t m_nFieldOutput; |  Schema_DeclaredClass | Size: 0x4
				constexpr std::ptrdiff_t m_flInputMin = 0x1dc; // float32 m_flInputMin; |  0x1dc | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flInputMax = 0x1e0; // float32 m_flInputMax; |  0x1e0 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flOutputMin = 0x1e4; // float32 m_flOutputMin; |  0x1e4 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flOutputMax = 0x1e8; // float32 m_flOutputMax; |  0x1e8 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_bUseParticleVelocity = 0x1ec; // bool m_bUseParticleVelocity; |  0x1ec | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_nSetMethod = 0x1f0; // particles::ParticleSetMethod_t m_nSetMethod; |  Schema_DeclaredEnum | Size: 0x4
				constexpr std::ptrdiff_t m_bActiveRange = 0x1f4; // bool m_bActiveRange; |  0x1f4 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bUseParticleNormal = 0x1f5; // bool m_bUseParticleNormal; |  0x1f5 | Schema_Builtin | Size: 0x1
			}
		}
	}
}
