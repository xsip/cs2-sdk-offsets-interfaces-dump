// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace particles {
			// Class size: 0x1F8
			namespace C_OP_CycleScalar /*: public CS2::particles::CParticleFunctionOperator*/ {
				constexpr std::ptrdiff_t m_nDestField = 0x1d0; // particles::ParticleAttributeIndex_t m_nDestField; |  Schema_DeclaredClass | Size: 0x4
				constexpr std::ptrdiff_t m_flStartValue = 0x1d4; // float32 m_flStartValue; |  0x1d4 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flEndValue = 0x1d8; // float32 m_flEndValue; |  0x1d8 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_flCycleTime = 0x1dc; // float32 m_flCycleTime; |  0x1dc | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_bDoNotRepeatCycle = 0x1e0; // bool m_bDoNotRepeatCycle; |  0x1e0 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bSynchronizeParticles = 0x1e1; // bool m_bSynchronizeParticles; |  0x1e1 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_nCPScale = 0x1e4; // int32_t m_nCPScale; |  0x1e4 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nCPFieldMin = 0x1e8; // int32_t m_nCPFieldMin; |  0x1e8 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nCPFieldMax = 0x1ec; // int32_t m_nCPFieldMax; |  0x1ec | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nSetMethod = 0x1f0; // particles::ParticleSetMethod_t m_nSetMethod; |  Schema_DeclaredEnum | Size: 0x4
			}
		}
	}
}
