// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace particles {
			// Class size: 0x1028
			namespace C_OP_SetControlPointToVectorExpression /*: public CS2::particles::CParticleFunctionPreEmission*/ {
				constexpr std::ptrdiff_t m_nExpression = 0x1c8; // particles::VectorExpressionType_t m_nExpression; |  Schema_DeclaredEnum | Size: 0x4
				constexpr std::ptrdiff_t m_nOutputCP = 0x1cc; // int32_t m_nOutputCP; |  0x1cc | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_vInput1 = 0x1d0; // particleslib::CParticleCollectionVecInput m_vInput1; |  Schema_DeclaredClass | Size: 0x678
				constexpr std::ptrdiff_t m_vInput2 = 0x848; // particleslib::CParticleCollectionVecInput m_vInput2; |  Schema_DeclaredClass | Size: 0x678
				constexpr std::ptrdiff_t m_flLerp = 0xec0; // particleslib::CPerParticleFloatInput m_flLerp; |  Schema_DeclaredClass | Size: 0x160
				constexpr std::ptrdiff_t m_bNormalizedOutput = 0x1020; // bool m_bNormalizedOutput; |  0x1020 | Schema_Builtin | Size: 0x1
			}
		}
	}
}
