// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace particles {
			// Class size: 0xA38
			namespace C_INIT_SetHitboxToClosest /*: public CS2::particles::CParticleFunctionInitializer*/ {
				constexpr std::ptrdiff_t m_nControlPointNumber = 0x1c8; // int32_t m_nControlPointNumber; |  0x1c8 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nDesiredHitbox = 0x1cc; // int32_t m_nDesiredHitbox; |  0x1cc | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_vecHitBoxScale = 0x1d0; // particleslib::CParticleCollectionVecInput m_vecHitBoxScale; |  Schema_DeclaredClass | Size: 0x678
				constexpr std::ptrdiff_t m_HitboxSetName = 0x848; // char m_HitboxSetName[128]; |  0x848 | Schema_FixedArray | Size: 0x80
				constexpr std::ptrdiff_t m_bUseBones = 0x8c8; // bool m_bUseBones; |  0x8c8 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bUseClosestPointOnHitbox = 0x8c9; // bool m_bUseClosestPointOnHitbox; |  0x8c9 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_nTestType = 0x8cc; // particles::ClosestPointTestType_t m_nTestType; |  Schema_DeclaredEnum | Size: 0x4
				constexpr std::ptrdiff_t m_flHybridRatio = 0x8d0; // particleslib::CParticleCollectionFloatInput m_flHybridRatio; |  Schema_DeclaredClass | Size: 0x160
				constexpr std::ptrdiff_t m_bUpdatePosition = 0xa30; // bool m_bUpdatePosition; |  0xa30 | Schema_Builtin | Size: 0x1
			}
		}
	}
}
