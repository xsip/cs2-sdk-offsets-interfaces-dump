// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace particles {
			// Class size: 0x370
			namespace C_OP_SetControlPointOrientation /*: public CS2::particles::CParticleFunctionPreEmission*/ {
				constexpr std::ptrdiff_t m_bUseWorldLocation = 0x1d8; // bool m_bUseWorldLocation; |  0x1d8 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bRandomize = 0x1da; // bool m_bRandomize; |  0x1da | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bSetOnce = 0x1db; // bool m_bSetOnce; |  0x1db | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_nCP = 0x1dc; // int32_t m_nCP; |  0x1dc | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nHeadLocation = 0x1e0; // int32_t m_nHeadLocation; |  0x1e0 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_vecRotation = 0x1e4; // GlobalTypes::QAngle m_vecRotation; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vecRotationB = 0x1f0; // GlobalTypes::QAngle m_vecRotationB; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_flInterpolation = 0x200; // particleslib::CParticleCollectionFloatInput m_flInterpolation; |  Schema_DeclaredClass | Size: 0x170
			}
		}
	}
}
