// generated - do not edit!
// generated by @xsip cs2 schema generator

#pragma once

#include <cstddef>

namespace CS2 {
	namespace SchemaOffsets {
		namespace particles {
			// Class size: 0x280
			namespace C_INIT_InitialRepulsionVelocity /*: public CS2::particles::CParticleFunctionInitializer*/ {
				constexpr std::ptrdiff_t m_CollisionGroupName = 0x1c8; // char m_CollisionGroupName[128]; |  0x1c8 | Schema_FixedArray | Size: 0x80
				constexpr std::ptrdiff_t m_nTraceSet = 0x248; // particles::ParticleTraceSet_t m_nTraceSet; |  Schema_DeclaredEnum | Size: 0x4
				constexpr std::ptrdiff_t m_vecOutputMin = 0x24c; // GlobalTypes::Vector m_vecOutputMin; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_vecOutputMax = 0x258; // GlobalTypes::Vector m_vecOutputMax; |  Schema_Atomic | Size: 0xc
				constexpr std::ptrdiff_t m_nControlPointNumber = 0x264; // int32_t m_nControlPointNumber; |  0x264 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_bPerParticle = 0x268; // bool m_bPerParticle; |  0x268 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bTranslate = 0x269; // bool m_bTranslate; |  0x269 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bProportional = 0x26a; // bool m_bProportional; |  0x26a | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_flTraceLength = 0x26c; // float32 m_flTraceLength; |  0x26c | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_bPerParticleTR = 0x270; // bool m_bPerParticleTR; |  0x270 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_bInherit = 0x271; // bool m_bInherit; |  0x271 | Schema_Builtin | Size: 0x1
				constexpr std::ptrdiff_t m_nChildCP = 0x274; // int32_t m_nChildCP; |  0x274 | Schema_Builtin | Size: 0x4
				constexpr std::ptrdiff_t m_nChildGroupID = 0x278; // int32_t m_nChildGroupID; |  0x278 | Schema_Builtin | Size: 0x4
			}
		}
	}
}
