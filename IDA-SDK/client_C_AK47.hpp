#pragma once
#include "enums.hpp"
#include "typedefs.hpp"

class entity2_CEntityIdentity;
class entity2_CScriptComponent;
class client_CBodyComponent;
class client_CGameSceneNode;
class client_CRenderComponent;
class client_CCollisionProperty;
class client_CDestructiblePartsComponent;
class client_CClientAlphaProperty;
class client_CBaseAnimGraph;
#include "client_CNetworkTransmitComponent.hpp"
#include "entity2_GameTick_t.hpp"
#include "entity2_GameTime_t.hpp"
#include "client_CNetworkVelocityVector.hpp"
#include "particleslib_CParticleProperty.hpp"
#include "client_CHitboxComponent.hpp"
#include "client_CCollisionProperty.hpp"
#include "client_CGlowProperty.hpp"
#include "client_CNetworkViewOffsetVector.hpp"
#include "client_PhysicsRagdollPose_t.hpp"
#include "client_SceneEventId_t.hpp"
#include "modellib_AttachmentHandle_t.hpp"
#include "client_Emphasized_Phoneme.hpp"
#include "client_C_AttributeContainer.hpp"
#include "entity2_CEntityIOOutput.hpp"
#include "client_C_IronSightController.hpp"

class client_C_AK47 {
    char vTable723[0x8];
    CUtlSymbolLarge m_iszPrivateVScripts;
    entity2_CEntityIdentity* m_pEntity;
    char pad_724[0x18];
    entity2_CScriptComponent* m_CScriptComponent;
    client_CBodyComponent* m_CBodyComponent;
    client_CNetworkTransmitComponent m_NetworkTransmitComponent;
    char pad_705[0x120];
    entity2_GameTick_t m_nLastThinkTick;
    char pad_706[0x4];
    client_CGameSceneNode* m_pGameSceneNode;
    client_CRenderComponent* m_pRenderComponent;
    client_CCollisionProperty* m_pCollision;
    int32_t m_iMaxHealth;
    int32_t m_iHealth;
    float32 m_flDamageAccumulator;
    uint8_t m_lifeState;
    bool m_bTakesDamage;
    char pad_707[0x2];
    client_TakeDamageFlags_t m_nTakeDamageFlags;
    client_EntityPlatformTypes_t m_nPlatformType;
    uint8_t m_ubInterpolationFrame;
    char pad_708[0x2];
    char m_hSceneObjectController[0x4];
    int32_t m_nNoInterpolationTick;
    int32_t m_nVisibilityNoInterpolationTick;
    float32 m_flProxyRandomValue;
    int32_t m_iEFlags;
    uint8_t m_nWaterType;
    bool m_bInterpolateEvenWithNoModel;
    bool m_bPredictionEligible;
    bool m_bApplyLayerMatchIDToModel;
    CUtlStringToken m_tokLayerMatchID;
    CUtlStringToken m_nSubclassID;
    char pad_709[0xc];
    int32_t m_nSimulationTick;
    int32_t m_iCurrentThinkContext;
    char m_aThinkFunctions[0x18];
    bool m_bDisabledContextThinks;
    char pad_710[0x3];
    float32 m_flAnimTime;
    float32 m_flSimulationTime;
    uint8_t m_nSceneObjectOverrideFlags;
    bool m_bHasSuccessfullyInterpolated;
    bool m_bHasAddedVarsToInterpolation;
    bool m_bRenderEvenWhenNotSuccessfullyInterpolated;
    int32_t m_nInterpolationLatchDirtyFlags[2];
    uint16_t m_ListEntry[11];
    char pad_711[0x2];
    entity2_GameTime_t m_flCreateTime;
    float32 m_flSpeed;
    uint16_t m_EntClientFlags;
    bool m_bClientSideRagdoll;
    uint8_t m_iTeamNum;
    uint32_t m_spawnflags;
    entity2_GameTick_t m_nNextThinkTick;
    char pad_712[0x4];
    uint32_t m_fFlags;
    Vector m_vecAbsVelocity;
    client_CNetworkVelocityVector m_vecServerVelocity;
    client_CNetworkVelocityVector m_vecVelocity;
    char pad_713[0xb8];
    Vector m_vecBaseVelocity;
    char m_hEffectEntity[0x4];
    char m_hOwnerEntity[0x4];
    client_MoveCollide_t m_MoveCollide;
    client_MoveType_t m_MoveType;
    client_MoveType_t m_nActualMoveType;
    char pad_714[0x1];
    float32 m_flWaterLevel;
    uint32_t m_fEffects;
    char m_hGroundEntity[0x4];
    int32_t m_nGroundBodyIndex;
    float32 m_flFriction;
    float32 m_flElasticity;
    float32 m_flGravityScale;
    float32 m_flTimeScale;
    bool m_bAnimatedEveryTick;
    bool m_bGravityDisabled;
    char pad_715[0x2];
    entity2_GameTime_t m_flNavIgnoreUntilTime;
    uint16_t m_hThink;
    char pad_716[0xe];
    uint8_t m_fBBoxVisFlags;
    char pad_717[0x3];
    float32 m_flActualGravityScale;
    bool m_bGravityActuallyDisabled;
    bool m_bPredictable;
    bool m_bRenderWithViewModels;
    char pad_718[0x1];
    int32_t m_nFirstPredictableCommand;
    int32_t m_nLastPredictableCommand;
    char m_hOldMoveParent[0x4];
    particleslib_CParticleProperty m_Particles;
    char pad_719[0x8];
    QAngle m_vecAngVelocity;
    int32_t m_DataChangeEventRef;
    char m_dependencies[0x18];
    int32_t m_nCreationTick;
    char pad_720[0x9];
    bool m_bAnimTimeChanged;
    bool m_bSimulationTimeChanged;
    char pad_721[0x9];
    CUtlString m_sUniqueHammerID;
    client_BloodType m_nBloodType;
    char end_pad_722[0x4];
    char vTable599[0x4e8];
    client_CRenderComponent* m_CRenderComponent;
    client_CHitboxComponent m_CHitboxComponent;
    client_CDestructiblePartsComponent* m_pDestructiblePartsSystemComponent;
    client_HitGroup_t m_LastHitGroup;
    char pad_600[0x4];
    CGlobalSymbol m_sLastDamageSourceName;
    VectorWS m_vLastDamagePosition;
    char pad_601[0x1c];
    bool m_bInitModelEffects;
    bool m_bIsStaticProp;
    char pad_602[0x2];
    int32_t m_nLastAddDecal;
    int32_t m_nDecalsAdded;
    int32_t m_iOldHealth;
    client_RenderMode_t m_nRenderMode;
    client_RenderFx_t m_nRenderFX;
    bool m_bAllowFadeInView;
    char pad_603[0x1d];
    Color m_clrRender;
    char pad_604[0x4];
    char m_vecRenderAttributes[0x68];
    char pad_605[0x18];
    bool m_bRenderToCubemaps;
    bool m_bNoInterpolate;
    char pad_606[0x6];
    client_CCollisionProperty m_Collision;
    client_CGlowProperty m_Glow;
    float32 m_flGlowBackfaceMult;
    float32 m_fadeMinDist;
    float32 m_fadeMaxDist;
    float32 m_flFadeScale;
    float32 m_flShadowStrength;
    uint8_t m_nObjectCulling;
    char pad_607[0x3];
    int32_t m_nAddDecal;
    Vector m_vDecalPosition;
    Vector m_vDecalForwardAxis;
    client_DecalMode_t m_nDecalMode;
    client_DecalMode_t m_nRequiredDecalMode;
    char pad_608[0x2];
    char m_ConfigEntitiesToPropagateMaterialDecalsTo[0x18];
    char pad_609[0x28];
    client_CNetworkViewOffsetVector m_vecViewOffset;
    char pad_610[0xb8];
    client_CClientAlphaProperty* m_pClientAlphaProperty;
    Color m_ClientOverrideTint;
    bool m_bUseClientOverrideTint;
    char pad_611[0x3b];
    uint32_t m_bvDisabledHitGroups[1];
    char end_pad_612[0x4];
    char vTable591[0x80];
    bool m_bInitiallyPopulateInterpHistory;
    char pad_592[0x1];
    bool m_bSuppressAnimEventSounds;
    char pad_593[0xd];
    bool m_bAnimGraphUpdateEnabled;
    char pad_594[0x3];
    float32 m_flMaxSlopeDistance;
    VectorWS m_vLastSlopeCheckPos;
    bool m_bAnimationUpdateScheduled;
    char pad_595[0x3];
    Vector m_vecForce;
    int32_t m_nForceBone;
    client_CBaseAnimGraph* m_pClientsideRagdoll;
    bool m_bBuiltRagdoll;
    char pad_596[0x17];
    client_PhysicsRagdollPose_t m_RagdollPose;
    bool m_bRagdollEnabled;
    bool m_bRagdollClientSide;
    char pad_597[0xe];
    bool m_bHasAnimatedMaterialAttributes;
    char end_pad_598[0x177];
    char vTable1164[0x10];
    char m_flexWeight[0x18];
    VectorWS m_vLookTargetPosition;
    char pad_1165[0x84];
    bool m_blinktoggle;
    char pad_1166[0x5f];
    int32_t m_nLastFlexUpdateFrameCount;
    Vector m_CachedViewTarget;
    client_SceneEventId_t m_nNextSceneEventId;
    int32_t m_iBlink;
    float32 m_blinktime;
    bool m_prevblinktoggle;
    char pad_1167[0x3];
    int32_t m_iJawOpen;
    float32 m_flJawOpenAmount;
    float32 m_flBlinkAmount;
    modellib_AttachmentHandle_t m_iMouthAttachment;
    modellib_AttachmentHandle_t m_iEyeAttachment;
    bool m_bResetFlexWeightsOnModelChange;
    char pad_1168[0x19];
    int32_t m_nEyeOcclusionRendererBone;
    matrix3x4_t m_mEyeOcclusionRendererCameraToBoneTransform;
    Vector m_vEyeOcclusionRendererHalfExtent;
    char pad_1169[0x10];
    client_Emphasized_Phoneme m_PhonemeClasses[3];
    char vTable1156[0x10];
    float32 m_flFlexDelayTime;
    char pad_1157[0x4];
    float32* m_flFlexDelayedWeight;
    bool m_bAttributesInitialized;
    char pad_1158[0x7];
    client_C_AttributeContainer m_AttributeManager;
    uint32_t m_OriginalOwnerXuidLow;
    uint32_t m_OriginalOwnerXuidHigh;
    int32_t m_nFallbackPaintKit;
    int32_t m_nFallbackSeed;
    float32 m_flFallbackWear;
    int32_t m_nFallbackStatTrak;
    bool m_bClientside;
    bool m_bParticleSystemsCreated;
    char pad_1159[0x6];
    char m_vecAttachedParticles[0x18];
    char m_hViewmodelAttachment[0x4];
    int32_t m_iOldTeam;
    bool m_bAttachmentDirty;
    char pad_1160[0x3];
    int32_t m_nUnloadedModelIndex;
    int32_t m_iNumOwnerValidationRetries;
    char pad_1161[0xc];
    char m_hOldProvidee[0x4];
    char pad_1162[0x4];
    char m_vecAttachedModels[0x18];
    entity2_GameTick_t m_nNextPrimaryAttackTick;
    float32 m_flNextPrimaryAttackTickRatio;
    entity2_GameTick_t m_nNextSecondaryAttackTick;
    float32 m_flNextSecondaryAttackTickRatio;
    int32_t m_iClip1;
    int32_t m_iClip2;
    int32_t m_pReserveAmmo[2];
    char end_pad_1155[0x18];
    char vTable1133[0x58];
    client_WeaponGameplayAnimState m_iWeaponGameplayAnimState;
    char pad_1134[0x2];
    entity2_GameTime_t m_flWeaponGameplayAnimStateTimestamp;
    entity2_GameTime_t m_flInspectCancelCompleteTime;
    bool m_bInspectPending;
    bool m_bInspectShouldLoop;
    char pad_1135[0x2a];
    float32 m_flCrosshairDistance;
    int32_t m_iAmmoLastCheck;
    int32_t m_nLastEmptySoundCmdNum;
    bool m_bFireOnEmpty;
    char pad_1136[0x3];
    entity2_CEntityIOOutput m_OnPlayerPickup;
    client_CSWeaponMode m_weaponMode;
    float32 m_flTurningInaccuracyDelta;
    Vector m_vecTurningInaccuracyEyeDirLast;
    float32 m_flTurningInaccuracy;
    float32 m_fAccuracyPenalty;
    entity2_GameTime_t m_flLastAccuracyUpdateTime;
    float32 m_fAccuracySmoothedForZoom;
    int32_t m_iRecoilIndex;
    float32 m_flRecoilIndex;
    bool m_bBurstMode;
    char pad_1137[0x3];
    entity2_GameTime_t m_flLastBurstModeChangeTime;
    entity2_GameTick_t m_nPostponeFireReadyTicks;
    float32 m_flPostponeFireReadyFrac;
    bool m_bInReload;
    char pad_1138[0x3];
    entity2_GameTime_t m_flDroppedAtTime;
    bool m_bIsHauledBack;
    bool m_bSilencerOn;
    char pad_1139[0x2];
    entity2_GameTime_t m_flTimeSilencerSwitchComplete;
    int32_t m_iOriginalTeamNumber;
    int32_t m_iMostRecentTeamNumber;
    bool m_bDroppedNearBuyZone;
    char pad_1140[0x3];
    float32 m_flNextAttackRenderTimeOffset;
    char pad_1141[0x9c];
    bool m_bClearWeaponIdentifyingUGC;
    bool m_bVisualsDataSet;
    bool m_bUIWeapon;
    char pad_1142[0x1];
    int32_t m_nCustomEconReloadEventId;
    char pad_1143[0x8];
    entity2_GameTime_t m_nextPrevOwnerUseTime;
    char m_hPrevOwner[0x4];
    entity2_GameTick_t m_nDropTick;
    bool m_bWasActiveWeaponWhenDropped;
    char pad_1144[0x1f];
    bool m_donated;
    char pad_1145[0x3];
    entity2_GameTime_t m_fLastShotTime;
    bool m_bWasOwnedByCT;
    bool m_bWasOwnedByTerrorist;
    char pad_1146[0x2];
    float32 m_flNextClientFireBulletTime;
    float32 m_flNextClientFireBulletTime_Repredict;
    char pad_1147[0x168];
    client_C_IronSightController m_IronSightController;
    int32_t m_iIronSightMode;
    char pad_1148[0x14];
    entity2_GameTime_t m_flLastLOSTraceFailureTime;
    char pad_1149[0x5c];
    float32 m_flWatTickOffset;
    char pad_1150[0x10];
    entity2_GameTime_t m_flLastShakeTime;
    char end_pad_1151[0x1b0];
    int32_t m_zoomLevel;
    int32_t m_iBurstShotsRemaining;
    int32_t m_iSilencerBodygroup;
    char pad_1130[0xc];
    int32_t m_silencedModelIndex;
    bool m_inPrecache;
    bool m_bNeedsBoltAction;
    char pad_1131[0x2];
    int32_t m_nRevolverCylinderIdx;
    char end_pad_1132[0xc];
};
