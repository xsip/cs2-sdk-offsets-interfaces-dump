#pragma once
#include "enums.hpp"
#include "typedefs.hpp"

class entity2_CEntityIdentity;
class entity2_CScriptComponent;
class server_CBodyComponent;
class server_CCollisionProperty;
class server_CPulseGraphInstance_ServerEntity;
class server_CRenderComponent;
class server_CDestructiblePartsComponent;
#include "client_CNetworkTransmitComponent.hpp"
#include "entity2_GameTick_t.hpp"
#include "entity2_GameTime_t.hpp"
#include "entity2_GameTick_t.hpp"
#include "entity2_CEntityIOOutput.hpp"
#include "client_CNetworkVelocityVector.hpp"
#include "entity2_CEntityIOOutput.hpp"
#include "entity2_CEntityIOOutput.hpp"
#include "entity2_CEntityIOOutput.hpp"
#include "entity2_CEntityIOOutput.hpp"
#include "entity2_GameTime_t.hpp"
#include "server_CHitboxComponent.hpp"
#include "entity2_GameTime_t.hpp"
#include "entity2_CEntityIOOutput.hpp"
#include "server_CCollisionProperty.hpp"
#include "server_CGlowProperty.hpp"
#include "client_CNetworkViewOffsetVector.hpp"

class server_CEnvDecal {
    char vTable723[0x8];
    CUtlSymbolLarge m_iszPrivateVScripts;
    entity2_CEntityIdentity* m_pEntity;
    char pad_724[0x18];
    entity2_CScriptComponent* m_CScriptComponent;
    server_CBodyComponent* m_CBodyComponent;
    client_CNetworkTransmitComponent m_NetworkTransmitComponent;
    char pad_2794[0x40];
    char m_aThinkFunctions[0x18];
    int32_t m_iCurrentThinkContext;
    entity2_GameTick_t m_nLastThinkTick;
    bool m_bDisabledContextThinks;
    char pad_2795[0xf];
    char m_isSteadyState[0x8];
    float32 m_lastNetworkChange;
    char pad_2796[0xc];
    char m_ResponseContexts[0x18];
    CUtlSymbolLarge m_iszResponseContext;
    char pad_2797[0x20];
    int32_t m_iHealth;
    int32_t m_iMaxHealth;
    uint8_t m_lifeState;
    char pad_2798[0x3];
    float32 m_flDamageAccumulator;
    bool m_bTakesDamage;
    char pad_2799[0x7];
    client_TakeDamageFlags_t m_nTakeDamageFlags;
    client_EntityPlatformTypes_t m_nPlatformType;
    char pad_2800[0x1];
    client_MoveCollide_t m_MoveCollide;
    client_MoveType_t m_MoveType;
    client_MoveType_t m_nActualMoveType;
    uint8_t m_nWaterTouch;
    uint8_t m_nSlimeTouch;
    bool m_bRestoreInHierarchy;
    CUtlSymbolLarge m_target;
    char m_hDamageFilter[0x4];
    char pad_2801[0x4];
    CUtlSymbolLarge m_iszDamageFilterName;
    float32 m_flMoveDoneTime;
    CUtlStringToken m_nSubclassID;
    char pad_2802[0x8];
    float32 m_flAnimTime;
    float32 m_flSimulationTime;
    entity2_GameTime_t m_flCreateTime;
    bool m_bClientSideRagdoll;
    uint8_t m_ubInterpolationFrame;
    char pad_2803[0x2];
    Vector m_vPrevVPhysicsUpdatePos;
    uint8_t m_iTeamNum;
    char pad_2804[0x3];
    CUtlSymbolLarge m_iGlobalname;
    int32_t m_iSentToClients;
    float32 m_flSpeed;
    CUtlString m_sUniqueHammerID;
    uint32_t m_spawnflags;
    entity2_GameTick_t m_nNextThinkTick;
    int32_t m_nSimulationTick;
    char pad_2805[0x4];
    entity2_CEntityIOOutput m_OnKilled;
    uint32_t m_fFlags;
    Vector m_vecAbsVelocity;
    client_CNetworkVelocityVector m_vecVelocity;
    char pad_2806[0x8];
    Vector m_vecBaseVelocity;
    int32_t m_nPushEnumCount;
    server_CCollisionProperty* m_pCollision;
    char m_hEffectEntity[0x4];
    char m_hOwnerEntity[0x4];
    uint32_t m_fEffects;
    char m_hGroundEntity[0x4];
    int32_t m_nGroundBodyIndex;
    float32 m_flFriction;
    float32 m_flElasticity;
    float32 m_flGravityScale;
    float32 m_flTimeScale;
    float32 m_flWaterLevel;
    bool m_bGravityDisabled;
    bool m_bAnimatedEveryTick;
    char pad_2807[0x2];
    float32 m_flActualGravityScale;
    bool m_bGravityActuallyDisabled;
    bool m_bDisableLowViolence;
    uint8_t m_nWaterType;
    char pad_2808[0x1];
    int32_t m_iEFlags;
    entity2_CEntityIOOutput m_OnUser1;
    entity2_CEntityIOOutput m_OnUser2;
    entity2_CEntityIOOutput m_OnUser3;
    entity2_CEntityIOOutput m_OnUser4;
    int32_t m_iInitialTeamNum;
    entity2_GameTime_t m_flNavIgnoreUntilTime;
    QAngle m_vecAngVelocity;
    bool m_bNetworkQuantizeOriginAndAngles;
    bool m_bLagCompensate;
    char pad_2809[0x2];
    char m_pBlocker[0x4];
    float32 m_flLocalTime;
    float32 m_flVPhysicsUpdateLocalTime;
    client_BloodType m_nBloodType;
    server_CPulseGraphInstance_ServerEntity* m_pPulseGraphInstance;
    server_CRenderComponent* m_CRenderComponent;
    server_CHitboxComponent m_CHitboxComponent;
    client_HitGroup_t m_nDestructiblePartInitialStateDestructed0;
    client_HitGroup_t m_nDestructiblePartInitialStateDestructed1;
    client_HitGroup_t m_nDestructiblePartInitialStateDestructed2;
    client_HitGroup_t m_nDestructiblePartInitialStateDestructed3;
    client_HitGroup_t m_nDestructiblePartInitialStateDestructed4;
    int32_t m_nDestructiblePartInitialStateDestructed0_PartIndex;
    int32_t m_nDestructiblePartInitialStateDestructed1_PartIndex;
    int32_t m_nDestructiblePartInitialStateDestructed2_PartIndex;
    int32_t m_nDestructiblePartInitialStateDestructed3_PartIndex;
    int32_t m_nDestructiblePartInitialStateDestructed4_PartIndex;
    server_CDestructiblePartsComponent* m_pDestructiblePartsSystemComponent;
    client_HitGroup_t m_LastHitGroup;
    char pad_2853[0x4];
    CGlobalSymbol m_sLastDamageSourceName;
    VectorWS m_vLastDamagePosition;
    entity2_GameTime_t m_flDissolveStartTime;
    entity2_CEntityIOOutput m_OnIgnite;
    client_RenderMode_t m_nRenderMode;
    client_RenderFx_t m_nRenderFX;
    bool m_bAllowFadeInView;
    char pad_2854[0x1d];
    Color m_clrRender;
    char pad_2855[0x4];
    char m_vecRenderAttributes[0x68];
    bool m_bRenderToCubemaps;
    bool m_bNoInterpolate;
    char pad_2856[0x6];
    server_CCollisionProperty m_Collision;
    server_CGlowProperty m_Glow;
    float32 m_flGlowBackfaceMult;
    float32 m_fadeMinDist;
    float32 m_fadeMaxDist;
    float32 m_flFadeScale;
    float32 m_flShadowStrength;
    uint8_t m_nObjectCulling;
    char pad_2857[0x3];
    int32_t m_nAddDecal;
    Vector m_vDecalPosition;
    Vector m_vDecalForwardAxis;
    client_DecalMode_t m_nDecalMode;
    client_DecalMode_t m_nRequiredDecalMode;
    char pad_2858[0x2];
    char m_ConfigEntitiesToPropagateMaterialDecalsTo[0x18];
    char pad_2859[0x28];
    client_CNetworkViewOffsetVector m_vecViewOffset;
    char pad_2860[0x8];
    uint32_t m_bvDisabledHitGroups[1];
    char end_pad_2861[0x4];
    char m_hDecalMaterial[0x8];
    float32 m_flWidth;
    float32 m_flHeight;
    float32 m_flDepth;
    uint32_t m_nRenderOrder;
    bool m_bProjectOnWorld;
    bool m_bProjectOnCharacters;
    bool m_bProjectOnWater;
    char pad_3517[0x1];
    float32 m_flDepthSortBias;
};
