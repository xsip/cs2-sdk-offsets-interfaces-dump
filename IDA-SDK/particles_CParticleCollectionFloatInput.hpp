#pragma once
#include "enums.hpp"
#include "typedefs.hpp"

#include "particles_ParticleAttributeIndex_t.hpp"
#include "particles_ParticleAttributeIndex_t.hpp"
#include "particles_ParticleAttributeIndex_t.hpp"

class particles_CParticleCollectionFloatInput {
    char pad_1712[0x10];
    particleslib_ParticleFloatType_t m_nType;
    particleslib_ParticleFloatMapType_t m_nMapType;
    float32 m_flLiteralValue;
    char pad_1705[0x4];
    CParticleNamedValueRef m_NamedValue;
    int32_t m_nControlPoint;
    particles_ParticleAttributeIndex_t m_nScalarAttribute;
    particles_ParticleAttributeIndex_t m_nVectorAttribute;
    int32_t m_nVectorComponent;
    bool m_bReverseOrder;
    char pad_1706[0x3];
    float32 m_flRandomMin;
    float32 m_flRandomMax;
    bool m_bHasRandomSignFlip;
    char pad_1707[0x3];
    int32_t m_nRandomSeed;
    particleslib_ParticleFloatRandomMode_t m_nRandomMode;
    char pad_1708[0x8];
    CUtlString m_strSnapshotSubset;
    float32 m_flLOD0;
    float32 m_flLOD1;
    float32 m_flLOD2;
    float32 m_flLOD3;
    particles_ParticleAttributeIndex_t m_nNoiseInputVectorAttribute;
    float32 m_flNoiseOutputMin;
    float32 m_flNoiseOutputMax;
    float32 m_flNoiseScale;
    Vector m_vecNoiseOffsetRate;
    float32 m_flNoiseOffset;
    int32_t m_nNoiseOctaves;
    particleslib_PFNoiseTurbulence_t m_nNoiseTurbulence;
    particleslib_PFNoiseType_t m_nNoiseType;
    particleslib_PFNoiseModifier_t m_nNoiseModifier;
    float32 m_flNoiseTurbulenceScale;
    float32 m_flNoiseTurbulenceMix;
    float32 m_flNoiseImgPreviewScale;
    bool m_bNoiseImgPreviewLive;
    char pad_1709[0xb];
    float32 m_flNoCameraFallback;
    bool m_bUseBoundsCenter;
    char pad_1710[0x3];
    particleslib_ParticleFloatInputMode_t m_nInputMode;
    float32 m_flMultFactor;
    float32 m_flInput0;
    float32 m_flInput1;
    float32 m_flOutput0;
    float32 m_flOutput1;
    float32 m_flNotchedRangeMin;
    float32 m_flNotchedRangeMax;
    float32 m_flNotchedOutputOutside;
    float32 m_flNotchedOutputInside;
    particleslib_ParticleFloatRoundType_t m_nRoundType;
    particleslib_ParticleFloatBiasType_t m_nBiasType;
    float32 m_flBiasParameter;
    char pad_1711[0x4];
    CPiecewiseCurve m_Curve;
    char pad_1803[0x170];
};
